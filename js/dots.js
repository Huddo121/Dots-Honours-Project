!function(t,e){"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){function i(t){var e=!!t&&"length"in t&&t.length,i=rt.type(t);return"function"===i||rt.isWindow(t)?!1:"array"===i||0===e||"number"==typeof e&&e>0&&e-1 in t}function n(t,e,i){if(rt.isFunction(e))return rt.grep(t,function(t,n){return!!e.call(t,n,t)!==i});if(e.nodeType)return rt.grep(t,function(t){return t===e!==i});if("string"==typeof e){if(mt.test(e))return rt.filter(e,t,i);e=rt.filter(e,t)}return rt.grep(t,function(t){return J.call(e,t)>-1!==i})}function s(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}function r(t){var e={};return rt.each(t.match(xt)||[],function(t,i){e[i]=!0}),e}function o(){$.removeEventListener("DOMContentLoaded",o),t.removeEventListener("load",o),rt.ready()}function a(){this.expando=rt.expando+a.uid++}function l(t,e,i){var n;if(void 0===i&&1===t.nodeType)if(n="data-"+e.replace(It,"-$&").toLowerCase(),i=t.getAttribute(n),"string"==typeof i){try{i="true"===i?!0:"false"===i?!1:"null"===i?null:+i+""===i?+i:Ct.test(i)?rt.parseJSON(i):i}catch(s){}St.set(t,e,i)}else i=void 0;return i}function u(t,e,i,n){var s,r=1,o=20,a=n?function(){return n.cur()}:function(){return rt.css(t,e,"")},l=a(),u=i&&i[3]||(rt.cssNumber[e]?"":"px"),h=(rt.cssNumber[e]||"px"!==u&&+l)&&Et.exec(rt.css(t,e));if(h&&h[3]!==u){u=u||h[3],i=i||[],h=+l||1;do r=r||".5",h/=r,rt.style(t,e,h+u);while(r!==(r=a()/l)&&1!==r&&--o)}return i&&(h=+h||+l||0,s=i[1]?h+(i[1]+1)*i[2]:+i[2],n&&(n.unit=u,n.start=h,n.end=s)),s}function h(t,e){var i="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):[];return void 0===e||e&&rt.nodeName(t,e)?rt.merge([t],i):i}function c(t,e){for(var i=0,n=t.length;n>i;i++)kt.set(t[i],"globalEval",!e||kt.get(e[i],"globalEval"))}function d(t,e,i,n,s){for(var r,o,a,l,u,d,f=e.createDocumentFragment(),p=[],m=0,g=t.length;g>m;m++)if(r=t[m],r||0===r)if("object"===rt.type(r))rt.merge(p,r.nodeType?[r]:r);else if(Rt.test(r)){for(o=o||f.appendChild(e.createElement("div")),a=(Nt.exec(r)||["",""])[1].toLowerCase(),l=zt[a]||zt._default,o.innerHTML=l[1]+rt.htmlPrefilter(r)+l[2],d=l[0];d--;)o=o.lastChild;rt.merge(p,o.childNodes),o=f.firstChild,o.textContent=""}else p.push(e.createTextNode(r));for(f.textContent="",m=0;r=p[m++];)if(n&&rt.inArray(r,n)>-1)s&&s.push(r);else if(u=rt.contains(r.ownerDocument,r),o=h(f.appendChild(r),"script"),u&&c(o),i)for(d=0;r=o[d++];)Ot.test(r.type||"")&&i.push(r);return f}function f(){return!0}function p(){return!1}function m(){try{return $.activeElement}catch(t){}}function g(t,e,i,n,s,r){var o,a;if("object"==typeof e){"string"!=typeof i&&(n=n||i,i=void 0);for(a in e)g(t,a,i,n,e[a],r);return t}if(null==n&&null==s?(s=i,n=i=void 0):null==s&&("string"==typeof i?(s=n,n=void 0):(s=n,n=i,i=void 0)),s===!1)s=p;else if(!s)return t;return 1===r&&(o=s,s=function(t){return rt().off(t),o.apply(this,arguments)},s.guid=o.guid||(o.guid=rt.guid++)),t.each(function(){rt.event.add(this,e,s,n,i)})}function v(t,e){return rt.nodeName(t,"table")&&rt.nodeName(11!==e.nodeType?e:e.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t.appendChild(t.ownerDocument.createElement("tbody")):t}function y(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function _(t){var e=Yt.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function b(t,e){var i,n,s,r,o,a,l,u;if(1===e.nodeType){if(kt.hasData(t)&&(r=kt.access(t),o=kt.set(e,r),u=r.events)){delete o.handle,o.events={};for(s in u)for(i=0,n=u[s].length;n>i;i++)rt.event.add(e,s,u[s][i])}St.hasData(t)&&(a=St.access(t),l=rt.extend({},a),St.set(e,l))}}function x(t,e){var i=e.nodeName.toLowerCase();"input"===i&&Pt.test(t.type)?e.checked=t.checked:("input"===i||"textarea"===i)&&(e.defaultValue=t.defaultValue)}function w(t,e,i,n){e=Z.apply([],e);var s,r,o,a,l,u,c=0,f=t.length,p=f-1,m=e[0],g=rt.isFunction(m);if(g||f>1&&"string"==typeof m&&!nt.checkClone&&Bt.test(m))return t.each(function(s){var r=t.eq(s);g&&(e[0]=m.call(this,s,r.html())),w(r,e,i,n)});if(f&&(s=d(e,t[0].ownerDocument,!1,t,n),r=s.firstChild,1===s.childNodes.length&&(s=r),r||n)){for(o=rt.map(h(s,"script"),y),a=o.length;f>c;c++)l=s,c!==p&&(l=rt.clone(l,!0,!0),a&&rt.merge(o,h(l,"script"))),i.call(t[c],l,c);if(a)for(u=o[o.length-1].ownerDocument,rt.map(o,_),c=0;a>c;c++)l=o[c],Ot.test(l.type||"")&&!kt.access(l,"globalEval")&&rt.contains(u,l)&&(l.src?rt._evalUrl&&rt._evalUrl(l.src):rt.globalEval(l.textContent.replace(Ut,"")))}return t}function M(t,e,i){for(var n,s=e?rt.filter(e,t):t,r=0;null!=(n=s[r]);r++)i||1!==n.nodeType||rt.cleanData(h(n)),n.parentNode&&(i&&rt.contains(n.ownerDocument,n)&&c(h(n,"script")),n.parentNode.removeChild(n));return t}function D(t,e){var i=rt(e.createElement(t)).appendTo(e.body),n=rt.css(i[0],"display");return i.detach(),n}function k(t){var e=$,i=Xt[t];return i||(i=D(t,e),"none"!==i&&i||(Vt=(Vt||rt("<iframe frameborder='0' width='0' height='0'/>")).appendTo(e.documentElement),e=Vt[0].contentDocument,e.write(),e.close(),i=D(t,e),Vt.detach()),Xt[t]=i),i}function S(t,e,i){var n,s,r,o,a=t.style;return i=i||Gt(t),o=i?i.getPropertyValue(e)||i[e]:void 0,""!==o&&void 0!==o||rt.contains(t.ownerDocument,t)||(o=rt.style(t,e)),i&&!nt.pixelMarginRight()&&$t.test(o)&&Kt.test(e)&&(n=a.width,s=a.minWidth,r=a.maxWidth,a.minWidth=a.maxWidth=a.width=o,o=i.width,a.width=n,a.minWidth=s,a.maxWidth=r),void 0!==o?o+"":o}function C(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function I(t){if(t in ne)return t;for(var e=t[0].toUpperCase()+t.slice(1),i=ie.length;i--;)if(t=ie[i]+e,t in ne)return t}function T(t,e,i){var n=Et.exec(e);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):e}function E(t,e,i,n,s){for(var r=i===(n?"border":"content")?4:"width"===e?1:0,o=0;4>r;r+=2)"margin"===i&&(o+=rt.css(t,i+At[r],!0,s)),n?("content"===i&&(o-=rt.css(t,"padding"+At[r],!0,s)),"margin"!==i&&(o-=rt.css(t,"border"+At[r]+"Width",!0,s))):(o+=rt.css(t,"padding"+At[r],!0,s),"padding"!==i&&(o+=rt.css(t,"border"+At[r]+"Width",!0,s)));return o}function A(e,i,n){var s=!0,r="width"===i?e.offsetWidth:e.offsetHeight,o=Gt(e),a="border-box"===rt.css(e,"boxSizing",!1,o);if($.msFullscreenElement&&t.top!==t&&e.getClientRects().length&&(r=Math.round(100*e.getBoundingClientRect()[i])),0>=r||null==r){if(r=S(e,i,o),(0>r||null==r)&&(r=e.style[i]),$t.test(r))return r;s=a&&(nt.boxSizingReliable()||r===e.style[i]),r=parseFloat(r)||0}return r+E(e,i,n||(a?"border":"content"),s,o)+"px"}function F(t,e){for(var i,n,s,r=[],o=0,a=t.length;a>o;o++)n=t[o],n.style&&(r[o]=kt.get(n,"olddisplay"),i=n.style.display,e?(r[o]||"none"!==i||(n.style.display=""),""===n.style.display&&Ft(n)&&(r[o]=kt.access(n,"olddisplay",k(n.nodeName)))):(s=Ft(n),"none"===i&&s||kt.set(n,"olddisplay",s?i:rt.css(n,"display"))));for(o=0;a>o;o++)n=t[o],n.style&&(e&&"none"!==n.style.display&&""!==n.style.display||(n.style.display=e?r[o]||"":"none"));return t}function P(t,e,i,n,s){return new P.prototype.init(t,e,i,n,s)}function N(){return t.setTimeout(function(){se=void 0}),se=rt.now()}function O(t,e){var i,n=0,s={height:t};for(e=e?1:0;4>n;n+=2-e)i=At[n],s["margin"+i]=s["padding"+i]=t;return e&&(s.opacity=s.width=t),s}function z(t,e,i){for(var n,s=(H.tweeners[e]||[]).concat(H.tweeners["*"]),r=0,o=s.length;o>r;r++)if(n=s[r].call(i,e,t))return n}function R(t,e,i){var n,s,r,o,a,l,u,h,c=this,d={},f=t.style,p=t.nodeType&&Ft(t),m=kt.get(t,"fxshow");i.queue||(a=rt._queueHooks(t,"fx"),null==a.unqueued&&(a.unqueued=0,l=a.empty.fire,a.empty.fire=function(){a.unqueued||l()}),a.unqueued++,c.always(function(){c.always(function(){a.unqueued--,rt.queue(t,"fx").length||a.empty.fire()})})),1===t.nodeType&&("height"in e||"width"in e)&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],u=rt.css(t,"display"),h="none"===u?kt.get(t,"olddisplay")||k(t.nodeName):u,"inline"===h&&"none"===rt.css(t,"float")&&(f.display="inline-block")),i.overflow&&(f.overflow="hidden",c.always(function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]}));for(n in e)if(s=e[n],oe.exec(s)){if(delete e[n],r=r||"toggle"===s,s===(p?"hide":"show")){if("show"!==s||!m||void 0===m[n])continue;p=!0}d[n]=m&&m[n]||rt.style(t,n)}else u=void 0;if(rt.isEmptyObject(d))"inline"===("none"===u?k(t.nodeName):u)&&(f.display=u);else{m?"hidden"in m&&(p=m.hidden):m=kt.access(t,"fxshow",{}),r&&(m.hidden=!p),p?rt(t).show():c.done(function(){rt(t).hide()}),c.done(function(){var e;kt.remove(t,"fxshow");for(e in d)rt.style(t,e,d[e])});for(n in d)o=z(p?m[n]:0,n,c),n in m||(m[n]=o.start,p&&(o.end=o.start,o.start="width"===n||"height"===n?1:0))}}function L(t,e){var i,n,s,r,o;for(i in t)if(n=rt.camelCase(i),s=e[n],r=t[i],rt.isArray(r)&&(s=r[1],r=t[i]=r[0]),i!==n&&(t[n]=r,delete t[i]),o=rt.cssHooks[n],o&&"expand"in o){r=o.expand(r),delete t[n];for(i in r)i in t||(t[i]=r[i],e[i]=s)}else e[n]=s}function H(t,e,i){var n,s,r=0,o=H.prefilters.length,a=rt.Deferred().always(function(){delete l.elem}),l=function(){if(s)return!1;for(var e=se||N(),i=Math.max(0,u.startTime+u.duration-e),n=i/u.duration||0,r=1-n,o=0,l=u.tweens.length;l>o;o++)u.tweens[o].run(r);return a.notifyWith(t,[u,r,i]),1>r&&l?i:(a.resolveWith(t,[u]),!1)},u=a.promise({elem:t,props:rt.extend({},e),opts:rt.extend(!0,{specialEasing:{},easing:rt.easing._default},i),originalProperties:e,originalOptions:i,startTime:se||N(),duration:i.duration,tweens:[],createTween:function(e,i){var n=rt.Tween(t,u.opts,e,i,u.opts.specialEasing[e]||u.opts.easing);return u.tweens.push(n),n},stop:function(e){var i=0,n=e?u.tweens.length:0;if(s)return this;for(s=!0;n>i;i++)u.tweens[i].run(1);return e?(a.notifyWith(t,[u,1,0]),a.resolveWith(t,[u,e])):a.rejectWith(t,[u,e]),this}}),h=u.props;for(L(h,u.opts.specialEasing);o>r;r++)if(n=H.prefilters[r].call(u,t,h,u.opts))return rt.isFunction(n.stop)&&(rt._queueHooks(u.elem,u.opts.queue).stop=rt.proxy(n.stop,n)),n;return rt.map(h,z,u),rt.isFunction(u.opts.start)&&u.opts.start.call(t,u),rt.fx.timer(rt.extend(l,{elem:t,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function j(t){return t.getAttribute&&t.getAttribute("class")||""}function q(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var n,s=0,r=e.toLowerCase().match(xt)||[];if(rt.isFunction(i))for(;n=r[s++];)"+"===n[0]?(n=n.slice(1)||"*",(t[n]=t[n]||[]).unshift(i)):(t[n]=t[n]||[]).push(i)}}function W(t,e,i,n){function s(a){var l;return r[a]=!0,rt.each(t[a]||[],function(t,a){var u=a(e,i,n);return"string"!=typeof u||o||r[u]?o?!(l=u):void 0:(e.dataTypes.unshift(u),s(u),!1)}),l}var r={},o=t===ke;return s(e.dataTypes[0])||!r["*"]&&s("*")}function B(t,e){var i,n,s=rt.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((s[i]?t:n||(n={}))[i]=e[i]);return n&&rt.extend(!0,t,n),t}function Y(t,e,i){for(var n,s,r,o,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=t.mimeType||e.getResponseHeader("Content-Type"));if(n)for(s in a)if(a[s]&&a[s].test(n)){l.unshift(s);break}if(l[0]in i)r=l[0];else{for(s in i){if(!l[0]||t.converters[s+" "+l[0]]){r=s;break}o||(o=s)}r=r||o}return r?(r!==l[0]&&l.unshift(r),i[r]):void 0}function U(t,e,i,n){var s,r,o,a,l,u={},h=t.dataTypes.slice();if(h[1])for(o in t.converters)u[o.toLowerCase()]=t.converters[o];for(r=h.shift();r;)if(t.responseFields[r]&&(i[t.responseFields[r]]=e),!l&&n&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=r,r=h.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(o=u[l+" "+r]||u["* "+r],!o)for(s in u)if(a=s.split(" "),a[1]===r&&(o=u[l+" "+a[0]]||u["* "+a[0]])){o===!0?o=u[s]:u[s]!==!0&&(r=a[0],h.unshift(a[1]));break}if(o!==!0)if(o&&t["throws"])e=o(e);else try{e=o(e)}catch(c){return{state:"parsererror",error:o?c:"No conversion from "+l+" to "+r}}}return{state:"success",data:e}}function V(t,e,i,n){var s;if(rt.isArray(e))rt.each(e,function(e,s){i||Te.test(t)?n(t,s):V(t+"["+("object"==typeof s&&null!=s?e:"")+"]",s,i,n)});else if(i||"object"!==rt.type(e))n(t,e);else for(s in e)V(t+"["+s+"]",e[s],i,n)}function X(t){return rt.isWindow(t)?t:9===t.nodeType&&t.defaultView}var K=[],$=t.document,G=K.slice,Z=K.concat,Q=K.push,J=K.indexOf,tt={},et=tt.toString,it=tt.hasOwnProperty,nt={},st="2.2.1",rt=function(t,e){return new rt.fn.init(t,e)},ot=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,at=/^-ms-/,lt=/-([\da-z])/gi,ut=function(t,e){return e.toUpperCase()};rt.fn=rt.prototype={jquery:st,constructor:rt,selector:"",length:0,toArray:function(){return G.call(this)},get:function(t){return null!=t?0>t?this[t+this.length]:this[t]:G.call(this)},pushStack:function(t){var e=rt.merge(this.constructor(),t);return e.prevObject=this,e.context=this.context,e},each:function(t){return rt.each(this,t)},map:function(t){return this.pushStack(rt.map(this,function(e,i){return t.call(e,i,e)}))},slice:function(){return this.pushStack(G.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(0>t?e:0);return this.pushStack(i>=0&&e>i?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:Q,sort:K.sort,splice:K.splice},rt.extend=rt.fn.extend=function(){var t,e,i,n,s,r,o=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof o&&(u=o,o=arguments[a]||{},a++),"object"==typeof o||rt.isFunction(o)||(o={}),a===l&&(o=this,a--);l>a;a++)if(null!=(t=arguments[a]))for(e in t)i=o[e],n=t[e],o!==n&&(u&&n&&(rt.isPlainObject(n)||(s=rt.isArray(n)))?(s?(s=!1,r=i&&rt.isArray(i)?i:[]):r=i&&rt.isPlainObject(i)?i:{},o[e]=rt.extend(u,r,n)):void 0!==n&&(o[e]=n));return o},rt.extend({expando:"jQuery"+(st+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===rt.type(t)},isArray:Array.isArray,isWindow:function(t){return null!=t&&t===t.window},isNumeric:function(t){var e=t&&t.toString();return!rt.isArray(t)&&e-parseFloat(e)+1>=0},isPlainObject:function(t){return"object"!==rt.type(t)||t.nodeType||rt.isWindow(t)?!1:t.constructor&&!it.call(t.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?tt[et.call(t)]||"object":typeof t},globalEval:function(t){var e,i=eval;t=rt.trim(t),t&&(1===t.indexOf("use strict")?(e=$.createElement("script"),e.text=t,$.head.appendChild(e).parentNode.removeChild(e)):i(t))},camelCase:function(t){return t.replace(at,"ms-").replace(lt,ut)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e){var n,s=0;if(i(t))for(n=t.length;n>s&&e.call(t[s],s,t[s])!==!1;s++);else for(s in t)if(e.call(t[s],s,t[s])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(ot,"")},makeArray:function(t,e){var n=e||[];return null!=t&&(i(Object(t))?rt.merge(n,"string"==typeof t?[t]:t):Q.call(n,t)),n},inArray:function(t,e,i){return null==e?-1:J.call(e,t,i)},merge:function(t,e){for(var i=+e.length,n=0,s=t.length;i>n;n++)t[s++]=e[n];return t.length=s,t},grep:function(t,e,i){for(var n,s=[],r=0,o=t.length,a=!i;o>r;r++)n=!e(t[r],r),n!==a&&s.push(t[r]);return s},map:function(t,e,n){var s,r,o=0,a=[];if(i(t))for(s=t.length;s>o;o++)r=e(t[o],o,n),null!=r&&a.push(r);else for(o in t)r=e(t[o],o,n),null!=r&&a.push(r);return Z.apply([],a)},guid:1,proxy:function(t,e){var i,n,s;return"string"==typeof e&&(i=t[e],e=t,t=i),rt.isFunction(t)?(n=G.call(arguments,2),s=function(){return t.apply(e||this,n.concat(G.call(arguments)))},s.guid=t.guid=t.guid||rt.guid++,s):void 0},now:Date.now,support:nt}),"function"==typeof Symbol&&(rt.fn[Symbol.iterator]=K[Symbol.iterator]),rt.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){tt["[object "+e+"]"]=e.toLowerCase()});var ht=function(t){function e(t,e,i,n){var s,r,o,a,l,u,c,f,p=e&&e.ownerDocument,m=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==m&&9!==m&&11!==m)return i;if(!n&&((e?e.ownerDocument||e:j)!==F&&A(e),e=e||F,N)){if(11!==m&&(u=vt.exec(t)))if(s=u[1]){if(9===m){if(!(o=e.getElementById(s)))return i;if(o.id===s)return i.push(o),i}else if(p&&(o=p.getElementById(s))&&L(e,o)&&o.id===s)return i.push(o),i}else{if(u[2])return Q.apply(i,e.getElementsByTagName(t)),i;if((s=u[3])&&x.getElementsByClassName&&e.getElementsByClassName)return Q.apply(i,e.getElementsByClassName(s)),i}if(x.qsa&&!U[t+" "]&&(!O||!O.test(t))){if(1!==m)p=e,f=t;else if("object"!==e.nodeName.toLowerCase()){for((a=e.getAttribute("id"))?a=a.replace(_t,"\\$&"):e.setAttribute("id",a=H),c=k(t),r=c.length,l=dt.test(a)?"#"+a:"[id='"+a+"']";r--;)c[r]=l+" "+d(c[r]);f=c.join(","),p=yt.test(t)&&h(e.parentNode)||e}if(f)try{return Q.apply(i,p.querySelectorAll(f)),i}catch(g){}finally{a===H&&e.removeAttribute("id")}}}return C(t.replace(at,"$1"),e,i,n)}function i(){function t(i,n){return e.push(i+" ")>w.cacheLength&&delete t[e.shift()],t[i+" "]=n}var e=[];return t}function n(t){return t[H]=!0,t}function s(t){var e=F.createElement("div");try{return!!t(e)}catch(i){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function r(t,e){for(var i=t.split("|"),n=i.length;n--;)w.attrHandle[i[n]]=e}function o(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&(~e.sourceIndex||X)-(~t.sourceIndex||X);if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function a(t){return function(e){var i=e.nodeName.toLowerCase();return"input"===i&&e.type===t}}function l(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function u(t){return n(function(e){return e=+e,n(function(i,n){for(var s,r=t([],i.length,e),o=r.length;o--;)i[s=r[o]]&&(i[s]=!(n[s]=i[s]))})})}function h(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function c(){}function d(t){for(var e=0,i=t.length,n="";i>e;e++)n+=t[e].value;return n}function f(t,e,i){var n=e.dir,s=i&&"parentNode"===n,r=W++;return e.first?function(e,i,r){for(;e=e[n];)if(1===e.nodeType||s)return t(e,i,r)}:function(e,i,o){var a,l,u,h=[q,r];if(o){for(;e=e[n];)if((1===e.nodeType||s)&&t(e,i,o))return!0}else for(;e=e[n];)if(1===e.nodeType||s){if(u=e[H]||(e[H]={}),l=u[e.uniqueID]||(u[e.uniqueID]={}),(a=l[n])&&a[0]===q&&a[1]===r)return h[2]=a[2];if(l[n]=h,h[2]=t(e,i,o))return!0}}}function p(t){return t.length>1?function(e,i,n){for(var s=t.length;s--;)if(!t[s](e,i,n))return!1;return!0}:t[0]}function m(t,i,n){for(var s=0,r=i.length;r>s;s++)e(t,i[s],n);return n}function g(t,e,i,n,s){for(var r,o=[],a=0,l=t.length,u=null!=e;l>a;a++)(r=t[a])&&(!i||i(r,n,s))&&(o.push(r),u&&e.push(a));return o}function v(t,e,i,s,r,o){return s&&!s[H]&&(s=v(s)),r&&!r[H]&&(r=v(r,o)),n(function(n,o,a,l){var u,h,c,d=[],f=[],p=o.length,v=n||m(e||"*",a.nodeType?[a]:a,[]),y=!t||!n&&e?v:g(v,d,t,a,l),_=i?r||(n?t:p||s)?[]:o:y;if(i&&i(y,_,a,l),s)for(u=g(_,f),s(u,[],a,l),h=u.length;h--;)(c=u[h])&&(_[f[h]]=!(y[f[h]]=c));if(n){if(r||t){if(r){for(u=[],h=_.length;h--;)(c=_[h])&&u.push(y[h]=c);r(null,_=[],u,l)}for(h=_.length;h--;)(c=_[h])&&(u=r?tt(n,c):d[h])>-1&&(n[u]=!(o[u]=c))}}else _=g(_===o?_.splice(p,_.length):_),r?r(null,o,_,l):Q.apply(o,_)})}function y(t){for(var e,i,n,s=t.length,r=w.relative[t[0].type],o=r||w.relative[" "],a=r?1:0,l=f(function(t){return t===e},o,!0),u=f(function(t){return tt(e,t)>-1},o,!0),h=[function(t,i,n){var s=!r&&(n||i!==I)||((e=i).nodeType?l(t,i,n):u(t,i,n));return e=null,s}];s>a;a++)if(i=w.relative[t[a].type])h=[f(p(h),i)];else{if(i=w.filter[t[a].type].apply(null,t[a].matches),i[H]){for(n=++a;s>n&&!w.relative[t[n].type];n++);return v(a>1&&p(h),a>1&&d(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(at,"$1"),i,n>a&&y(t.slice(a,n)),s>n&&y(t=t.slice(n)),s>n&&d(t))}h.push(i)}return p(h)}function _(t,i){var s=i.length>0,r=t.length>0,o=function(n,o,a,l,u){var h,c,d,f=0,p="0",m=n&&[],v=[],y=I,_=n||r&&w.find.TAG("*",u),b=q+=null==y?1:Math.random()||.1,x=_.length;for(u&&(I=o===F||o||u);p!==x&&null!=(h=_[p]);p++){if(r&&h){for(c=0,o||h.ownerDocument===F||(A(h),a=!N);d=t[c++];)if(d(h,o||F,a)){l.push(h);break}u&&(q=b)}s&&((h=!d&&h)&&f--,n&&m.push(h))}if(f+=p,s&&p!==f){for(c=0;d=i[c++];)d(m,v,o,a);if(n){if(f>0)for(;p--;)m[p]||v[p]||(v[p]=G.call(l));v=g(v)}Q.apply(l,v),u&&!n&&v.length>0&&f+i.length>1&&e.uniqueSort(l)}return u&&(q=b,I=y),m};return s?n(o):o}var b,x,w,M,D,k,S,C,I,T,E,A,F,P,N,O,z,R,L,H="sizzle"+1*new Date,j=t.document,q=0,W=0,B=i(),Y=i(),U=i(),V=function(t,e){return t===e&&(E=!0),0},X=1<<31,K={}.hasOwnProperty,$=[],G=$.pop,Z=$.push,Q=$.push,J=$.slice,tt=function(t,e){for(var i=0,n=t.length;n>i;i++)if(t[i]===e)return i;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",it="[\\x20\\t\\r\\n\\f]",nt="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",st="\\["+it+"*("+nt+")(?:"+it+"*([*^$|!~]?=)"+it+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+nt+"))|)"+it+"*\\]",rt=":("+nt+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+st+")*)|.*)\\)|)",ot=new RegExp(it+"+","g"),at=new RegExp("^"+it+"+|((?:^|[^\\\\])(?:\\\\.)*)"+it+"+$","g"),lt=new RegExp("^"+it+"*,"+it+"*"),ut=new RegExp("^"+it+"*([>+~]|"+it+")"+it+"*"),ht=new RegExp("="+it+"*([^\\]'\"]*?)"+it+"*\\]","g"),ct=new RegExp(rt),dt=new RegExp("^"+nt+"$"),ft={ID:new RegExp("^#("+nt+")"),CLASS:new RegExp("^\\.("+nt+")"),TAG:new RegExp("^("+nt+"|[*])"),ATTR:new RegExp("^"+st),PSEUDO:new RegExp("^"+rt),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+it+"*(even|odd|(([+-]|)(\\d*)n|)"+it+"*(?:([+-]|)"+it+"*(\\d+)|))"+it+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+it+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+it+"*((?:-\\d)?\\d*)"+it+"*\\)|)(?=[^-]|$)","i")},pt=/^(?:input|select|textarea|button)$/i,mt=/^h\d$/i,gt=/^[^{]+\{\s*\[native \w/,vt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,yt=/[+~]/,_t=/'|\\/g,bt=new RegExp("\\\\([\\da-f]{1,6}"+it+"?|("+it+")|.)","ig"),xt=function(t,e,i){var n="0x"+e-65536;return n!==n||i?e:0>n?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},wt=function(){A()};try{Q.apply($=J.call(j.childNodes),j.childNodes),$[j.childNodes.length].nodeType}catch(Mt){Q={apply:$.length?function(t,e){Z.apply(t,J.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}x=e.support={},D=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return e?"HTML"!==e.nodeName:!1},A=e.setDocument=function(t){var e,i,n=t?t.ownerDocument||t:j;return n!==F&&9===n.nodeType&&n.documentElement?(F=n,P=F.documentElement,N=!D(F),(i=F.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",wt,!1):i.attachEvent&&i.attachEvent("onunload",wt)),x.attributes=s(function(t){return t.className="i",!t.getAttribute("className")}),x.getElementsByTagName=s(function(t){return t.appendChild(F.createComment("")),!t.getElementsByTagName("*").length}),x.getElementsByClassName=gt.test(F.getElementsByClassName),x.getById=s(function(t){return P.appendChild(t).id=H,!F.getElementsByName||!F.getElementsByName(H).length}),x.getById?(w.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&N){var i=e.getElementById(t);return i?[i]:[]}},w.filter.ID=function(t){var e=t.replace(bt,xt);return function(t){return t.getAttribute("id")===e}}):(delete w.find.ID,w.filter.ID=function(t){var e=t.replace(bt,xt);return function(t){var i="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}}),w.find.TAG=x.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):x.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,n=[],s=0,r=e.getElementsByTagName(t);if("*"===t){for(;i=r[s++];)1===i.nodeType&&n.push(i);return n}return r},w.find.CLASS=x.getElementsByClassName&&function(t,e){return"undefined"!=typeof e.getElementsByClassName&&N?e.getElementsByClassName(t):void 0},z=[],O=[],(x.qsa=gt.test(F.querySelectorAll))&&(s(function(t){P.appendChild(t).innerHTML="<a id='"+H+"'></a><select id='"+H+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&O.push("[*^$]="+it+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||O.push("\\["+it+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+H+"-]").length||O.push("~="),t.querySelectorAll(":checked").length||O.push(":checked"),t.querySelectorAll("a#"+H+"+*").length||O.push(".#.+[+~]")}),s(function(t){var e=F.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&O.push("name"+it+"*[*^$|!~]?="),t.querySelectorAll(":enabled").length||O.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),O.push(",.*:")})),(x.matchesSelector=gt.test(R=P.matches||P.webkitMatchesSelector||P.mozMatchesSelector||P.oMatchesSelector||P.msMatchesSelector))&&s(function(t){x.disconnectedMatch=R.call(t,"div"),R.call(t,"[s!='']:x"),z.push("!=",rt)}),O=O.length&&new RegExp(O.join("|")),z=z.length&&new RegExp(z.join("|")),e=gt.test(P.compareDocumentPosition),L=e||gt.test(P.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},V=e?function(t,e){if(t===e)return E=!0,0;var i=!t.compareDocumentPosition-!e.compareDocumentPosition;return i?i:(i=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&i||!x.sortDetached&&e.compareDocumentPosition(t)===i?t===F||t.ownerDocument===j&&L(j,t)?-1:e===F||e.ownerDocument===j&&L(j,e)?1:T?tt(T,t)-tt(T,e):0:4&i?-1:1)}:function(t,e){if(t===e)return E=!0,0;var i,n=0,s=t.parentNode,r=e.parentNode,a=[t],l=[e];if(!s||!r)return t===F?-1:e===F?1:s?-1:r?1:T?tt(T,t)-tt(T,e):0;if(s===r)return o(t,e);for(i=t;i=i.parentNode;)a.unshift(i);for(i=e;i=i.parentNode;)l.unshift(i);for(;a[n]===l[n];)n++;return n?o(a[n],l[n]):a[n]===j?-1:l[n]===j?1:0},F):F},e.matches=function(t,i){return e(t,null,null,i)},e.matchesSelector=function(t,i){if((t.ownerDocument||t)!==F&&A(t),i=i.replace(ht,"='$1']"),x.matchesSelector&&N&&!U[i+" "]&&(!z||!z.test(i))&&(!O||!O.test(i)))try{var n=R.call(t,i);if(n||x.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(s){}return e(i,F,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==F&&A(t),L(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==F&&A(t);var i=w.attrHandle[e.toLowerCase()],n=i&&K.call(w.attrHandle,e.toLowerCase())?i(t,e,!N):void 0;return void 0!==n?n:x.attributes||!N?t.getAttribute(e):(n=t.getAttributeNode(e))&&n.specified?n.value:null},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,i=[],n=0,s=0;if(E=!x.detectDuplicates,T=!x.sortStable&&t.slice(0),t.sort(V),E){for(;e=t[s++];)e===t[s]&&(n=i.push(s));for(;n--;)t.splice(i[n],1)}return T=null,t},M=e.getText=function(t){var e,i="",n=0,s=t.nodeType;if(s){if(1===s||9===s||11===s){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=M(t)}else if(3===s||4===s)return t.nodeValue}else for(;e=t[n++];)i+=M(e);return i},w=e.selectors={cacheLength:50,createPseudo:n,match:ft,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(bt,xt),t[3]=(t[3]||t[4]||t[5]||"").replace(bt,xt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return ft.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&ct.test(i)&&(e=k(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(bt,xt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=B[t+" "];return e||(e=new RegExp("(^|"+it+")"+t+"("+it+"|$)"))&&B(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,i,n){return function(s){var r=e.attr(s,t);return null==r?"!="===i:i?(r+="","="===i?r===n:"!="===i?r!==n:"^="===i?n&&0===r.indexOf(n):"*="===i?n&&r.indexOf(n)>-1:"$="===i?n&&r.slice(-n.length)===n:"~="===i?(" "+r.replace(ot," ")+" ").indexOf(n)>-1:"|="===i?r===n||r.slice(0,n.length+1)===n+"-":!1):!0}},CHILD:function(t,e,i,n,s){var r="nth"!==t.slice(0,3),o="last"!==t.slice(-4),a="of-type"===e;return 1===n&&0===s?function(t){return!!t.parentNode}:function(e,i,l){var u,h,c,d,f,p,m=r!==o?"nextSibling":"previousSibling",g=e.parentNode,v=a&&e.nodeName.toLowerCase(),y=!l&&!a,_=!1;if(g){if(r){for(;m;){for(d=e;d=d[m];)if(a?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;p=m="only"===t&&!p&&"nextSibling"}return!0}if(p=[o?g.firstChild:g.lastChild],o&&y){for(d=g,c=d[H]||(d[H]={}),h=c[d.uniqueID]||(c[d.uniqueID]={}),u=h[t]||[],f=u[0]===q&&u[1],_=f&&u[2],d=f&&g.childNodes[f];d=++f&&d&&d[m]||(_=f=0)||p.pop();)if(1===d.nodeType&&++_&&d===e){h[t]=[q,f,_];break}}else if(y&&(d=e,c=d[H]||(d[H]={}),h=c[d.uniqueID]||(c[d.uniqueID]={}),u=h[t]||[],f=u[0]===q&&u[1],_=f),_===!1)for(;(d=++f&&d&&d[m]||(_=f=0)||p.pop())&&((a?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++_||(y&&(c=d[H]||(d[H]={}),h=c[d.uniqueID]||(c[d.uniqueID]={}),h[t]=[q,_]),d!==e)););return _-=s,_===n||_%n===0&&_/n>=0}}},PSEUDO:function(t,i){var s,r=w.pseudos[t]||w.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return r[H]?r(i):r.length>1?(s=[t,t,"",i],w.setFilters.hasOwnProperty(t.toLowerCase())?n(function(t,e){for(var n,s=r(t,i),o=s.length;o--;)n=tt(t,s[o]),t[n]=!(e[n]=s[o])}):function(t){return r(t,0,s)}):r}},pseudos:{not:n(function(t){var e=[],i=[],s=S(t.replace(at,"$1"));return s[H]?n(function(t,e,i,n){for(var r,o=s(t,null,n,[]),a=t.length;a--;)(r=o[a])&&(t[a]=!(e[a]=r))}):function(t,n,r){return e[0]=t,s(e,null,r,i),e[0]=null,!i.pop()}}),has:n(function(t){return function(i){return e(t,i).length>0}}),contains:n(function(t){return t=t.replace(bt,xt),function(e){return(e.textContent||e.innerText||M(e)).indexOf(t)>-1}}),lang:n(function(t){return dt.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(bt,xt).toLowerCase(),function(e){var i;do if(i=N?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return i=i.toLowerCase(),i===t||0===i.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===P},focus:function(t){return t===F.activeElement&&(!F.hasFocus||F.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:function(t){return t.disabled===!1},disabled:function(t){return t.disabled===!0},checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!w.pseudos.empty(t)},header:function(t){return mt.test(t.nodeName)},input:function(t){return pt.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:u(function(){return[0]}),last:u(function(t,e){return[e-1]}),eq:u(function(t,e,i){return[0>i?i+e:i]}),even:u(function(t,e){for(var i=0;e>i;i+=2)t.push(i);
return t}),odd:u(function(t,e){for(var i=1;e>i;i+=2)t.push(i);return t}),lt:u(function(t,e,i){for(var n=0>i?i+e:i;--n>=0;)t.push(n);return t}),gt:u(function(t,e,i){for(var n=0>i?i+e:i;++n<e;)t.push(n);return t})}},w.pseudos.nth=w.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[b]=a(b);for(b in{submit:!0,reset:!0})w.pseudos[b]=l(b);return c.prototype=w.filters=w.pseudos,w.setFilters=new c,k=e.tokenize=function(t,i){var n,s,r,o,a,l,u,h=Y[t+" "];if(h)return i?0:h.slice(0);for(a=t,l=[],u=w.preFilter;a;){(!n||(s=lt.exec(a)))&&(s&&(a=a.slice(s[0].length)||a),l.push(r=[])),n=!1,(s=ut.exec(a))&&(n=s.shift(),r.push({value:n,type:s[0].replace(at," ")}),a=a.slice(n.length));for(o in w.filter)!(s=ft[o].exec(a))||u[o]&&!(s=u[o](s))||(n=s.shift(),r.push({value:n,type:o,matches:s}),a=a.slice(n.length));if(!n)break}return i?a.length:a?e.error(t):Y(t,l).slice(0)},S=e.compile=function(t,e){var i,n=[],s=[],r=U[t+" "];if(!r){for(e||(e=k(t)),i=e.length;i--;)r=y(e[i]),r[H]?n.push(r):s.push(r);r=U(t,_(s,n)),r.selector=t}return r},C=e.select=function(t,e,i,n){var s,r,o,a,l,u="function"==typeof t&&t,c=!n&&k(t=u.selector||t);if(i=i||[],1===c.length){if(r=c[0]=c[0].slice(0),r.length>2&&"ID"===(o=r[0]).type&&x.getById&&9===e.nodeType&&N&&w.relative[r[1].type]){if(e=(w.find.ID(o.matches[0].replace(bt,xt),e)||[])[0],!e)return i;u&&(e=e.parentNode),t=t.slice(r.shift().value.length)}for(s=ft.needsContext.test(t)?0:r.length;s--&&(o=r[s],!w.relative[a=o.type]);)if((l=w.find[a])&&(n=l(o.matches[0].replace(bt,xt),yt.test(r[0].type)&&h(e.parentNode)||e))){if(r.splice(s,1),t=n.length&&d(r),!t)return Q.apply(i,n),i;break}}return(u||S(t,c))(n,e,!N,i,!e||yt.test(t)&&h(e.parentNode)||e),i},x.sortStable=H.split("").sort(V).join("")===H,x.detectDuplicates=!!E,A(),x.sortDetached=s(function(t){return 1&t.compareDocumentPosition(F.createElement("div"))}),s(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||r("type|href|height|width",function(t,e,i){return i?void 0:t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),x.attributes&&s(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||r("value",function(t,e,i){return i||"input"!==t.nodeName.toLowerCase()?void 0:t.defaultValue}),s(function(t){return null==t.getAttribute("disabled")})||r(et,function(t,e,i){var n;return i?void 0:t[e]===!0?e.toLowerCase():(n=t.getAttributeNode(e))&&n.specified?n.value:null}),e}(t);rt.find=ht,rt.expr=ht.selectors,rt.expr[":"]=rt.expr.pseudos,rt.uniqueSort=rt.unique=ht.uniqueSort,rt.text=ht.getText,rt.isXMLDoc=ht.isXML,rt.contains=ht.contains;var ct=function(t,e,i){for(var n=[],s=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(s&&rt(t).is(i))break;n.push(t)}return n},dt=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},ft=rt.expr.match.needsContext,pt=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,mt=/^.[^:#\[\.,]*$/;rt.filter=function(t,e,i){var n=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===n.nodeType?rt.find.matchesSelector(n,t)?[n]:[]:rt.find.matches(t,rt.grep(e,function(t){return 1===t.nodeType}))},rt.fn.extend({find:function(t){var e,i=this.length,n=[],s=this;if("string"!=typeof t)return this.pushStack(rt(t).filter(function(){for(e=0;i>e;e++)if(rt.contains(s[e],this))return!0}));for(e=0;i>e;e++)rt.find(t,s[e],n);return n=this.pushStack(i>1?rt.unique(n):n),n.selector=this.selector?this.selector+" "+t:t,n},filter:function(t){return this.pushStack(n(this,t||[],!1))},not:function(t){return this.pushStack(n(this,t||[],!0))},is:function(t){return!!n(this,"string"==typeof t&&ft.test(t)?rt(t):t||[],!1).length}});var gt,vt=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,yt=rt.fn.init=function(t,e,i){var n,s;if(!t)return this;if(i=i||gt,"string"==typeof t){if(n="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:vt.exec(t),!n||!n[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(n[1]){if(e=e instanceof rt?e[0]:e,rt.merge(this,rt.parseHTML(n[1],e&&e.nodeType?e.ownerDocument||e:$,!0)),pt.test(n[1])&&rt.isPlainObject(e))for(n in e)rt.isFunction(this[n])?this[n](e[n]):this.attr(n,e[n]);return this}return s=$.getElementById(n[2]),s&&s.parentNode&&(this.length=1,this[0]=s),this.context=$,this.selector=t,this}return t.nodeType?(this.context=this[0]=t,this.length=1,this):rt.isFunction(t)?void 0!==i.ready?i.ready(t):t(rt):(void 0!==t.selector&&(this.selector=t.selector,this.context=t.context),rt.makeArray(t,this))};yt.prototype=rt.fn,gt=rt($);var _t=/^(?:parents|prev(?:Until|All))/,bt={children:!0,contents:!0,next:!0,prev:!0};rt.fn.extend({has:function(t){var e=rt(t,this),i=e.length;return this.filter(function(){for(var t=0;i>t;t++)if(rt.contains(this,e[t]))return!0})},closest:function(t,e){for(var i,n=0,s=this.length,r=[],o=ft.test(t)||"string"!=typeof t?rt(t,e||this.context):0;s>n;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(o?o.index(i)>-1:1===i.nodeType&&rt.find.matchesSelector(i,t))){r.push(i);break}return this.pushStack(r.length>1?rt.uniqueSort(r):r)},index:function(t){return t?"string"==typeof t?J.call(rt(t),this[0]):J.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(rt.uniqueSort(rt.merge(this.get(),rt(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),rt.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return ct(t,"parentNode")},parentsUntil:function(t,e,i){return ct(t,"parentNode",i)},next:function(t){return s(t,"nextSibling")},prev:function(t){return s(t,"previousSibling")},nextAll:function(t){return ct(t,"nextSibling")},prevAll:function(t){return ct(t,"previousSibling")},nextUntil:function(t,e,i){return ct(t,"nextSibling",i)},prevUntil:function(t,e,i){return ct(t,"previousSibling",i)},siblings:function(t){return dt((t.parentNode||{}).firstChild,t)},children:function(t){return dt(t.firstChild)},contents:function(t){return t.contentDocument||rt.merge([],t.childNodes)}},function(t,e){rt.fn[t]=function(i,n){var s=rt.map(this,e,i);return"Until"!==t.slice(-5)&&(n=i),n&&"string"==typeof n&&(s=rt.filter(n,s)),this.length>1&&(bt[t]||rt.uniqueSort(s),_t.test(t)&&s.reverse()),this.pushStack(s)}});var xt=/\S+/g;rt.Callbacks=function(t){t="string"==typeof t?r(t):rt.extend({},t);var e,i,n,s,o=[],a=[],l=-1,u=function(){for(s=t.once,n=e=!0;a.length;l=-1)for(i=a.shift();++l<o.length;)o[l].apply(i[0],i[1])===!1&&t.stopOnFalse&&(l=o.length,i=!1);t.memory||(i=!1),e=!1,s&&(o=i?[]:"")},h={add:function(){return o&&(i&&!e&&(l=o.length-1,a.push(i)),function n(e){rt.each(e,function(e,i){rt.isFunction(i)?t.unique&&h.has(i)||o.push(i):i&&i.length&&"string"!==rt.type(i)&&n(i)})}(arguments),i&&!e&&u()),this},remove:function(){return rt.each(arguments,function(t,e){for(var i;(i=rt.inArray(e,o,i))>-1;)o.splice(i,1),l>=i&&l--}),this},has:function(t){return t?rt.inArray(t,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return s=a=[],o=i="",this},disabled:function(){return!o},lock:function(){return s=a=[],i||(o=i=""),this},locked:function(){return!!s},fireWith:function(t,i){return s||(i=i||[],i=[t,i.slice?i.slice():i],a.push(i),e||u()),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!n}};return h},rt.extend({Deferred:function(t){var e=[["resolve","done",rt.Callbacks("once memory"),"resolved"],["reject","fail",rt.Callbacks("once memory"),"rejected"],["notify","progress",rt.Callbacks("memory")]],i="pending",n={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},then:function(){var t=arguments;return rt.Deferred(function(i){rt.each(e,function(e,r){var o=rt.isFunction(t[e])&&t[e];s[r[1]](function(){var t=o&&o.apply(this,arguments);t&&rt.isFunction(t.promise)?t.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[r[0]+"With"](this===n?i.promise():this,o?[t]:arguments)})}),t=null}).promise()},promise:function(t){return null!=t?rt.extend(t,n):n}},s={};return n.pipe=n.then,rt.each(e,function(t,r){var o=r[2],a=r[3];n[r[1]]=o.add,a&&o.add(function(){i=a},e[1^t][2].disable,e[2][2].lock),s[r[0]]=function(){return s[r[0]+"With"](this===s?n:this,arguments),this},s[r[0]+"With"]=o.fireWith}),n.promise(s),t&&t.call(s,s),s},when:function(t){var e,i,n,s=0,r=G.call(arguments),o=r.length,a=1!==o||t&&rt.isFunction(t.promise)?o:0,l=1===a?t:rt.Deferred(),u=function(t,i,n){return function(s){i[t]=this,n[t]=arguments.length>1?G.call(arguments):s,n===e?l.notifyWith(i,n):--a||l.resolveWith(i,n)}};if(o>1)for(e=new Array(o),i=new Array(o),n=new Array(o);o>s;s++)r[s]&&rt.isFunction(r[s].promise)?r[s].promise().progress(u(s,i,e)).done(u(s,n,r)).fail(l.reject):--a;return a||l.resolveWith(n,r),l.promise()}});var wt;rt.fn.ready=function(t){return rt.ready.promise().done(t),this},rt.extend({isReady:!1,readyWait:1,holdReady:function(t){t?rt.readyWait++:rt.ready(!0)},ready:function(t){(t===!0?--rt.readyWait:rt.isReady)||(rt.isReady=!0,t!==!0&&--rt.readyWait>0||(wt.resolveWith($,[rt]),rt.fn.triggerHandler&&(rt($).triggerHandler("ready"),rt($).off("ready"))))}}),rt.ready.promise=function(e){return wt||(wt=rt.Deferred(),"complete"===$.readyState||"loading"!==$.readyState&&!$.documentElement.doScroll?t.setTimeout(rt.ready):($.addEventListener("DOMContentLoaded",o),t.addEventListener("load",o))),wt.promise(e)},rt.ready.promise();var Mt=function(t,e,i,n,s,r,o){var a=0,l=t.length,u=null==i;if("object"===rt.type(i)){s=!0;for(a in i)Mt(t,e,a,i[a],!0,r,o)}else if(void 0!==n&&(s=!0,rt.isFunction(n)||(o=!0),u&&(o?(e.call(t,n),e=null):(u=e,e=function(t,e,i){return u.call(rt(t),i)})),e))for(;l>a;a++)e(t[a],i,o?n:n.call(t[a],a,e(t[a],i)));return s?t:u?e.call(t):l?e(t[0],i):r},Dt=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};a.uid=1,a.prototype={register:function(t,e){var i=e||{};return t.nodeType?t[this.expando]=i:Object.defineProperty(t,this.expando,{value:i,writable:!0,configurable:!0}),t[this.expando]},cache:function(t){if(!Dt(t))return{};var e=t[this.expando];return e||(e={},Dt(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var n,s=this.cache(t);if("string"==typeof e)s[e]=i;else for(n in e)s[n]=e[n];return s},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][e]},access:function(t,e,i){var n;return void 0===e||e&&"string"==typeof e&&void 0===i?(n=this.get(t,e),void 0!==n?n:this.get(t,rt.camelCase(e))):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,n,s,r=t[this.expando];if(void 0!==r){if(void 0===e)this.register(t);else{rt.isArray(e)?n=e.concat(e.map(rt.camelCase)):(s=rt.camelCase(e),e in r?n=[e,s]:(n=s,n=n in r?[n]:n.match(xt)||[])),i=n.length;for(;i--;)delete r[n[i]]}(void 0===e||rt.isEmptyObject(r))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!rt.isEmptyObject(e)}};var kt=new a,St=new a,Ct=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,It=/[A-Z]/g;rt.extend({hasData:function(t){return St.hasData(t)||kt.hasData(t)},data:function(t,e,i){return St.access(t,e,i)},removeData:function(t,e){St.remove(t,e)},_data:function(t,e,i){return kt.access(t,e,i)},_removeData:function(t,e){kt.remove(t,e)}}),rt.fn.extend({data:function(t,e){var i,n,s,r=this[0],o=r&&r.attributes;if(void 0===t){if(this.length&&(s=St.get(r),1===r.nodeType&&!kt.get(r,"hasDataAttrs"))){for(i=o.length;i--;)o[i]&&(n=o[i].name,0===n.indexOf("data-")&&(n=rt.camelCase(n.slice(5)),l(r,n,s[n])));kt.set(r,"hasDataAttrs",!0)}return s}return"object"==typeof t?this.each(function(){St.set(this,t)}):Mt(this,function(e){var i,n;if(r&&void 0===e){if(i=St.get(r,t)||St.get(r,t.replace(It,"-$&").toLowerCase()),void 0!==i)return i;if(n=rt.camelCase(t),i=St.get(r,n),void 0!==i)return i;if(i=l(r,n,void 0),void 0!==i)return i}else n=rt.camelCase(t),this.each(function(){var i=St.get(this,n);St.set(this,n,e),t.indexOf("-")>-1&&void 0!==i&&St.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){St.remove(this,t)})}}),rt.extend({queue:function(t,e,i){var n;return t?(e=(e||"fx")+"queue",n=kt.get(t,e),i&&(!n||rt.isArray(i)?n=kt.access(t,e,rt.makeArray(i)):n.push(i)),n||[]):void 0},dequeue:function(t,e){e=e||"fx";var i=rt.queue(t,e),n=i.length,s=i.shift(),r=rt._queueHooks(t,e),o=function(){rt.dequeue(t,e)};"inprogress"===s&&(s=i.shift(),n--),s&&("fx"===e&&i.unshift("inprogress"),delete r.stop,s.call(t,o,r)),!n&&r&&r.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return kt.get(t,i)||kt.access(t,i,{empty:rt.Callbacks("once memory").add(function(){kt.remove(t,[e+"queue",i])})})}}),rt.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?rt.queue(this[0],t):void 0===e?this:this.each(function(){var i=rt.queue(this,t,e);rt._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&rt.dequeue(this,t)})},dequeue:function(t){return this.each(function(){rt.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,n=1,s=rt.Deferred(),r=this,o=this.length,a=function(){--n||s.resolveWith(r,[r])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";o--;)i=kt.get(r[o],t+"queueHooks"),i&&i.empty&&(n++,i.empty.add(a));return a(),s.promise(e)}});var Tt=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Et=new RegExp("^(?:([+-])=|)("+Tt+")([a-z%]*)$","i"),At=["Top","Right","Bottom","Left"],Ft=function(t,e){return t=e||t,"none"===rt.css(t,"display")||!rt.contains(t.ownerDocument,t)},Pt=/^(?:checkbox|radio)$/i,Nt=/<([\w:-]+)/,Ot=/^$|\/(?:java|ecma)script/i,zt={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};zt.optgroup=zt.option,zt.tbody=zt.tfoot=zt.colgroup=zt.caption=zt.thead,zt.th=zt.td;var Rt=/<|&#?\w+;/;!function(){var t=$.createDocumentFragment(),e=t.appendChild($.createElement("div")),i=$.createElement("input");i.setAttribute("type","radio"),i.setAttribute("checked","checked"),i.setAttribute("name","t"),e.appendChild(i),nt.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",nt.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var Lt=/^key/,Ht=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,jt=/^([^.]*)(?:\.(.+)|)/;rt.event={global:{},add:function(t,e,i,n,s){var r,o,a,l,u,h,c,d,f,p,m,g=kt.get(t);if(g)for(i.handler&&(r=i,i=r.handler,s=r.selector),i.guid||(i.guid=rt.guid++),(l=g.events)||(l=g.events={}),(o=g.handle)||(o=g.handle=function(e){return"undefined"!=typeof rt&&rt.event.triggered!==e.type?rt.event.dispatch.apply(t,arguments):void 0}),e=(e||"").match(xt)||[""],u=e.length;u--;)a=jt.exec(e[u])||[],f=m=a[1],p=(a[2]||"").split(".").sort(),f&&(c=rt.event.special[f]||{},f=(s?c.delegateType:c.bindType)||f,c=rt.event.special[f]||{},h=rt.extend({type:f,origType:m,data:n,handler:i,guid:i.guid,selector:s,needsContext:s&&rt.expr.match.needsContext.test(s),namespace:p.join(".")},r),(d=l[f])||(d=l[f]=[],d.delegateCount=0,c.setup&&c.setup.call(t,n,p,o)!==!1||t.addEventListener&&t.addEventListener(f,o)),c.add&&(c.add.call(t,h),h.handler.guid||(h.handler.guid=i.guid)),s?d.splice(d.delegateCount++,0,h):d.push(h),rt.event.global[f]=!0)},remove:function(t,e,i,n,s){var r,o,a,l,u,h,c,d,f,p,m,g=kt.hasData(t)&&kt.get(t);if(g&&(l=g.events)){for(e=(e||"").match(xt)||[""],u=e.length;u--;)if(a=jt.exec(e[u])||[],f=m=a[1],p=(a[2]||"").split(".").sort(),f){for(c=rt.event.special[f]||{},f=(n?c.delegateType:c.bindType)||f,d=l[f]||[],a=a[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),o=r=d.length;r--;)h=d[r],!s&&m!==h.origType||i&&i.guid!==h.guid||a&&!a.test(h.namespace)||n&&n!==h.selector&&("**"!==n||!h.selector)||(d.splice(r,1),h.selector&&d.delegateCount--,c.remove&&c.remove.call(t,h));o&&!d.length&&(c.teardown&&c.teardown.call(t,p,g.handle)!==!1||rt.removeEvent(t,f,g.handle),delete l[f])}else for(f in l)rt.event.remove(t,f+e[u],i,n,!0);rt.isEmptyObject(l)&&kt.remove(t,"handle events")}},dispatch:function(t){t=rt.event.fix(t);var e,i,n,s,r,o=[],a=G.call(arguments),l=(kt.get(this,"events")||{})[t.type]||[],u=rt.event.special[t.type]||{};if(a[0]=t,t.delegateTarget=this,!u.preDispatch||u.preDispatch.call(this,t)!==!1){for(o=rt.event.handlers.call(this,t,l),e=0;(s=o[e++])&&!t.isPropagationStopped();)for(t.currentTarget=s.elem,i=0;(r=s.handlers[i++])&&!t.isImmediatePropagationStopped();)(!t.rnamespace||t.rnamespace.test(r.namespace))&&(t.handleObj=r,t.data=r.data,n=((rt.event.special[r.origType]||{}).handle||r.handler).apply(s.elem,a),void 0!==n&&(t.result=n)===!1&&(t.preventDefault(),t.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,t),t.result}},handlers:function(t,e){var i,n,s,r,o=[],a=e.delegateCount,l=t.target;if(a&&l.nodeType&&("click"!==t.type||isNaN(t.button)||t.button<1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==t.type)){for(n=[],i=0;a>i;i++)r=e[i],s=r.selector+" ",void 0===n[s]&&(n[s]=r.needsContext?rt(s,this).index(l)>-1:rt.find(s,this,null,[l]).length),n[s]&&n.push(r);n.length&&o.push({elem:l,handlers:n})}return a<e.length&&o.push({elem:this,handlers:e.slice(a)}),o},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(t,e){return null==t.which&&(t.which=null!=e.charCode?e.charCode:e.keyCode),t}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(t,e){var i,n,s,r=e.button;return null==t.pageX&&null!=e.clientX&&(i=t.target.ownerDocument||$,n=i.documentElement,s=i.body,t.pageX=e.clientX+(n&&n.scrollLeft||s&&s.scrollLeft||0)-(n&&n.clientLeft||s&&s.clientLeft||0),t.pageY=e.clientY+(n&&n.scrollTop||s&&s.scrollTop||0)-(n&&n.clientTop||s&&s.clientTop||0)),t.which||void 0===r||(t.which=1&r?1:2&r?3:4&r?2:0),t}},fix:function(t){if(t[rt.expando])return t;var e,i,n,s=t.type,r=t,o=this.fixHooks[s];for(o||(this.fixHooks[s]=o=Ht.test(s)?this.mouseHooks:Lt.test(s)?this.keyHooks:{}),n=o.props?this.props.concat(o.props):this.props,t=new rt.Event(r),e=n.length;e--;)i=n[e],t[i]=r[i];return t.target||(t.target=$),3===t.target.nodeType&&(t.target=t.target.parentNode),o.filter?o.filter(t,r):t},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==m()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===m()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&rt.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(t){return rt.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},rt.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},rt.Event=function(t,e){return this instanceof rt.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?f:p):this.type=t,e&&rt.extend(this,e),this.timeStamp=t&&t.timeStamp||rt.now(),void(this[rt.expando]=!0)):new rt.Event(t,e)},rt.Event.prototype={constructor:rt.Event,isDefaultPrevented:p,isPropagationStopped:p,isImmediatePropagationStopped:p,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=f,t&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=f,t&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=f,t&&t.stopImmediatePropagation(),this.stopPropagation()}},rt.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){rt.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,n=this,s=t.relatedTarget,r=t.handleObj;return(!s||s!==n&&!rt.contains(n,s))&&(t.type=r.origType,i=r.handler.apply(this,arguments),t.type=e),i}}}),rt.fn.extend({on:function(t,e,i,n){return g(this,t,e,i,n)},one:function(t,e,i,n){return g(this,t,e,i,n,1)},off:function(t,e,i){var n,s;if(t&&t.preventDefault&&t.handleObj)return n=t.handleObj,rt(t.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof t){for(s in t)this.off(s,e,t[s]);return this}return(e===!1||"function"==typeof e)&&(i=e,e=void 0),i===!1&&(i=p),this.each(function(){rt.event.remove(this,t,i,e)})}});var qt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,Wt=/<script|<style|<link/i,Bt=/checked\s*(?:[^=]|=\s*.checked.)/i,Yt=/^true\/(.*)/,Ut=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;rt.extend({htmlPrefilter:function(t){return t.replace(qt,"<$1></$2>")},clone:function(t,e,i){var n,s,r,o,a=t.cloneNode(!0),l=rt.contains(t.ownerDocument,t);if(!(nt.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||rt.isXMLDoc(t)))for(o=h(a),r=h(t),n=0,s=r.length;s>n;n++)x(r[n],o[n]);if(e)if(i)for(r=r||h(t),o=o||h(a),n=0,s=r.length;s>n;n++)b(r[n],o[n]);else b(t,a);return o=h(a,"script"),o.length>0&&c(o,!l&&h(t,"script")),a},cleanData:function(t){for(var e,i,n,s=rt.event.special,r=0;void 0!==(i=t[r]);r++)if(Dt(i)){if(e=i[kt.expando]){if(e.events)for(n in e.events)s[n]?rt.event.remove(i,n):rt.removeEvent(i,n,e.handle);i[kt.expando]=void 0}i[St.expando]&&(i[St.expando]=void 0)}}}),rt.fn.extend({domManip:w,detach:function(t){return M(this,t,!0)},remove:function(t){return M(this,t)},text:function(t){return Mt(this,function(t){return void 0===t?rt.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=t)})},null,t,arguments.length)},append:function(){return w(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=v(this,t);e.appendChild(t)}})},prepend:function(){return w(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=v(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return w(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return w(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(rt.cleanData(h(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null==t?!1:t,e=null==e?t:e,this.map(function(){return rt.clone(this,t,e)})},html:function(t){return Mt(this,function(t){var e=this[0]||{},i=0,n=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Wt.test(t)&&!zt[(Nt.exec(t)||["",""])[1].toLowerCase()]){t=rt.htmlPrefilter(t);try{for(;n>i;i++)e=this[i]||{},1===e.nodeType&&(rt.cleanData(h(e,!1)),e.innerHTML=t);e=0}catch(s){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return w(this,arguments,function(e){var i=this.parentNode;rt.inArray(this,t)<0&&(rt.cleanData(h(this)),i&&i.replaceChild(e,this))},t)}}),rt.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){rt.fn[t]=function(t){for(var i,n=[],s=rt(t),r=s.length-1,o=0;r>=o;o++)i=o===r?this:this.clone(!0),rt(s[o])[e](i),Q.apply(n,i.get());return this.pushStack(n)}});var Vt,Xt={HTML:"block",BODY:"block"},Kt=/^margin/,$t=new RegExp("^("+Tt+")(?!px)[a-z%]+$","i"),Gt=function(e){var i=e.ownerDocument.defaultView;return i&&i.opener||(i=t),i.getComputedStyle(e)},Zt=function(t,e,i,n){var s,r,o={};for(r in e)o[r]=t.style[r],t.style[r]=e[r];s=i.apply(t,n||[]);for(r in e)t.style[r]=o[r];return s},Qt=$.documentElement;!function(){function e(){a.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",a.innerHTML="",Qt.appendChild(o);var e=t.getComputedStyle(a);i="1%"!==e.top,r="2px"===e.marginLeft,n="4px"===e.width,a.style.marginRight="50%",s="4px"===e.marginRight,Qt.removeChild(o)}var i,n,s,r,o=$.createElement("div"),a=$.createElement("div");a.style&&(a.style.backgroundClip="content-box",a.cloneNode(!0).style.backgroundClip="",nt.clearCloneStyle="content-box"===a.style.backgroundClip,o.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",o.appendChild(a),rt.extend(nt,{pixelPosition:function(){return e(),i},boxSizingReliable:function(){return null==n&&e(),n},pixelMarginRight:function(){return null==n&&e(),s},reliableMarginLeft:function(){return null==n&&e(),r},reliableMarginRight:function(){var e,i=a.appendChild($.createElement("div"));return i.style.cssText=a.style.cssText="-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",i.style.marginRight=i.style.width="0",a.style.width="1px",Qt.appendChild(o),e=!parseFloat(t.getComputedStyle(i).marginRight),Qt.removeChild(o),a.removeChild(i),e}}))}();var Jt=/^(none|table(?!-c[ea]).+)/,te={position:"absolute",visibility:"hidden",display:"block"},ee={letterSpacing:"0",fontWeight:"400"},ie=["Webkit","O","Moz","ms"],ne=$.createElement("div").style;rt.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=S(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(t,e,i,n){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var s,r,o,a=rt.camelCase(e),l=t.style;return e=rt.cssProps[a]||(rt.cssProps[a]=I(a)||a),o=rt.cssHooks[e]||rt.cssHooks[a],void 0===i?o&&"get"in o&&void 0!==(s=o.get(t,!1,n))?s:l[e]:(r=typeof i,"string"===r&&(s=Et.exec(i))&&s[1]&&(i=u(t,e,s),r="number"),null!=i&&i===i&&("number"===r&&(i+=s&&s[3]||(rt.cssNumber[a]?"":"px")),nt.clearCloneStyle||""!==i||0!==e.indexOf("background")||(l[e]="inherit"),o&&"set"in o&&void 0===(i=o.set(t,i,n))||(l[e]=i)),void 0)}},css:function(t,e,i,n){var s,r,o,a=rt.camelCase(e);return e=rt.cssProps[a]||(rt.cssProps[a]=I(a)||a),o=rt.cssHooks[e]||rt.cssHooks[a],o&&"get"in o&&(s=o.get(t,!0,i)),void 0===s&&(s=S(t,e,n)),"normal"===s&&e in ee&&(s=ee[e]),""===i||i?(r=parseFloat(s),i===!0||isFinite(r)?r||0:s):s}}),rt.each(["height","width"],function(t,e){rt.cssHooks[e]={get:function(t,i,n){return i?Jt.test(rt.css(t,"display"))&&0===t.offsetWidth?Zt(t,te,function(){return A(t,e,n)}):A(t,e,n):void 0},set:function(t,i,n){var s,r=n&&Gt(t),o=n&&E(t,e,n,"border-box"===rt.css(t,"boxSizing",!1,r),r);return o&&(s=Et.exec(i))&&"px"!==(s[3]||"px")&&(t.style[e]=i,i=rt.css(t,e)),T(t,i,o)}}}),rt.cssHooks.marginLeft=C(nt.reliableMarginLeft,function(t,e){return e?(parseFloat(S(t,"marginLeft"))||t.getBoundingClientRect().left-Zt(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px":void 0}),rt.cssHooks.marginRight=C(nt.reliableMarginRight,function(t,e){return e?Zt(t,{display:"inline-block"},S,[t,"marginRight"]):void 0}),rt.each({margin:"",padding:"",border:"Width"},function(t,e){rt.cssHooks[t+e]={expand:function(i){for(var n=0,s={},r="string"==typeof i?i.split(" "):[i];4>n;n++)s[t+At[n]+e]=r[n]||r[n-2]||r[0];return s}},Kt.test(t)||(rt.cssHooks[t+e].set=T)}),rt.fn.extend({css:function(t,e){return Mt(this,function(t,e,i){var n,s,r={},o=0;if(rt.isArray(e)){for(n=Gt(t),s=e.length;s>o;o++)r[e[o]]=rt.css(t,e[o],!1,n);return r}return void 0!==i?rt.style(t,e,i):rt.css(t,e)},t,e,arguments.length>1)},show:function(){return F(this,!0)},hide:function(){return F(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){Ft(this)?rt(this).show():rt(this).hide()})}}),rt.Tween=P,P.prototype={constructor:P,init:function(t,e,i,n,s,r){this.elem=t,this.prop=i,this.easing=s||rt.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=n,this.unit=r||(rt.cssNumber[i]?"":"px")},cur:function(){var t=P.propHooks[this.prop];return t&&t.get?t.get(this):P.propHooks._default.get(this)},run:function(t){var e,i=P.propHooks[this.prop];return this.options.duration?this.pos=e=rt.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):P.propHooks._default.set(this),this}},P.prototype.init.prototype=P.prototype,P.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=rt.css(t.elem,t.prop,""),e&&"auto"!==e?e:0)},set:function(t){rt.fx.step[t.prop]?rt.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[rt.cssProps[t.prop]]&&!rt.cssHooks[t.prop]?t.elem[t.prop]=t.now:rt.style(t.elem,t.prop,t.now+t.unit)}}},P.propHooks.scrollTop=P.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},rt.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},rt.fx=P.prototype.init,rt.fx.step={};var se,re,oe=/^(?:toggle|show|hide)$/,ae=/queueHooks$/;rt.Animation=rt.extend(H,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return u(i.elem,t,Et.exec(e),i),i}]},tweener:function(t,e){rt.isFunction(t)?(e=t,t=["*"]):t=t.match(xt);for(var i,n=0,s=t.length;s>n;n++)i=t[n],H.tweeners[i]=H.tweeners[i]||[],H.tweeners[i].unshift(e)},prefilters:[R],prefilter:function(t,e){e?H.prefilters.unshift(t):H.prefilters.push(t)}}),rt.speed=function(t,e,i){var n=t&&"object"==typeof t?rt.extend({},t):{complete:i||!i&&e||rt.isFunction(t)&&t,duration:t,easing:i&&e||e&&!rt.isFunction(e)&&e};return n.duration=rt.fx.off?0:"number"==typeof n.duration?n.duration:n.duration in rt.fx.speeds?rt.fx.speeds[n.duration]:rt.fx.speeds._default,(null==n.queue||n.queue===!0)&&(n.queue="fx"),n.old=n.complete,n.complete=function(){rt.isFunction(n.old)&&n.old.call(this),n.queue&&rt.dequeue(this,n.queue)},n},rt.fn.extend({fadeTo:function(t,e,i,n){return this.filter(Ft).css("opacity",0).show().end().animate({opacity:e},t,i,n)},animate:function(t,e,i,n){var s=rt.isEmptyObject(t),r=rt.speed(e,i,n),o=function(){var e=H(this,rt.extend({},t),r);(s||kt.get(this,"finish"))&&e.stop(!0)};return o.finish=o,s||r.queue===!1?this.each(o):this.queue(r.queue,o)},stop:function(t,e,i){var n=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,s=null!=t&&t+"queueHooks",r=rt.timers,o=kt.get(this);if(s)o[s]&&o[s].stop&&n(o[s]);else for(s in o)o[s]&&o[s].stop&&ae.test(s)&&n(o[s]);for(s=r.length;s--;)r[s].elem!==this||null!=t&&r[s].queue!==t||(r[s].anim.stop(i),e=!1,r.splice(s,1));(e||!i)&&rt.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,i=kt.get(this),n=i[t+"queue"],s=i[t+"queueHooks"],r=rt.timers,o=n?n.length:0;for(i.finish=!0,rt.queue(this,t,[]),s&&s.stop&&s.stop.call(this,!0),e=r.length;e--;)r[e].elem===this&&r[e].queue===t&&(r[e].anim.stop(!0),r.splice(e,1));for(e=0;o>e;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete i.finish})}}),rt.each(["toggle","show","hide"],function(t,e){var i=rt.fn[e];rt.fn[e]=function(t,n,s){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate(O(e,!0),t,n,s)}}),rt.each({slideDown:O("show"),slideUp:O("hide"),slideToggle:O("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){rt.fn[t]=function(t,i,n){return this.animate(e,t,i,n)}}),rt.timers=[],rt.fx.tick=function(){var t,e=0,i=rt.timers;for(se=rt.now();e<i.length;e++)t=i[e],t()||i[e]!==t||i.splice(e--,1);i.length||rt.fx.stop(),
se=void 0},rt.fx.timer=function(t){rt.timers.push(t),t()?rt.fx.start():rt.timers.pop()},rt.fx.interval=13,rt.fx.start=function(){re||(re=t.setInterval(rt.fx.tick,rt.fx.interval))},rt.fx.stop=function(){t.clearInterval(re),re=null},rt.fx.speeds={slow:600,fast:200,_default:400},rt.fn.delay=function(e,i){return e=rt.fx?rt.fx.speeds[e]||e:e,i=i||"fx",this.queue(i,function(i,n){var s=t.setTimeout(i,e);n.stop=function(){t.clearTimeout(s)}})},function(){var t=$.createElement("input"),e=$.createElement("select"),i=e.appendChild($.createElement("option"));t.type="checkbox",nt.checkOn=""!==t.value,nt.optSelected=i.selected,e.disabled=!0,nt.optDisabled=!i.disabled,t=$.createElement("input"),t.value="t",t.type="radio",nt.radioValue="t"===t.value}();var le,ue=rt.expr.attrHandle;rt.fn.extend({attr:function(t,e){return Mt(this,rt.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){rt.removeAttr(this,t)})}}),rt.extend({attr:function(t,e,i){var n,s,r=t.nodeType;if(3!==r&&8!==r&&2!==r)return"undefined"==typeof t.getAttribute?rt.prop(t,e,i):(1===r&&rt.isXMLDoc(t)||(e=e.toLowerCase(),s=rt.attrHooks[e]||(rt.expr.match.bool.test(e)?le:void 0)),void 0!==i?null===i?void rt.removeAttr(t,e):s&&"set"in s&&void 0!==(n=s.set(t,i,e))?n:(t.setAttribute(e,i+""),i):s&&"get"in s&&null!==(n=s.get(t,e))?n:(n=rt.find.attr(t,e),null==n?void 0:n))},attrHooks:{type:{set:function(t,e){if(!nt.radioValue&&"radio"===e&&rt.nodeName(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,n,s=0,r=e&&e.match(xt);if(r&&1===t.nodeType)for(;i=r[s++];)n=rt.propFix[i]||i,rt.expr.match.bool.test(i)&&(t[n]=!1),t.removeAttribute(i)}}),le={set:function(t,e,i){return e===!1?rt.removeAttr(t,i):t.setAttribute(i,i),i}},rt.each(rt.expr.match.bool.source.match(/\w+/g),function(t,e){var i=ue[e]||rt.find.attr;ue[e]=function(t,e,n){var s,r;return n||(r=ue[e],ue[e]=s,s=null!=i(t,e,n)?e.toLowerCase():null,ue[e]=r),s}});var he=/^(?:input|select|textarea|button)$/i,ce=/^(?:a|area)$/i;rt.fn.extend({prop:function(t,e){return Mt(this,rt.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[rt.propFix[t]||t]})}}),rt.extend({prop:function(t,e,i){var n,s,r=t.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&rt.isXMLDoc(t)||(e=rt.propFix[e]||e,s=rt.propHooks[e]),void 0!==i?s&&"set"in s&&void 0!==(n=s.set(t,i,e))?n:t[e]=i:s&&"get"in s&&null!==(n=s.get(t,e))?n:t[e]},propHooks:{tabIndex:{get:function(t){var e=rt.find.attr(t,"tabindex");return e?parseInt(e,10):he.test(t.nodeName)||ce.test(t.nodeName)&&t.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),nt.optSelected||(rt.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null}}),rt.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){rt.propFix[this.toLowerCase()]=this});var de=/[\t\r\n\f]/g;rt.fn.extend({addClass:function(t){var e,i,n,s,r,o,a,l=0;if(rt.isFunction(t))return this.each(function(e){rt(this).addClass(t.call(this,e,j(this)))});if("string"==typeof t&&t)for(e=t.match(xt)||[];i=this[l++];)if(s=j(i),n=1===i.nodeType&&(" "+s+" ").replace(de," ")){for(o=0;r=e[o++];)n.indexOf(" "+r+" ")<0&&(n+=r+" ");a=rt.trim(n),s!==a&&i.setAttribute("class",a)}return this},removeClass:function(t){var e,i,n,s,r,o,a,l=0;if(rt.isFunction(t))return this.each(function(e){rt(this).removeClass(t.call(this,e,j(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match(xt)||[];i=this[l++];)if(s=j(i),n=1===i.nodeType&&(" "+s+" ").replace(de," ")){for(o=0;r=e[o++];)for(;n.indexOf(" "+r+" ")>-1;)n=n.replace(" "+r+" "," ");a=rt.trim(n),s!==a&&i.setAttribute("class",a)}return this},toggleClass:function(t,e){var i=typeof t;return"boolean"==typeof e&&"string"===i?e?this.addClass(t):this.removeClass(t):rt.isFunction(t)?this.each(function(i){rt(this).toggleClass(t.call(this,i,j(this),e),e)}):this.each(function(){var e,n,s,r;if("string"===i)for(n=0,s=rt(this),r=t.match(xt)||[];e=r[n++];)s.hasClass(e)?s.removeClass(e):s.addClass(e);else(void 0===t||"boolean"===i)&&(e=j(this),e&&kt.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||t===!1?"":kt.get(this,"__className__")||""))})},hasClass:function(t){var e,i,n=0;for(e=" "+t+" ";i=this[n++];)if(1===i.nodeType&&(" "+j(i)+" ").replace(de," ").indexOf(e)>-1)return!0;return!1}});var fe=/\r/g;rt.fn.extend({val:function(t){var e,i,n,s=this[0];{if(arguments.length)return n=rt.isFunction(t),this.each(function(i){var s;1===this.nodeType&&(s=n?t.call(this,i,rt(this).val()):t,null==s?s="":"number"==typeof s?s+="":rt.isArray(s)&&(s=rt.map(s,function(t){return null==t?"":t+""})),e=rt.valHooks[this.type]||rt.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,s,"value")||(this.value=s))});if(s)return e=rt.valHooks[s.type]||rt.valHooks[s.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(i=e.get(s,"value"))?i:(i=s.value,"string"==typeof i?i.replace(fe,""):null==i?"":i)}}}),rt.extend({valHooks:{option:{get:function(t){return rt.trim(t.value)}},select:{get:function(t){for(var e,i,n=t.options,s=t.selectedIndex,r="select-one"===t.type||0>s,o=r?null:[],a=r?s+1:n.length,l=0>s?a:r?s:0;a>l;l++)if(i=n[l],(i.selected||l===s)&&(nt.optDisabled?!i.disabled:null===i.getAttribute("disabled"))&&(!i.parentNode.disabled||!rt.nodeName(i.parentNode,"optgroup"))){if(e=rt(i).val(),r)return e;o.push(e)}return o},set:function(t,e){for(var i,n,s=t.options,r=rt.makeArray(e),o=s.length;o--;)n=s[o],(n.selected=rt.inArray(rt.valHooks.option.get(n),r)>-1)&&(i=!0);return i||(t.selectedIndex=-1),r}}}}),rt.each(["radio","checkbox"],function(){rt.valHooks[this]={set:function(t,e){return rt.isArray(e)?t.checked=rt.inArray(rt(t).val(),e)>-1:void 0}},nt.checkOn||(rt.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var pe=/^(?:focusinfocus|focusoutblur)$/;rt.extend(rt.event,{trigger:function(e,i,n,s){var r,o,a,l,u,h,c,d=[n||$],f=it.call(e,"type")?e.type:e,p=it.call(e,"namespace")?e.namespace.split("."):[];if(o=a=n=n||$,3!==n.nodeType&&8!==n.nodeType&&!pe.test(f+rt.event.triggered)&&(f.indexOf(".")>-1&&(p=f.split("."),f=p.shift(),p.sort()),u=f.indexOf(":")<0&&"on"+f,e=e[rt.expando]?e:new rt.Event(f,"object"==typeof e&&e),e.isTrigger=s?2:3,e.namespace=p.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),i=null==i?[e]:rt.makeArray(i,[e]),c=rt.event.special[f]||{},s||!c.trigger||c.trigger.apply(n,i)!==!1)){if(!s&&!c.noBubble&&!rt.isWindow(n)){for(l=c.delegateType||f,pe.test(l+f)||(o=o.parentNode);o;o=o.parentNode)d.push(o),a=o;a===(n.ownerDocument||$)&&d.push(a.defaultView||a.parentWindow||t)}for(r=0;(o=d[r++])&&!e.isPropagationStopped();)e.type=r>1?l:c.bindType||f,h=(kt.get(o,"events")||{})[e.type]&&kt.get(o,"handle"),h&&h.apply(o,i),h=u&&o[u],h&&h.apply&&Dt(o)&&(e.result=h.apply(o,i),e.result===!1&&e.preventDefault());return e.type=f,s||e.isDefaultPrevented()||c._default&&c._default.apply(d.pop(),i)!==!1||!Dt(n)||u&&rt.isFunction(n[f])&&!rt.isWindow(n)&&(a=n[u],a&&(n[u]=null),rt.event.triggered=f,n[f](),rt.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(t,e,i){var n=rt.extend(new rt.Event,i,{type:t,isSimulated:!0});rt.event.trigger(n,null,e),n.isDefaultPrevented()&&i.preventDefault()}}),rt.fn.extend({trigger:function(t,e){return this.each(function(){rt.event.trigger(t,e,this)})},triggerHandler:function(t,e){var i=this[0];return i?rt.event.trigger(t,e,i,!0):void 0}}),rt.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(t,e){rt.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}}),rt.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),nt.focusin="onfocusin"in t,nt.focusin||rt.each({focus:"focusin",blur:"focusout"},function(t,e){var i=function(t){rt.event.simulate(e,t.target,rt.event.fix(t))};rt.event.special[e]={setup:function(){var n=this.ownerDocument||this,s=kt.access(n,e);s||n.addEventListener(t,i,!0),kt.access(n,e,(s||0)+1)},teardown:function(){var n=this.ownerDocument||this,s=kt.access(n,e)-1;s?kt.access(n,e,s):(n.removeEventListener(t,i,!0),kt.remove(n,e))}}});var me=t.location,ge=rt.now(),ve=/\?/;rt.parseJSON=function(t){return JSON.parse(t+"")},rt.parseXML=function(e){var i;if(!e||"string"!=typeof e)return null;try{i=(new t.DOMParser).parseFromString(e,"text/xml")}catch(n){i=void 0}return(!i||i.getElementsByTagName("parsererror").length)&&rt.error("Invalid XML: "+e),i};var ye=/#.*$/,_e=/([?&])_=[^&]*/,be=/^(.*?):[ \t]*([^\r\n]*)$/gm,xe=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,we=/^(?:GET|HEAD)$/,Me=/^\/\//,De={},ke={},Se="*/".concat("*"),Ce=$.createElement("a");Ce.href=me.href,rt.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:me.href,type:"GET",isLocal:xe.test(me.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Se,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":rt.parseJSON,"text xml":rt.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?B(B(t,rt.ajaxSettings),e):B(rt.ajaxSettings,t)},ajaxPrefilter:q(De),ajaxTransport:q(ke),ajax:function(e,i){function n(e,i,n,a){var u,c,y,_,x,M=i;2!==b&&(b=2,l&&t.clearTimeout(l),s=void 0,o=a||"",w.readyState=e>0?4:0,u=e>=200&&300>e||304===e,n&&(_=Y(d,w,n)),_=U(d,_,w,u),u?(d.ifModified&&(x=w.getResponseHeader("Last-Modified"),x&&(rt.lastModified[r]=x),x=w.getResponseHeader("etag"),x&&(rt.etag[r]=x)),204===e||"HEAD"===d.type?M="nocontent":304===e?M="notmodified":(M=_.state,c=_.data,y=_.error,u=!y)):(y=M,(e||!M)&&(M="error",0>e&&(e=0))),w.status=e,w.statusText=(i||M)+"",u?m.resolveWith(f,[c,M,w]):m.rejectWith(f,[w,M,y]),w.statusCode(v),v=void 0,h&&p.trigger(u?"ajaxSuccess":"ajaxError",[w,d,u?c:y]),g.fireWith(f,[w,M]),h&&(p.trigger("ajaxComplete",[w,d]),--rt.active||rt.event.trigger("ajaxStop")))}"object"==typeof e&&(i=e,e=void 0),i=i||{};var s,r,o,a,l,u,h,c,d=rt.ajaxSetup({},i),f=d.context||d,p=d.context&&(f.nodeType||f.jquery)?rt(f):rt.event,m=rt.Deferred(),g=rt.Callbacks("once memory"),v=d.statusCode||{},y={},_={},b=0,x="canceled",w={readyState:0,getResponseHeader:function(t){var e;if(2===b){if(!a)for(a={};e=be.exec(o);)a[e[1].toLowerCase()]=e[2];e=a[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return 2===b?o:null},setRequestHeader:function(t,e){var i=t.toLowerCase();return b||(t=_[i]=_[i]||t,y[t]=e),this},overrideMimeType:function(t){return b||(d.mimeType=t),this},statusCode:function(t){var e;if(t)if(2>b)for(e in t)v[e]=[v[e],t[e]];else w.always(t[w.status]);return this},abort:function(t){var e=t||x;return s&&s.abort(e),n(0,e),this}};if(m.promise(w).complete=g.add,w.success=w.done,w.error=w.fail,d.url=((e||d.url||me.href)+"").replace(ye,"").replace(Me,me.protocol+"//"),d.type=i.method||i.type||d.method||d.type,d.dataTypes=rt.trim(d.dataType||"*").toLowerCase().match(xt)||[""],null==d.crossDomain){u=$.createElement("a");try{u.href=d.url,u.href=u.href,d.crossDomain=Ce.protocol+"//"+Ce.host!=u.protocol+"//"+u.host}catch(M){d.crossDomain=!0}}if(d.data&&d.processData&&"string"!=typeof d.data&&(d.data=rt.param(d.data,d.traditional)),W(De,d,i,w),2===b)return w;h=rt.event&&d.global,h&&0===rt.active++&&rt.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!we.test(d.type),r=d.url,d.hasContent||(d.data&&(r=d.url+=(ve.test(r)?"&":"?")+d.data,delete d.data),d.cache===!1&&(d.url=_e.test(r)?r.replace(_e,"$1_="+ge++):r+(ve.test(r)?"&":"?")+"_="+ge++)),d.ifModified&&(rt.lastModified[r]&&w.setRequestHeader("If-Modified-Since",rt.lastModified[r]),rt.etag[r]&&w.setRequestHeader("If-None-Match",rt.etag[r])),(d.data&&d.hasContent&&d.contentType!==!1||i.contentType)&&w.setRequestHeader("Content-Type",d.contentType),w.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+Se+"; q=0.01":""):d.accepts["*"]);for(c in d.headers)w.setRequestHeader(c,d.headers[c]);if(d.beforeSend&&(d.beforeSend.call(f,w,d)===!1||2===b))return w.abort();x="abort";for(c in{success:1,error:1,complete:1})w[c](d[c]);if(s=W(ke,d,i,w)){if(w.readyState=1,h&&p.trigger("ajaxSend",[w,d]),2===b)return w;d.async&&d.timeout>0&&(l=t.setTimeout(function(){w.abort("timeout")},d.timeout));try{b=1,s.send(y,n)}catch(M){if(!(2>b))throw M;n(-1,M)}}else n(-1,"No Transport");return w},getJSON:function(t,e,i){return rt.get(t,e,i,"json")},getScript:function(t,e){return rt.get(t,void 0,e,"script")}}),rt.each(["get","post"],function(t,e){rt[e]=function(t,i,n,s){return rt.isFunction(i)&&(s=s||n,n=i,i=void 0),rt.ajax(rt.extend({url:t,type:e,dataType:s,data:i,success:n},rt.isPlainObject(t)&&t))}}),rt._evalUrl=function(t){return rt.ajax({url:t,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},rt.fn.extend({wrapAll:function(t){var e;return rt.isFunction(t)?this.each(function(e){rt(this).wrapAll(t.call(this,e))}):(this[0]&&(e=rt(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this)},wrapInner:function(t){return rt.isFunction(t)?this.each(function(e){rt(this).wrapInner(t.call(this,e))}):this.each(function(){var e=rt(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)})},wrap:function(t){var e=rt.isFunction(t);return this.each(function(i){rt(this).wrapAll(e?t.call(this,i):t)})},unwrap:function(){return this.parent().each(function(){rt.nodeName(this,"body")||rt(this).replaceWith(this.childNodes)}).end()}}),rt.expr.filters.hidden=function(t){return!rt.expr.filters.visible(t)},rt.expr.filters.visible=function(t){return t.offsetWidth>0||t.offsetHeight>0||t.getClientRects().length>0};var Ie=/%20/g,Te=/\[\]$/,Ee=/\r?\n/g,Ae=/^(?:submit|button|image|reset|file)$/i,Fe=/^(?:input|select|textarea|keygen)/i;rt.param=function(t,e){var i,n=[],s=function(t,e){e=rt.isFunction(e)?e():null==e?"":e,n[n.length]=encodeURIComponent(t)+"="+encodeURIComponent(e)};if(void 0===e&&(e=rt.ajaxSettings&&rt.ajaxSettings.traditional),rt.isArray(t)||t.jquery&&!rt.isPlainObject(t))rt.each(t,function(){s(this.name,this.value)});else for(i in t)V(i,t[i],e,s);return n.join("&").replace(Ie,"+")},rt.fn.extend({serialize:function(){return rt.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=rt.prop(this,"elements");return t?rt.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!rt(this).is(":disabled")&&Fe.test(this.nodeName)&&!Ae.test(t)&&(this.checked||!Pt.test(t))}).map(function(t,e){var i=rt(this).val();return null==i?null:rt.isArray(i)?rt.map(i,function(t){return{name:e.name,value:t.replace(Ee,"\r\n")}}):{name:e.name,value:i.replace(Ee,"\r\n")}}).get()}}),rt.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(e){}};var Pe={0:200,1223:204},Ne=rt.ajaxSettings.xhr();nt.cors=!!Ne&&"withCredentials"in Ne,nt.ajax=Ne=!!Ne,rt.ajaxTransport(function(e){var i,n;return nt.cors||Ne&&!e.crossDomain?{send:function(s,r){var o,a=e.xhr();if(a.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(o in e.xhrFields)a[o]=e.xhrFields[o];e.mimeType&&a.overrideMimeType&&a.overrideMimeType(e.mimeType),e.crossDomain||s["X-Requested-With"]||(s["X-Requested-With"]="XMLHttpRequest");for(o in s)a.setRequestHeader(o,s[o]);i=function(t){return function(){i&&(i=n=a.onload=a.onerror=a.onabort=a.onreadystatechange=null,"abort"===t?a.abort():"error"===t?"number"!=typeof a.status?r(0,"error"):r(a.status,a.statusText):r(Pe[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=i(),n=a.onerror=i("error"),void 0!==a.onabort?a.onabort=n:a.onreadystatechange=function(){4===a.readyState&&t.setTimeout(function(){i&&n()})},i=i("abort");try{a.send(e.hasContent&&e.data||null)}catch(l){if(i)throw l}},abort:function(){i&&i()}}:void 0}),rt.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return rt.globalEval(t),t}}}),rt.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),rt.ajaxTransport("script",function(t){if(t.crossDomain){var e,i;return{send:function(n,s){e=rt("<script>").prop({charset:t.scriptCharset,src:t.url}).on("load error",i=function(t){e.remove(),i=null,t&&s("error"===t.type?404:200,t.type)}),$.head.appendChild(e[0])},abort:function(){i&&i()}}}});var Oe=[],ze=/(=)\?(?=&|$)|\?\?/;rt.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Oe.pop()||rt.expando+"_"+ge++;return this[t]=!0,t}}),rt.ajaxPrefilter("json jsonp",function(e,i,n){var s,r,o,a=e.jsonp!==!1&&(ze.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&ze.test(e.data)&&"data");return a||"jsonp"===e.dataTypes[0]?(s=e.jsonpCallback=rt.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(ze,"$1"+s):e.jsonp!==!1&&(e.url+=(ve.test(e.url)?"&":"?")+e.jsonp+"="+s),e.converters["script json"]=function(){return o||rt.error(s+" was not called"),o[0]},e.dataTypes[0]="json",r=t[s],t[s]=function(){o=arguments},n.always(function(){void 0===r?rt(t).removeProp(s):t[s]=r,e[s]&&(e.jsonpCallback=i.jsonpCallback,Oe.push(s)),o&&rt.isFunction(r)&&r(o[0]),o=r=void 0}),"script"):void 0}),nt.createHTMLDocument=function(){var t=$.implementation.createHTMLDocument("").body;return t.innerHTML="<form></form><form></form>",2===t.childNodes.length}(),rt.parseHTML=function(t,e,i){if(!t||"string"!=typeof t)return null;"boolean"==typeof e&&(i=e,e=!1),e=e||(nt.createHTMLDocument?$.implementation.createHTMLDocument(""):$);var n=pt.exec(t),s=!i&&[];return n?[e.createElement(n[1])]:(n=d([t],e,s),s&&s.length&&rt(s).remove(),rt.merge([],n.childNodes))};var Re=rt.fn.load;rt.fn.load=function(t,e,i){if("string"!=typeof t&&Re)return Re.apply(this,arguments);var n,s,r,o=this,a=t.indexOf(" ");return a>-1&&(n=rt.trim(t.slice(a)),t=t.slice(0,a)),rt.isFunction(e)?(i=e,e=void 0):e&&"object"==typeof e&&(s="POST"),o.length>0&&rt.ajax({url:t,type:s||"GET",dataType:"html",data:e}).done(function(t){r=arguments,o.html(n?rt("<div>").append(rt.parseHTML(t)).find(n):t)}).always(i&&function(t,e){o.each(function(){i.apply(o,r||[t.responseText,e,t])})}),this},rt.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){rt.fn[e]=function(t){return this.on(e,t)}}),rt.expr.filters.animated=function(t){return rt.grep(rt.timers,function(e){return t===e.elem}).length},rt.offset={setOffset:function(t,e,i){var n,s,r,o,a,l,u,h=rt.css(t,"position"),c=rt(t),d={};"static"===h&&(t.style.position="relative"),a=c.offset(),r=rt.css(t,"top"),l=rt.css(t,"left"),u=("absolute"===h||"fixed"===h)&&(r+l).indexOf("auto")>-1,u?(n=c.position(),o=n.top,s=n.left):(o=parseFloat(r)||0,s=parseFloat(l)||0),rt.isFunction(e)&&(e=e.call(t,i,rt.extend({},a))),null!=e.top&&(d.top=e.top-a.top+o),null!=e.left&&(d.left=e.left-a.left+s),"using"in e?e.using.call(t,d):c.css(d)}},rt.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){rt.offset.setOffset(this,t,e)});var e,i,n=this[0],s={top:0,left:0},r=n&&n.ownerDocument;if(r)return e=r.documentElement,rt.contains(e,n)?(s=n.getBoundingClientRect(),i=X(r),{top:s.top+i.pageYOffset-e.clientTop,left:s.left+i.pageXOffset-e.clientLeft}):s},position:function(){if(this[0]){var t,e,i=this[0],n={top:0,left:0};return"fixed"===rt.css(i,"position")?e=i.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),rt.nodeName(t[0],"html")||(n=t.offset()),n.top+=rt.css(t[0],"borderTopWidth",!0),n.left+=rt.css(t[0],"borderLeftWidth",!0)),{top:e.top-n.top-rt.css(i,"marginTop",!0),left:e.left-n.left-rt.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===rt.css(t,"position");)t=t.offsetParent;return t||Qt})}}),rt.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var i="pageYOffset"===e;rt.fn[t]=function(n){return Mt(this,function(t,n,s){var r=X(t);return void 0===s?r?r[e]:t[n]:void(r?r.scrollTo(i?r.pageXOffset:s,i?s:r.pageYOffset):t[n]=s)},t,n,arguments.length)}}),rt.each(["top","left"],function(t,e){rt.cssHooks[e]=C(nt.pixelPosition,function(t,i){return i?(i=S(t,e),$t.test(i)?rt(t).position()[e]+"px":i):void 0})}),rt.each({Height:"height",Width:"width"},function(t,e){rt.each({padding:"inner"+t,content:e,"":"outer"+t},function(i,n){rt.fn[n]=function(n,s){var r=arguments.length&&(i||"boolean"!=typeof n),o=i||(n===!0||s===!0?"margin":"border");return Mt(this,function(e,i,n){var s;return rt.isWindow(e)?e.document.documentElement["client"+t]:9===e.nodeType?(s=e.documentElement,Math.max(e.body["scroll"+t],s["scroll"+t],e.body["offset"+t],s["offset"+t],s["client"+t])):void 0===n?rt.css(e,i,o):rt.style(e,i,n,o)},e,r?n:void 0,r,null)}})}),rt.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,n){return this.on(e,t,i,n)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)},size:function(){return this.length}}),rt.fn.andSelf=rt.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return rt});var Le=t.jQuery,He=t.$;return rt.noConflict=function(e){return t.$===rt&&(t.$=He),e&&t.jQuery===rt&&(t.jQuery=Le),rt},e||(t.jQuery=t.$=rt),rt}),function(t,e,i,n,s){function r(e){e=e.split(")");var i,s,r,o=t.trim,a=-1,l=e.length-1,u=M?new Float32Array(6):[],h=M?new Float32Array(6):[],c=M?new Float32Array(6):[1,0,0,1,0,0];for(u[0]=u[3]=c[0]=c[3]=1,u[1]=u[2]=u[4]=u[5]=0;++a<l;){switch(i=e[a].split("("),s=o(i[0]),r=i[1],h[0]=h[3]=1,h[1]=h[2]=h[4]=h[5]=0,s){case I+"X":h[4]=parseInt(r,10);break;case I+"Y":h[5]=parseInt(r,10);break;case I:r=r.split(","),h[4]=parseInt(r[0],10),h[5]=parseInt(r[1]||0,10);break;case T:r=d(r),h[0]=n.cos(r),h[1]=n.sin(r),h[2]=-n.sin(r),h[3]=n.cos(r);break;case E+"X":h[0]=+r;break;case E+"Y":h[3]=r;break;case E:r=r.split(","),h[0]=r[0],h[3]=r.length>1?r[1]:r[0];break;case A+"X":h[2]=n.tan(d(r));break;case A+"Y":h[1]=n.tan(d(r));break;case F:r=r.split(","),h[0]=r[0],h[1]=r[1],h[2]=r[2],h[3]=r[3],h[4]=parseInt(r[4],10),h[5]=parseInt(r[5],10)}c[0]=u[0]*h[0]+u[2]*h[1],c[1]=u[1]*h[0]+u[3]*h[1],c[2]=u[0]*h[2]+u[2]*h[3],c[3]=u[1]*h[2]+u[3]*h[3],c[4]=u[0]*h[4]+u[2]*h[5]+u[4],c[5]=u[1]*h[4]+u[3]*h[5]+u[5],u=[c[0],c[1],c[2],c[3],c[4],c[5]]}return c}function o(t){var e,i,s,r=t[0],o=t[1],a=t[2],l=t[3];return r*l-o*a?(e=n.sqrt(r*r+o*o),r/=e,o/=e,s=r*a+o*l,a-=r*s,l-=o*s,i=n.sqrt(a*a+l*l),a/=i,l/=i,s/=i,o*a>r*l&&(r=-r,o=-o,s=-s,e=-e)):e=i=s=0,[[I,[+t[4],+t[5]]],[T,n.atan2(o,r)],[A+"X",n.atan(s)],[E,[e,i]]]}function a(e,i){var n,s,a,d,p={start:[],end:[]},m=-1;if(("none"==e||u(e))&&(e=""),("none"==i||u(i))&&(i=""),e&&i&&!i.indexOf("matrix")&&f(e).join()==f(i.split(")")[0]).join()&&(p.origin=e,e="",i=i.slice(i.indexOf(")")+1)),e||i){if(e&&i&&h(e)!=h(i))p.start=o(r(e)),p.end=o(r(i));else for(e&&(e=e.split(")"))&&(n=e.length),i&&(i=i.split(")"))&&(n=i.length);++m<n-1;)e[m]&&(s=e[m].split("(")),i[m]&&(a=i[m].split("(")),d=t.trim((s||a)[0]),c(p.start,l(d,s?s[1]:0)),c(p.end,l(d,a?a[1]:0));return p}}function l(t,e){var i,n=+!t.indexOf(E),s=t.replace(/e[XY]/,"e");switch(t){case I+"Y":case E+"Y":e=[n,e?parseFloat(e):n];break;case I+"X":case I:case E+"X":i=1;case E:e=e?(e=e.split(","))&&[parseFloat(e[0]),parseFloat(e.length>1?e[1]:t==E?i||e[0]:n+"")]:[n,n];break;case A+"X":case A+"Y":case T:e=e?d(e):0;break;case F:return o(e?f(e):[1,0,0,1,0,0])}return[[s,e]]}function u(t){return k.test(t)}function h(t){return t.replace(/(?:\([^)]*\))|\s/g,"")}function c(t,e,i){for(;i=e.shift();)t.push(i)}function d(t){return~t.indexOf("deg")?parseInt(t,10)*(2*n.PI/360):~t.indexOf("grad")?parseInt(t,10)*(n.PI/200):parseFloat(t)}function f(t){return t=/([^,]*),([^,]*),([^,]*),([^,]*),([^,p]*)(?:px)?,([^)p]*)(?:px)?/.exec(t),[t[1],t[2],t[3],t[4],t[5],t[6]]}for(var p,m,g,v,y=i.createElement("div"),_=y.style,b="Transform",x=["O"+b,"ms"+b,"Webkit"+b,"Moz"+b],w=x.length,M=("Float32Array"in e),D=/Matrix([^)]*)/,k=/^\s*matrix\(\s*1\s*,\s*0\s*,\s*0\s*,\s*1\s*(?:,\s*0(?:px)?\s*){2}\)\s*$/,S="transform",C="transformOrigin",I="translate",T="rotate",E="scale",A="skew",F="matrix";w--;)x[w]in _&&(t.support[S]=p=x[w],t.support[C]=p+"Origin");p||(t.support.matrixFilter=m=""===_.filter),t.cssNumber[S]=t.cssNumber[C]=!0,p&&p!=S?(t.cssProps[S]=p,t.cssProps[C]=p+"Origin",p=="Moz"+b?g={get:function(e,i){return i?t.css(e,p).split("px").join(""):e.style[p]},set:function(t,e){t.style[p]=/matrix\([^)p]*\)/.test(e)?e.replace(/matrix((?:[^,]*,){4})([^,]*),([^)]*)/,F+"$1$2px,$3px"):e}}:/^1\.[0-5](?:\.|$)/.test(t.fn.jquery)&&(g={get:function(e,i){return i?t.css(e,p.replace(/^ms/,"Ms")):e.style[p]}})):m&&(g={get:function(e,i,n){var r,o,a=i&&e.currentStyle?e.currentStyle:e.style;return a&&D.test(a.filter)?(r=RegExp.$1.split(","),r=[r[0].split("=")[1],r[2].split("=")[1],r[1].split("=")[1],r[3].split("=")[1]]):r=[1,0,0,1],t.cssHooks[C]?(o=t._data(e,"transformTranslate",s),r[4]=o?o[0]:0,r[5]=o?o[1]:0):(r[4]=a?parseInt(a.left,10)||0:0,r[5]=a?parseInt(a.top,10)||0:0),n?r:F+"("+r+")"},set:function(e,i,n){var s,o,a,l,u=e.style;n||(u.zoom=1),i=r(i),o=["Matrix(M11="+i[0],"M12="+i[2],"M21="+i[1],"M22="+i[3],"SizingMethod='auto expand'"].join(),a=(s=e.currentStyle)&&s.filter||u.filter||"",u.filter=D.test(a)?a.replace(D,o):a+" progid:DXImageTransform.Microsoft."+o+")",t.cssHooks[C]?t.cssHooks[C].set(e,i):((l=t.transform.centerOrigin)&&(u["margin"==l?"marginLeft":"left"]=-(e.offsetWidth/2)+e.clientWidth/2+"px",u["margin"==l?"marginTop":"top"]=-(e.offsetHeight/2)+e.clientHeight/2+"px"),u.left=i[4]+"px",u.top=i[5]+"px")}}),g&&(t.cssHooks[S]=g),v=g&&g.get||t.css,t.fx.step.transform=function(e){var i,s,r,o,l=e.elem,u=e.start,h=e.end,c=e.pos,d="",f=1e5;for(u&&"string"!=typeof u||(u||(u=v(l,p)),m&&(l.style.zoom=1),h=h.split("+=").join(u),t.extend(e,a(u,h)),u=e.start,h=e.end),i=u.length;i--;)switch(s=u[i],r=h[i],o=0,s[0]){case I:o="px";case E:o||(o=""),d=s[0]+"("+n.round((s[1][0]+(r[1][0]-s[1][0])*c)*f)/f+o+","+n.round((s[1][1]+(r[1][1]-s[1][1])*c)*f)/f+o+")"+d;break;case A+"X":case A+"Y":case T:d=s[0]+"("+n.round((s[1]+(r[1]-s[1])*c)*f)/f+"rad)"+d}e.origin&&(d=e.origin+d),g&&g.set?g.set(l,d,1):l.style[p]=d},t.transform={centerOrigin:"margin"}}(jQuery,window,document,Math),define("jquery.transform2d",function(){}),function(t,e,i){"use strict";function n(t){return t.slice(0,1).toUpperCase()+t.slice(1)}for(var s,r,o=i.createElement("div"),a=o.style,l=["O","ms","Webkit","Moz"],u=l.length,h=["transform","transformOrigin","transformStyle","perspective","perspectiveOrigin","backfaceVisibility"],c=l.length;u--;)l[u]+n(h[0])in a&&(s=l[u]);if(s)for(;c--;)r=s+n(h[c]),r in a&&(t.cssNumber[h[c]]=!0,t.cssProps[h[c]]=r,"MozTransform"===r&&(t.cssHooks[h[c]]={get:function(e,i){return i?t.css(e,r).split("px").join(""):e.style[r]},set:function(t,e){/matrix\([^)p]*\)/.test(e)&&(e=e.replace(/matrix((?:[^,]*,){4})([^,]*),([^)]*)/,"matrix$1$2px,$3px")),t.style[r]=e}}))}(jQuery,window,document),define("jquery.transform3d",function(){}),define("util/Factory",[],function(){"use strict";function t(t){this.instance=null,this.ObjectType=t}return t.prototype.getInstance=function(t){return t||void 0===t?(null===this.instance&&(this.instance=new this.ObjectType),this.instance):new this.ObjectType},t.createFactory=function(e){return new t(e)},t}),define("behaviour/Animate",["require","jquery.transform2d","jquery.transform3d","../util/Factory"],function(t){"use strict";function e(){this.numRunning=0,this.finishedCallbacks=[]}t("jquery.transform2d"),t("jquery.transform3d");var i=t("../util/Factory");return e.prototype.onFinished=function(t){this.numRunning>0?this.finishedCallbacks.push(t):t()},e.prototype.reset=function(){this.finishedCallbacks.length=0,this.numRunning=0},e.prototype._animate=function(t,e){this.numRunning++,t.css(e.css).delay(e.delay||0).animate(e.animate,{duration:e.animate.duration||1500,easing:e.animate.easing||"easeOutElastic",complete:e.animate.complete||function(){},queue:e.animate.queue||!0,always:function(){this.numRunning=Math.max(0,this.numRunning-1),0===this.numRunning&&(this.finishedCallbacks.forEach(function(t){t()}),this.finishedCallbacks.length=0)}.bind(this)})},e.prototype.scaleIn=function(t,e){e=e||{},e.css=e.css||{},e.animate=e.animate||{transform:"scale(1)"},this._animate(t,e)},e.prototype.scaleOut=function(t,e){e=e||{},e.css=e.css||{},e.animate=e.animate||{transform:"scale(0)"},this._animate(t,e)},e.prototype.scale=function(t,e){e=e||{},e.css=e.css||{},e.css.transform="scale(0)",e.animate=e.animate||{},e.animate.transform="scale(1)",this._animate(t,e)},e.prototype.move=function(t,e){e=e||{},e.css=e.css||{},e.animate=e.animate||{},this._animate(t,e)},i.createFactory(e)}),!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define("gl-matrix",[],e);else{var i=e();for(var n in i)("object"==typeof exports?exports:t)[n]=i[n]}}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var s=i[n]={exports:{},id:n,loaded:!1};return t[n].call(s.exports,s,s.exports,e),s.loaded=!0,s.exports}var i={};return e.m=t,e.c=i,e.p="",e(0)}([function(t,e,i){e.glMatrix=i(1),e.mat2=i(2),e.mat2d=i(3),e.mat3=i(4),e.mat4=i(5),e.quat=i(6),e.vec2=i(9),e.vec3=i(7),e.vec4=i(8)},function(t,e){var i={};i.EPSILON=1e-6,i.ARRAY_TYPE="undefined"!=typeof Float32Array?Float32Array:Array,i.RANDOM=Math.random,i.ENABLE_SIMD=!1,i.SIMD_AVAILABLE=i.ARRAY_TYPE===Float32Array&&"SIMD"in this,i.USE_SIMD=i.ENABLE_SIMD&&i.SIMD_AVAILABLE,i.setMatrixArrayType=function(t){i.ARRAY_TYPE=t};var n=Math.PI/180;i.toRadian=function(t){return t*n},i.equals=function(t,e){return Math.abs(t-e)<=i.EPSILON*Math.max(1,Math.abs(t),Math.abs(e))},t.exports=i},function(t,e,i){var n=i(1),s={};s.create=function(){var t=new n.ARRAY_TYPE(4);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},s.clone=function(t){var e=new n.ARRAY_TYPE(4);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},s.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},s.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},s.fromValues=function(t,e,i,s){var r=new n.ARRAY_TYPE(4);return r[0]=t,r[1]=e,r[2]=i,r[3]=s,r},s.set=function(t,e,i,n,s){return t[0]=e,t[1]=i,t[2]=n,t[3]=s,t},s.transpose=function(t,e){if(t===e){var i=e[1];t[1]=e[2],t[2]=i}else t[0]=e[0],t[1]=e[2],t[2]=e[1],t[3]=e[3];return t},s.invert=function(t,e){var i=e[0],n=e[1],s=e[2],r=e[3],o=i*r-s*n;return o?(o=1/o,t[0]=r*o,t[1]=-n*o,t[2]=-s*o,t[3]=i*o,t):null},s.adjoint=function(t,e){var i=e[0];return t[0]=e[3],t[1]=-e[1],t[2]=-e[2],t[3]=i,t},s.determinant=function(t){return t[0]*t[3]-t[2]*t[1]},s.multiply=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=i[0],l=i[1],u=i[2],h=i[3];return t[0]=n*a+r*l,t[1]=s*a+o*l,t[2]=n*u+r*h,t[3]=s*u+o*h,t},s.mul=s.multiply,s.rotate=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=Math.sin(i),l=Math.cos(i);return t[0]=n*l+r*a,t[1]=s*l+o*a,t[2]=n*-a+r*l,t[3]=s*-a+o*l,t},s.scale=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=i[0],l=i[1];return t[0]=n*a,t[1]=s*a,t[2]=r*l,t[3]=o*l,t},s.fromRotation=function(t,e){var i=Math.sin(e),n=Math.cos(e);return t[0]=n,t[1]=i,t[2]=-i,t[3]=n,t},s.fromScaling=function(t,e){return t[0]=e[0],
t[1]=0,t[2]=0,t[3]=e[1],t},s.str=function(t){return"mat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},s.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2))},s.LDU=function(t,e,i,n){return t[2]=n[2]/n[0],i[0]=n[0],i[1]=n[1],i[3]=n[3]-t[2]*i[1],[t,e,i]},s.add=function(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t[3]=e[3]+i[3],t},s.subtract=function(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t[3]=e[3]-i[3],t},s.sub=s.subtract,s.exactEquals=function(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3]},s.equals=function(t,e){var i=t[0],s=t[1],r=t[2],o=t[3],a=e[0],l=e[1],u=e[2],h=e[3];return Math.abs(i-a)<=n.EPSILON*Math.max(1,Math.abs(i),Math.abs(a))&&Math.abs(s-l)<=n.EPSILON*Math.max(1,Math.abs(s),Math.abs(l))&&Math.abs(r-u)<=n.EPSILON*Math.max(1,Math.abs(r),Math.abs(u))&&Math.abs(o-h)<=n.EPSILON*Math.max(1,Math.abs(o),Math.abs(h))},s.multiplyScalar=function(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=e[3]*i,t},s.multiplyScalarAndAdd=function(t,e,i,n){return t[0]=e[0]+i[0]*n,t[1]=e[1]+i[1]*n,t[2]=e[2]+i[2]*n,t[3]=e[3]+i[3]*n,t},t.exports=s},function(t,e,i){var n=i(1),s={};s.create=function(){var t=new n.ARRAY_TYPE(6);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},s.clone=function(t){var e=new n.ARRAY_TYPE(6);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e},s.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},s.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},s.fromValues=function(t,e,i,s,r,o){var a=new n.ARRAY_TYPE(6);return a[0]=t,a[1]=e,a[2]=i,a[3]=s,a[4]=r,a[5]=o,a},s.set=function(t,e,i,n,s,r,o){return t[0]=e,t[1]=i,t[2]=n,t[3]=s,t[4]=r,t[5]=o,t},s.invert=function(t,e){var i=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],l=i*r-n*s;return l?(l=1/l,t[0]=r*l,t[1]=-n*l,t[2]=-s*l,t[3]=i*l,t[4]=(s*a-r*o)*l,t[5]=(n*o-i*a)*l,t):null},s.determinant=function(t){return t[0]*t[3]-t[1]*t[2]},s.multiply=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=e[4],l=e[5],u=i[0],h=i[1],c=i[2],d=i[3],f=i[4],p=i[5];return t[0]=n*u+r*h,t[1]=s*u+o*h,t[2]=n*c+r*d,t[3]=s*c+o*d,t[4]=n*f+r*p+a,t[5]=s*f+o*p+l,t},s.mul=s.multiply,s.rotate=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=e[4],l=e[5],u=Math.sin(i),h=Math.cos(i);return t[0]=n*h+r*u,t[1]=s*h+o*u,t[2]=n*-u+r*h,t[3]=s*-u+o*h,t[4]=a,t[5]=l,t},s.scale=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=e[4],l=e[5],u=i[0],h=i[1];return t[0]=n*u,t[1]=s*u,t[2]=r*h,t[3]=o*h,t[4]=a,t[5]=l,t},s.translate=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=e[4],l=e[5],u=i[0],h=i[1];return t[0]=n,t[1]=s,t[2]=r,t[3]=o,t[4]=n*u+r*h+a,t[5]=s*u+o*h+l,t},s.fromRotation=function(t,e){var i=Math.sin(e),n=Math.cos(e);return t[0]=n,t[1]=i,t[2]=-i,t[3]=n,t[4]=0,t[5]=0,t},s.fromScaling=function(t,e){return t[0]=e[0],t[1]=0,t[2]=0,t[3]=e[1],t[4]=0,t[5]=0,t},s.fromTranslation=function(t,e){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=e[0],t[5]=e[1],t},s.str=function(t){return"mat2d("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+")"},s.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+1)},s.add=function(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t[3]=e[3]+i[3],t[4]=e[4]+i[4],t[5]=e[5]+i[5],t},s.subtract=function(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t[3]=e[3]-i[3],t[4]=e[4]-i[4],t[5]=e[5]-i[5],t},s.sub=s.subtract,s.multiplyScalar=function(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=e[3]*i,t[4]=e[4]*i,t[5]=e[5]*i,t},s.multiplyScalarAndAdd=function(t,e,i,n){return t[0]=e[0]+i[0]*n,t[1]=e[1]+i[1]*n,t[2]=e[2]+i[2]*n,t[3]=e[3]+i[3]*n,t[4]=e[4]+i[4]*n,t[5]=e[5]+i[5]*n,t},s.exactEquals=function(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3]&&t[4]===e[4]&&t[5]===e[5]},s.equals=function(t,e){var i=t[0],s=t[1],r=t[2],o=t[3],a=t[4],l=t[5],u=e[0],h=e[1],c=e[2],d=e[3],f=e[4],p=e[5];return Math.abs(i-u)<=n.EPSILON*Math.max(1,Math.abs(i),Math.abs(u))&&Math.abs(s-h)<=n.EPSILON*Math.max(1,Math.abs(s),Math.abs(h))&&Math.abs(r-c)<=n.EPSILON*Math.max(1,Math.abs(r),Math.abs(c))&&Math.abs(o-d)<=n.EPSILON*Math.max(1,Math.abs(o),Math.abs(d))&&Math.abs(a-f)<=n.EPSILON*Math.max(1,Math.abs(a),Math.abs(f))&&Math.abs(l-p)<=n.EPSILON*Math.max(1,Math.abs(l),Math.abs(p))},t.exports=s},function(t,e,i){var n=i(1),s={};s.create=function(){var t=new n.ARRAY_TYPE(9);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},s.fromMat4=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[4],t[4]=e[5],t[5]=e[6],t[6]=e[8],t[7]=e[9],t[8]=e[10],t},s.clone=function(t){var e=new n.ARRAY_TYPE(9);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},s.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},s.fromValues=function(t,e,i,s,r,o,a,l,u){var h=new n.ARRAY_TYPE(9);return h[0]=t,h[1]=e,h[2]=i,h[3]=s,h[4]=r,h[5]=o,h[6]=a,h[7]=l,h[8]=u,h},s.set=function(t,e,i,n,s,r,o,a,l,u){return t[0]=e,t[1]=i,t[2]=n,t[3]=s,t[4]=r,t[5]=o,t[6]=a,t[7]=l,t[8]=u,t},s.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},s.transpose=function(t,e){if(t===e){var i=e[1],n=e[2],s=e[5];t[1]=e[3],t[2]=e[6],t[3]=i,t[5]=e[7],t[6]=n,t[7]=s}else t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8];return t},s.invert=function(t,e){var i=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],l=e[6],u=e[7],h=e[8],c=h*o-a*u,d=-h*r+a*l,f=u*r-o*l,p=i*c+n*d+s*f;return p?(p=1/p,t[0]=c*p,t[1]=(-h*n+s*u)*p,t[2]=(a*n-s*o)*p,t[3]=d*p,t[4]=(h*i-s*l)*p,t[5]=(-a*i+s*r)*p,t[6]=f*p,t[7]=(-u*i+n*l)*p,t[8]=(o*i-n*r)*p,t):null},s.adjoint=function(t,e){var i=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],l=e[6],u=e[7],h=e[8];return t[0]=o*h-a*u,t[1]=s*u-n*h,t[2]=n*a-s*o,t[3]=a*l-r*h,t[4]=i*h-s*l,t[5]=s*r-i*a,t[6]=r*u-o*l,t[7]=n*l-i*u,t[8]=i*o-n*r,t},s.determinant=function(t){var e=t[0],i=t[1],n=t[2],s=t[3],r=t[4],o=t[5],a=t[6],l=t[7],u=t[8];return e*(u*r-o*l)+i*(-u*s+o*a)+n*(l*s-r*a)},s.multiply=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=e[4],l=e[5],u=e[6],h=e[7],c=e[8],d=i[0],f=i[1],p=i[2],m=i[3],g=i[4],v=i[5],y=i[6],_=i[7],b=i[8];return t[0]=d*n+f*o+p*u,t[1]=d*s+f*a+p*h,t[2]=d*r+f*l+p*c,t[3]=m*n+g*o+v*u,t[4]=m*s+g*a+v*h,t[5]=m*r+g*l+v*c,t[6]=y*n+_*o+b*u,t[7]=y*s+_*a+b*h,t[8]=y*r+_*l+b*c,t},s.mul=s.multiply,s.translate=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=e[4],l=e[5],u=e[6],h=e[7],c=e[8],d=i[0],f=i[1];return t[0]=n,t[1]=s,t[2]=r,t[3]=o,t[4]=a,t[5]=l,t[6]=d*n+f*o+u,t[7]=d*s+f*a+h,t[8]=d*r+f*l+c,t},s.rotate=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=e[4],l=e[5],u=e[6],h=e[7],c=e[8],d=Math.sin(i),f=Math.cos(i);return t[0]=f*n+d*o,t[1]=f*s+d*a,t[2]=f*r+d*l,t[3]=f*o-d*n,t[4]=f*a-d*s,t[5]=f*l-d*r,t[6]=u,t[7]=h,t[8]=c,t},s.scale=function(t,e,i){var n=i[0],s=i[1];return t[0]=n*e[0],t[1]=n*e[1],t[2]=n*e[2],t[3]=s*e[3],t[4]=s*e[4],t[5]=s*e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},s.fromTranslation=function(t,e){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=e[0],t[7]=e[1],t[8]=1,t},s.fromRotation=function(t,e){var i=Math.sin(e),n=Math.cos(e);return t[0]=n,t[1]=i,t[2]=0,t[3]=-i,t[4]=n,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},s.fromScaling=function(t,e){return t[0]=e[0],t[1]=0,t[2]=0,t[3]=0,t[4]=e[1],t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},s.fromMat2d=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=0,t[3]=e[2],t[4]=e[3],t[5]=0,t[6]=e[4],t[7]=e[5],t[8]=1,t},s.fromQuat=function(t,e){var i=e[0],n=e[1],s=e[2],r=e[3],o=i+i,a=n+n,l=s+s,u=i*o,h=n*o,c=n*a,d=s*o,f=s*a,p=s*l,m=r*o,g=r*a,v=r*l;return t[0]=1-c-p,t[3]=h-v,t[6]=d+g,t[1]=h+v,t[4]=1-u-p,t[7]=f-m,t[2]=d-g,t[5]=f+m,t[8]=1-u-c,t},s.normalFromMat4=function(t,e){var i=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],l=e[6],u=e[7],h=e[8],c=e[9],d=e[10],f=e[11],p=e[12],m=e[13],g=e[14],v=e[15],y=i*a-n*o,_=i*l-s*o,b=i*u-r*o,x=n*l-s*a,w=n*u-r*a,M=s*u-r*l,D=h*m-c*p,k=h*g-d*p,S=h*v-f*p,C=c*g-d*m,I=c*v-f*m,T=d*v-f*g,E=y*T-_*I+b*C+x*S-w*k+M*D;return E?(E=1/E,t[0]=(a*T-l*I+u*C)*E,t[1]=(l*S-o*T-u*k)*E,t[2]=(o*I-a*S+u*D)*E,t[3]=(s*I-n*T-r*C)*E,t[4]=(i*T-s*S+r*k)*E,t[5]=(n*S-i*I-r*D)*E,t[6]=(m*M-g*w+v*x)*E,t[7]=(g*b-p*M-v*_)*E,t[8]=(p*w-m*b+v*y)*E,t):null},s.str=function(t){return"mat3("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+")"},s.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2))},s.add=function(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t[3]=e[3]+i[3],t[4]=e[4]+i[4],t[5]=e[5]+i[5],t[6]=e[6]+i[6],t[7]=e[7]+i[7],t[8]=e[8]+i[8],t},s.subtract=function(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t[3]=e[3]-i[3],t[4]=e[4]-i[4],t[5]=e[5]-i[5],t[6]=e[6]-i[6],t[7]=e[7]-i[7],t[8]=e[8]-i[8],t},s.sub=s.subtract,s.multiplyScalar=function(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=e[3]*i,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[7]=e[7]*i,t[8]=e[8]*i,t},s.multiplyScalarAndAdd=function(t,e,i,n){return t[0]=e[0]+i[0]*n,t[1]=e[1]+i[1]*n,t[2]=e[2]+i[2]*n,t[3]=e[3]+i[3]*n,t[4]=e[4]+i[4]*n,t[5]=e[5]+i[5]*n,t[6]=e[6]+i[6]*n,t[7]=e[7]+i[7]*n,t[8]=e[8]+i[8]*n,t},s.exactEquals=function(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3]&&t[4]===e[4]&&t[5]===e[5]&&t[6]===e[6]&&t[7]===e[7]&&t[8]===e[8]},s.equals=function(t,e){var i=t[0],s=t[1],r=t[2],o=t[3],a=t[4],l=t[5],u=t[6],h=t[7],c=t[8],d=e[0],f=e[1],p=e[2],m=e[3],g=e[4],v=e[5],y=t[6],_=e[7],b=e[8];return Math.abs(i-d)<=n.EPSILON*Math.max(1,Math.abs(i),Math.abs(d))&&Math.abs(s-f)<=n.EPSILON*Math.max(1,Math.abs(s),Math.abs(f))&&Math.abs(r-p)<=n.EPSILON*Math.max(1,Math.abs(r),Math.abs(p))&&Math.abs(o-m)<=n.EPSILON*Math.max(1,Math.abs(o),Math.abs(m))&&Math.abs(a-g)<=n.EPSILON*Math.max(1,Math.abs(a),Math.abs(g))&&Math.abs(l-v)<=n.EPSILON*Math.max(1,Math.abs(l),Math.abs(v))&&Math.abs(u-y)<=n.EPSILON*Math.max(1,Math.abs(u),Math.abs(y))&&Math.abs(h-_)<=n.EPSILON*Math.max(1,Math.abs(h),Math.abs(_))&&Math.abs(c-b)<=n.EPSILON*Math.max(1,Math.abs(c),Math.abs(b))},t.exports=s},function(t,e,i){var n=i(1),s={scalar:{},SIMD:{}};s.create=function(){var t=new n.ARRAY_TYPE(16);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},s.clone=function(t){var e=new n.ARRAY_TYPE(16);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},s.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},s.fromValues=function(t,e,i,s,r,o,a,l,u,h,c,d,f,p,m,g){var v=new n.ARRAY_TYPE(16);return v[0]=t,v[1]=e,v[2]=i,v[3]=s,v[4]=r,v[5]=o,v[6]=a,v[7]=l,v[8]=u,v[9]=h,v[10]=c,v[11]=d,v[12]=f,v[13]=p,v[14]=m,v[15]=g,v},s.set=function(t,e,i,n,s,r,o,a,l,u,h,c,d,f,p,m,g){return t[0]=e,t[1]=i,t[2]=n,t[3]=s,t[4]=r,t[5]=o,t[6]=a,t[7]=l,t[8]=u,t[9]=h,t[10]=c,t[11]=d,t[12]=f,t[13]=p,t[14]=m,t[15]=g,t},s.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},s.scalar.transpose=function(t,e){if(t===e){var i=e[1],n=e[2],s=e[3],r=e[6],o=e[7],a=e[11];t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=i,t[6]=e[9],t[7]=e[13],t[8]=n,t[9]=r,t[11]=e[14],t[12]=s,t[13]=o,t[14]=a}else t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15];return t},s.SIMD.transpose=function(t,e){var i,n,s,r,o,a,l,u,h,c;return i=SIMD.Float32x4.load(e,0),n=SIMD.Float32x4.load(e,4),s=SIMD.Float32x4.load(e,8),r=SIMD.Float32x4.load(e,12),o=SIMD.Float32x4.shuffle(i,n,0,1,4,5),a=SIMD.Float32x4.shuffle(s,r,0,1,4,5),l=SIMD.Float32x4.shuffle(o,a,0,2,4,6),u=SIMD.Float32x4.shuffle(o,a,1,3,5,7),SIMD.Float32x4.store(t,0,l),SIMD.Float32x4.store(t,4,u),o=SIMD.Float32x4.shuffle(i,n,2,3,6,7),a=SIMD.Float32x4.shuffle(s,r,2,3,6,7),h=SIMD.Float32x4.shuffle(o,a,0,2,4,6),c=SIMD.Float32x4.shuffle(o,a,1,3,5,7),SIMD.Float32x4.store(t,8,h),SIMD.Float32x4.store(t,12,c),t},s.transpose=n.USE_SIMD?s.SIMD.transpose:s.scalar.transpose,s.scalar.invert=function(t,e){var i=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],l=e[6],u=e[7],h=e[8],c=e[9],d=e[10],f=e[11],p=e[12],m=e[13],g=e[14],v=e[15],y=i*a-n*o,_=i*l-s*o,b=i*u-r*o,x=n*l-s*a,w=n*u-r*a,M=s*u-r*l,D=h*m-c*p,k=h*g-d*p,S=h*v-f*p,C=c*g-d*m,I=c*v-f*m,T=d*v-f*g,E=y*T-_*I+b*C+x*S-w*k+M*D;return E?(E=1/E,t[0]=(a*T-l*I+u*C)*E,t[1]=(s*I-n*T-r*C)*E,t[2]=(m*M-g*w+v*x)*E,t[3]=(d*w-c*M-f*x)*E,t[4]=(l*S-o*T-u*k)*E,t[5]=(i*T-s*S+r*k)*E,t[6]=(g*b-p*M-v*_)*E,t[7]=(h*M-d*b+f*_)*E,t[8]=(o*I-a*S+u*D)*E,t[9]=(n*S-i*I-r*D)*E,t[10]=(p*w-m*b+v*y)*E,t[11]=(c*b-h*w-f*y)*E,t[12]=(a*k-o*C-l*D)*E,t[13]=(i*C-n*k+s*D)*E,t[14]=(m*_-p*x-g*y)*E,t[15]=(h*x-c*_+d*y)*E,t):null},s.SIMD.invert=function(t,e){var i,n,s,r,o,a,l,u,h,c,d=SIMD.Float32x4.load(e,0),f=SIMD.Float32x4.load(e,4),p=SIMD.Float32x4.load(e,8),m=SIMD.Float32x4.load(e,12);return o=SIMD.Float32x4.shuffle(d,f,0,1,4,5),n=SIMD.Float32x4.shuffle(p,m,0,1,4,5),i=SIMD.Float32x4.shuffle(o,n,0,2,4,6),n=SIMD.Float32x4.shuffle(n,o,1,3,5,7),o=SIMD.Float32x4.shuffle(d,f,2,3,6,7),r=SIMD.Float32x4.shuffle(p,m,2,3,6,7),s=SIMD.Float32x4.shuffle(o,r,0,2,4,6),r=SIMD.Float32x4.shuffle(r,o,1,3,5,7),o=SIMD.Float32x4.mul(s,r),o=SIMD.Float32x4.swizzle(o,1,0,3,2),a=SIMD.Float32x4.mul(n,o),l=SIMD.Float32x4.mul(i,o),o=SIMD.Float32x4.swizzle(o,2,3,0,1),a=SIMD.Float32x4.sub(SIMD.Float32x4.mul(n,o),a),l=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,o),l),l=SIMD.Float32x4.swizzle(l,2,3,0,1),o=SIMD.Float32x4.mul(n,s),o=SIMD.Float32x4.swizzle(o,1,0,3,2),a=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,o),a),h=SIMD.Float32x4.mul(i,o),o=SIMD.Float32x4.swizzle(o,2,3,0,1),a=SIMD.Float32x4.sub(a,SIMD.Float32x4.mul(r,o)),h=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,o),h),h=SIMD.Float32x4.swizzle(h,2,3,0,1),o=SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(n,2,3,0,1),r),o=SIMD.Float32x4.swizzle(o,1,0,3,2),s=SIMD.Float32x4.swizzle(s,2,3,0,1),a=SIMD.Float32x4.add(SIMD.Float32x4.mul(s,o),a),u=SIMD.Float32x4.mul(i,o),o=SIMD.Float32x4.swizzle(o,2,3,0,1),a=SIMD.Float32x4.sub(a,SIMD.Float32x4.mul(s,o)),u=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,o),u),u=SIMD.Float32x4.swizzle(u,2,3,0,1),o=SIMD.Float32x4.mul(i,n),o=SIMD.Float32x4.swizzle(o,1,0,3,2),u=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,o),u),h=SIMD.Float32x4.sub(SIMD.Float32x4.mul(s,o),h),o=SIMD.Float32x4.swizzle(o,2,3,0,1),u=SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,o),u),h=SIMD.Float32x4.sub(h,SIMD.Float32x4.mul(s,o)),o=SIMD.Float32x4.mul(i,r),o=SIMD.Float32x4.swizzle(o,1,0,3,2),l=SIMD.Float32x4.sub(l,SIMD.Float32x4.mul(s,o)),u=SIMD.Float32x4.add(SIMD.Float32x4.mul(n,o),u),o=SIMD.Float32x4.swizzle(o,2,3,0,1),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(s,o),l),u=SIMD.Float32x4.sub(u,SIMD.Float32x4.mul(n,o)),o=SIMD.Float32x4.mul(i,s),o=SIMD.Float32x4.swizzle(o,1,0,3,2),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,o),l),h=SIMD.Float32x4.sub(h,SIMD.Float32x4.mul(n,o)),o=SIMD.Float32x4.swizzle(o,2,3,0,1),l=SIMD.Float32x4.sub(l,SIMD.Float32x4.mul(r,o)),h=SIMD.Float32x4.add(SIMD.Float32x4.mul(n,o),h),c=SIMD.Float32x4.mul(i,a),c=SIMD.Float32x4.add(SIMD.Float32x4.swizzle(c,2,3,0,1),c),c=SIMD.Float32x4.add(SIMD.Float32x4.swizzle(c,1,0,3,2),c),o=SIMD.Float32x4.reciprocalApproximation(c),c=SIMD.Float32x4.sub(SIMD.Float32x4.add(o,o),SIMD.Float32x4.mul(c,SIMD.Float32x4.mul(o,o))),(c=SIMD.Float32x4.swizzle(c,0,0,0,0))?(SIMD.Float32x4.store(t,0,SIMD.Float32x4.mul(c,a)),SIMD.Float32x4.store(t,4,SIMD.Float32x4.mul(c,l)),SIMD.Float32x4.store(t,8,SIMD.Float32x4.mul(c,u)),SIMD.Float32x4.store(t,12,SIMD.Float32x4.mul(c,h)),t):null},s.invert=n.USE_SIMD?s.SIMD.invert:s.scalar.invert,s.scalar.adjoint=function(t,e){var i=e[0],n=e[1],s=e[2],r=e[3],o=e[4],a=e[5],l=e[6],u=e[7],h=e[8],c=e[9],d=e[10],f=e[11],p=e[12],m=e[13],g=e[14],v=e[15];return t[0]=a*(d*v-f*g)-c*(l*v-u*g)+m*(l*f-u*d),t[1]=-(n*(d*v-f*g)-c*(s*v-r*g)+m*(s*f-r*d)),t[2]=n*(l*v-u*g)-a*(s*v-r*g)+m*(s*u-r*l),t[3]=-(n*(l*f-u*d)-a*(s*f-r*d)+c*(s*u-r*l)),t[4]=-(o*(d*v-f*g)-h*(l*v-u*g)+p*(l*f-u*d)),t[5]=i*(d*v-f*g)-h*(s*v-r*g)+p*(s*f-r*d),t[6]=-(i*(l*v-u*g)-o*(s*v-r*g)+p*(s*u-r*l)),t[7]=i*(l*f-u*d)-o*(s*f-r*d)+h*(s*u-r*l),t[8]=o*(c*v-f*m)-h*(a*v-u*m)+p*(a*f-u*c),t[9]=-(i*(c*v-f*m)-h*(n*v-r*m)+p*(n*f-r*c)),t[10]=i*(a*v-u*m)-o*(n*v-r*m)+p*(n*u-r*a),t[11]=-(i*(a*f-u*c)-o*(n*f-r*c)+h*(n*u-r*a)),t[12]=-(o*(c*g-d*m)-h*(a*g-l*m)+p*(a*d-l*c)),t[13]=i*(c*g-d*m)-h*(n*g-s*m)+p*(n*d-s*c),t[14]=-(i*(a*g-l*m)-o*(n*g-s*m)+p*(n*l-s*a)),t[15]=i*(a*d-l*c)-o*(n*d-s*c)+h*(n*l-s*a),t},s.SIMD.adjoint=function(t,e){var i,n,s,r,o,a,l,u,h,c,d,f,p,i=SIMD.Float32x4.load(e,0),n=SIMD.Float32x4.load(e,4),s=SIMD.Float32x4.load(e,8),r=SIMD.Float32x4.load(e,12);return h=SIMD.Float32x4.shuffle(i,n,0,1,4,5),a=SIMD.Float32x4.shuffle(s,r,0,1,4,5),o=SIMD.Float32x4.shuffle(h,a,0,2,4,6),a=SIMD.Float32x4.shuffle(a,h,1,3,5,7),h=SIMD.Float32x4.shuffle(i,n,2,3,6,7),u=SIMD.Float32x4.shuffle(s,r,2,3,6,7),l=SIMD.Float32x4.shuffle(h,u,0,2,4,6),u=SIMD.Float32x4.shuffle(u,h,1,3,5,7),h=SIMD.Float32x4.mul(l,u),h=SIMD.Float32x4.swizzle(h,1,0,3,2),c=SIMD.Float32x4.mul(a,h),d=SIMD.Float32x4.mul(o,h),h=SIMD.Float32x4.swizzle(h,2,3,0,1),c=SIMD.Float32x4.sub(SIMD.Float32x4.mul(a,h),c),d=SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,h),d),d=SIMD.Float32x4.swizzle(d,2,3,0,1),h=SIMD.Float32x4.mul(a,l),h=SIMD.Float32x4.swizzle(h,1,0,3,2),c=SIMD.Float32x4.add(SIMD.Float32x4.mul(u,h),c),p=SIMD.Float32x4.mul(o,h),h=SIMD.Float32x4.swizzle(h,2,3,0,1),c=SIMD.Float32x4.sub(c,SIMD.Float32x4.mul(u,h)),p=SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,h),p),p=SIMD.Float32x4.swizzle(p,2,3,0,1),h=SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(a,2,3,0,1),u),h=SIMD.Float32x4.swizzle(h,1,0,3,2),l=SIMD.Float32x4.swizzle(l,2,3,0,1),c=SIMD.Float32x4.add(SIMD.Float32x4.mul(l,h),c),f=SIMD.Float32x4.mul(o,h),h=SIMD.Float32x4.swizzle(h,2,3,0,1),c=SIMD.Float32x4.sub(c,SIMD.Float32x4.mul(l,h)),f=SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,h),f),f=SIMD.Float32x4.swizzle(f,2,3,0,1),h=SIMD.Float32x4.mul(o,a),h=SIMD.Float32x4.swizzle(h,1,0,3,2),f=SIMD.Float32x4.add(SIMD.Float32x4.mul(u,h),f),p=SIMD.Float32x4.sub(SIMD.Float32x4.mul(l,h),p),h=SIMD.Float32x4.swizzle(h,2,3,0,1),f=SIMD.Float32x4.sub(SIMD.Float32x4.mul(u,h),f),p=SIMD.Float32x4.sub(p,SIMD.Float32x4.mul(l,h)),h=SIMD.Float32x4.mul(o,u),h=SIMD.Float32x4.swizzle(h,1,0,3,2),d=SIMD.Float32x4.sub(d,SIMD.Float32x4.mul(l,h)),f=SIMD.Float32x4.add(SIMD.Float32x4.mul(a,h),f),h=SIMD.Float32x4.swizzle(h,2,3,0,1),d=SIMD.Float32x4.add(SIMD.Float32x4.mul(l,h),d),f=SIMD.Float32x4.sub(f,SIMD.Float32x4.mul(a,h)),h=SIMD.Float32x4.mul(o,l),h=SIMD.Float32x4.swizzle(h,1,0,3,2),d=SIMD.Float32x4.add(SIMD.Float32x4.mul(u,h),d),p=SIMD.Float32x4.sub(p,SIMD.Float32x4.mul(a,h)),h=SIMD.Float32x4.swizzle(h,2,3,0,1),d=SIMD.Float32x4.sub(d,SIMD.Float32x4.mul(u,h)),p=SIMD.Float32x4.add(SIMD.Float32x4.mul(a,h),p),SIMD.Float32x4.store(t,0,c),SIMD.Float32x4.store(t,4,d),SIMD.Float32x4.store(t,8,f),SIMD.Float32x4.store(t,12,p),t},s.adjoint=n.USE_SIMD?s.SIMD.adjoint:s.scalar.adjoint,s.determinant=function(t){var e=t[0],i=t[1],n=t[2],s=t[3],r=t[4],o=t[5],a=t[6],l=t[7],u=t[8],h=t[9],c=t[10],d=t[11],f=t[12],p=t[13],m=t[14],g=t[15],v=e*o-i*r,y=e*a-n*r,_=e*l-s*r,b=i*a-n*o,x=i*l-s*o,w=n*l-s*a,M=u*p-h*f,D=u*m-c*f,k=u*g-d*f,S=h*m-c*p,C=h*g-d*p,I=c*g-d*m;return v*I-y*C+_*S+b*k-x*D+w*M},s.SIMD.multiply=function(t,e,i){var n=SIMD.Float32x4.load(e,0),s=SIMD.Float32x4.load(e,4),r=SIMD.Float32x4.load(e,8),o=SIMD.Float32x4.load(e,12),a=SIMD.Float32x4.load(i,0),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(a,0,0,0,0),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(a,1,1,1,1),s),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(a,2,2,2,2),r),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(a,3,3,3,3),o))));SIMD.Float32x4.store(t,0,l);var u=SIMD.Float32x4.load(i,4),h=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,0,0,0,0),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,1,1,1,1),s),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,2,2,2,2),r),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,3,3,3,3),o))));SIMD.Float32x4.store(t,4,h);var c=SIMD.Float32x4.load(i,8),d=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,0,0,0,0),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,1,1,1,1),s),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,2,2,2,2),r),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,3,3,3,3),o))));SIMD.Float32x4.store(t,8,d);var f=SIMD.Float32x4.load(i,12),p=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(f,0,0,0,0),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(f,1,1,1,1),s),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(f,2,2,2,2),r),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(f,3,3,3,3),o))));return SIMD.Float32x4.store(t,12,p),t},s.scalar.multiply=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=e[4],l=e[5],u=e[6],h=e[7],c=e[8],d=e[9],f=e[10],p=e[11],m=e[12],g=e[13],v=e[14],y=e[15],_=i[0],b=i[1],x=i[2],w=i[3];return t[0]=_*n+b*a+x*c+w*m,t[1]=_*s+b*l+x*d+w*g,t[2]=_*r+b*u+x*f+w*v,t[3]=_*o+b*h+x*p+w*y,_=i[4],b=i[5],x=i[6],w=i[7],t[4]=_*n+b*a+x*c+w*m,t[5]=_*s+b*l+x*d+w*g,t[6]=_*r+b*u+x*f+w*v,t[7]=_*o+b*h+x*p+w*y,_=i[8],b=i[9],x=i[10],w=i[11],t[8]=_*n+b*a+x*c+w*m,t[9]=_*s+b*l+x*d+w*g,t[10]=_*r+b*u+x*f+w*v,t[11]=_*o+b*h+x*p+w*y,_=i[12],b=i[13],x=i[14],w=i[15],t[12]=_*n+b*a+x*c+w*m,t[13]=_*s+b*l+x*d+w*g,t[14]=_*r+b*u+x*f+w*v,t[15]=_*o+b*h+x*p+w*y,t},s.multiply=n.USE_SIMD?s.SIMD.multiply:s.scalar.multiply,s.mul=s.multiply,s.scalar.translate=function(t,e,i){var n,s,r,o,a,l,u,h,c,d,f,p,m=i[0],g=i[1],v=i[2];return e===t?(t[12]=e[0]*m+e[4]*g+e[8]*v+e[12],t[13]=e[1]*m+e[5]*g+e[9]*v+e[13],t[14]=e[2]*m+e[6]*g+e[10]*v+e[14],t[15]=e[3]*m+e[7]*g+e[11]*v+e[15]):(n=e[0],s=e[1],r=e[2],o=e[3],a=e[4],l=e[5],u=e[6],h=e[7],c=e[8],d=e[9],f=e[10],p=e[11],t[0]=n,t[1]=s,t[2]=r,t[3]=o,t[4]=a,t[5]=l,t[6]=u,t[7]=h,t[8]=c,t[9]=d,t[10]=f,t[11]=p,t[12]=n*m+a*g+c*v+e[12],t[13]=s*m+l*g+d*v+e[13],t[14]=r*m+u*g+f*v+e[14],t[15]=o*m+h*g+p*v+e[15]),t},s.SIMD.translate=function(t,e,i){var n=SIMD.Float32x4.load(e,0),s=SIMD.Float32x4.load(e,4),r=SIMD.Float32x4.load(e,8),o=SIMD.Float32x4.load(e,12),a=SIMD.Float32x4(i[0],i[1],i[2],0);e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11]),n=SIMD.Float32x4.mul(n,SIMD.Float32x4.swizzle(a,0,0,0,0)),s=SIMD.Float32x4.mul(s,SIMD.Float32x4.swizzle(a,1,1,1,1)),r=SIMD.Float32x4.mul(r,SIMD.Float32x4.swizzle(a,2,2,2,2));var l=SIMD.Float32x4.add(n,SIMD.Float32x4.add(s,SIMD.Float32x4.add(r,o)));return SIMD.Float32x4.store(t,12,l),t},s.translate=n.USE_SIMD?s.SIMD.translate:s.scalar.translate,s.scalar.scale=function(t,e,i){var n=i[0],s=i[1],r=i[2];return t[0]=e[0]*n,t[1]=e[1]*n,t[2]=e[2]*n,t[3]=e[3]*n,t[4]=e[4]*s,t[5]=e[5]*s,t[6]=e[6]*s,t[7]=e[7]*s,t[8]=e[8]*r,t[9]=e[9]*r,t[10]=e[10]*r,t[11]=e[11]*r,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},s.SIMD.scale=function(t,e,i){var n,s,r,o=SIMD.Float32x4(i[0],i[1],i[2],0);return n=SIMD.Float32x4.load(e,0),SIMD.Float32x4.store(t,0,SIMD.Float32x4.mul(n,SIMD.Float32x4.swizzle(o,0,0,0,0))),s=SIMD.Float32x4.load(e,4),SIMD.Float32x4.store(t,4,SIMD.Float32x4.mul(s,SIMD.Float32x4.swizzle(o,1,1,1,1))),r=SIMD.Float32x4.load(e,8),SIMD.Float32x4.store(t,8,SIMD.Float32x4.mul(r,SIMD.Float32x4.swizzle(o,2,2,2,2))),t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},s.scale=n.USE_SIMD?s.SIMD.scale:s.scalar.scale,s.rotate=function(t,e,i,s){var r,o,a,l,u,h,c,d,f,p,m,g,v,y,_,b,x,w,M,D,k,S,C,I,T=s[0],E=s[1],A=s[2],F=Math.sqrt(T*T+E*E+A*A);return Math.abs(F)<n.EPSILON?null:(F=1/F,T*=F,E*=F,A*=F,r=Math.sin(i),o=Math.cos(i),a=1-o,l=e[0],u=e[1],h=e[2],c=e[3],d=e[4],f=e[5],p=e[6],m=e[7],g=e[8],v=e[9],y=e[10],_=e[11],b=T*T*a+o,x=E*T*a+A*r,w=A*T*a-E*r,M=T*E*a-A*r,D=E*E*a+o,k=A*E*a+T*r,S=T*A*a+E*r,C=E*A*a-T*r,I=A*A*a+o,t[0]=l*b+d*x+g*w,t[1]=u*b+f*x+v*w,t[2]=h*b+p*x+y*w,t[3]=c*b+m*x+_*w,t[4]=l*M+d*D+g*k,t[5]=u*M+f*D+v*k,t[6]=h*M+p*D+y*k,t[7]=c*M+m*D+_*k,t[8]=l*S+d*C+g*I,t[9]=u*S+f*C+v*I,t[10]=h*S+p*C+y*I,t[11]=c*S+m*C+_*I,e!==t&&(t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t)},s.scalar.rotateX=function(t,e,i){var n=Math.sin(i),s=Math.cos(i),r=e[4],o=e[5],a=e[6],l=e[7],u=e[8],h=e[9],c=e[10],d=e[11];return e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=r*s+u*n,t[5]=o*s+h*n,t[6]=a*s+c*n,t[7]=l*s+d*n,t[8]=u*s-r*n,t[9]=h*s-o*n,t[10]=c*s-a*n,t[11]=d*s-l*n,t},s.SIMD.rotateX=function(t,e,i){var n=SIMD.Float32x4.splat(Math.sin(i)),s=SIMD.Float32x4.splat(Math.cos(i));e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]);var r=SIMD.Float32x4.load(e,4),o=SIMD.Float32x4.load(e,8);return SIMD.Float32x4.store(t,4,SIMD.Float32x4.add(SIMD.Float32x4.mul(r,s),SIMD.Float32x4.mul(o,n))),SIMD.Float32x4.store(t,8,SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,s),SIMD.Float32x4.mul(r,n))),t},s.rotateX=n.USE_SIMD?s.SIMD.rotateX:s.scalar.rotateX,s.scalar.rotateY=function(t,e,i){var n=Math.sin(i),s=Math.cos(i),r=e[0],o=e[1],a=e[2],l=e[3],u=e[8],h=e[9],c=e[10],d=e[11];return e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=r*s-u*n,t[1]=o*s-h*n,t[2]=a*s-c*n,t[3]=l*s-d*n,t[8]=r*n+u*s,t[9]=o*n+h*s,t[10]=a*n+c*s,t[11]=l*n+d*s,t},s.SIMD.rotateY=function(t,e,i){var n=SIMD.Float32x4.splat(Math.sin(i)),s=SIMD.Float32x4.splat(Math.cos(i));e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]);var r=SIMD.Float32x4.load(e,0),o=SIMD.Float32x4.load(e,8);return SIMD.Float32x4.store(t,0,SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,s),SIMD.Float32x4.mul(o,n))),SIMD.Float32x4.store(t,8,SIMD.Float32x4.add(SIMD.Float32x4.mul(r,n),SIMD.Float32x4.mul(o,s))),t},s.rotateY=n.USE_SIMD?s.SIMD.rotateY:s.scalar.rotateY,s.scalar.rotateZ=function(t,e,i){var n=Math.sin(i),s=Math.cos(i),r=e[0],o=e[1],a=e[2],l=e[3],u=e[4],h=e[5],c=e[6],d=e[7];return e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=r*s+u*n,t[1]=o*s+h*n,t[2]=a*s+c*n,t[3]=l*s+d*n,t[4]=u*s-r*n,t[5]=h*s-o*n,t[6]=c*s-a*n,t[7]=d*s-l*n,t},s.SIMD.rotateZ=function(t,e,i){var n=SIMD.Float32x4.splat(Math.sin(i)),s=SIMD.Float32x4.splat(Math.cos(i));e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]);var r=SIMD.Float32x4.load(e,0),o=SIMD.Float32x4.load(e,4);return SIMD.Float32x4.store(t,0,SIMD.Float32x4.add(SIMD.Float32x4.mul(r,s),SIMD.Float32x4.mul(o,n))),SIMD.Float32x4.store(t,4,SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,s),SIMD.Float32x4.mul(r,n))),t},s.rotateZ=n.USE_SIMD?s.SIMD.rotateZ:s.scalar.rotateZ,s.fromTranslation=function(t,e){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=e[0],t[13]=e[1],t[14]=e[2],t[15]=1,t},s.fromScaling=function(t,e){return t[0]=e[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},s.fromRotation=function(t,e,i){var s,r,o,a=i[0],l=i[1],u=i[2],h=Math.sqrt(a*a+l*l+u*u);return Math.abs(h)<n.EPSILON?null:(h=1/h,a*=h,l*=h,u*=h,s=Math.sin(e),r=Math.cos(e),o=1-r,t[0]=a*a*o+r,t[1]=l*a*o+u*s,t[2]=u*a*o-l*s,t[3]=0,t[4]=a*l*o-u*s,t[5]=l*l*o+r,t[6]=u*l*o+a*s,t[7]=0,t[8]=a*u*o+l*s,t[9]=l*u*o-a*s,t[10]=u*u*o+r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t)},s.fromXRotation=function(t,e){var i=Math.sin(e),n=Math.cos(e);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n,t[6]=i,t[7]=0,t[8]=0,t[9]=-i,t[10]=n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},s.fromYRotation=function(t,e){var i=Math.sin(e),n=Math.cos(e);return t[0]=n,t[1]=0,t[2]=-i,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=i,t[9]=0,t[10]=n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},s.fromZRotation=function(t,e){var i=Math.sin(e),n=Math.cos(e);return t[0]=n,t[1]=i,t[2]=0,t[3]=0,t[4]=-i,t[5]=n,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},s.fromRotationTranslation=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=n+n,l=s+s,u=r+r,h=n*a,c=n*l,d=n*u,f=s*l,p=s*u,m=r*u,g=o*a,v=o*l,y=o*u;return t[0]=1-(f+m),t[1]=c+y,t[2]=d-v,t[3]=0,t[4]=c-y,t[5]=1-(h+m),t[6]=p+g,t[7]=0,t[8]=d+v,t[9]=p-g,t[10]=1-(h+f),t[11]=0,t[12]=i[0],t[13]=i[1],t[14]=i[2],t[15]=1,t},s.getTranslation=function(t,e){return t[0]=e[12],t[1]=e[13],t[2]=e[14],t},s.getRotation=function(t,e){var i=e[0]+e[5]+e[10],n=0;return i>0?(n=2*Math.sqrt(i+1),t[3]=.25*n,t[0]=(e[6]-e[9])/n,t[1]=(e[8]-e[2])/n,t[2]=(e[1]-e[4])/n):e[0]>e[5]&e[0]>e[10]?(n=2*Math.sqrt(1+e[0]-e[5]-e[10]),t[3]=(e[6]-e[9])/n,t[0]=.25*n,t[1]=(e[1]+e[4])/n,t[2]=(e[8]+e[2])/n):e[5]>e[10]?(n=2*Math.sqrt(1+e[5]-e[0]-e[10]),t[3]=(e[8]-e[2])/n,t[0]=(e[1]+e[4])/n,t[1]=.25*n,t[2]=(e[6]+e[9])/n):(n=2*Math.sqrt(1+e[10]-e[0]-e[5]),t[3]=(e[1]-e[4])/n,t[0]=(e[8]+e[2])/n,t[1]=(e[6]+e[9])/n,t[2]=.25*n),t},s.fromRotationTranslationScale=function(t,e,i,n){var s=e[0],r=e[1],o=e[2],a=e[3],l=s+s,u=r+r,h=o+o,c=s*l,d=s*u,f=s*h,p=r*u,m=r*h,g=o*h,v=a*l,y=a*u,_=a*h,b=n[0],x=n[1],w=n[2];return t[0]=(1-(p+g))*b,t[1]=(d+_)*b,t[2]=(f-y)*b,t[3]=0,t[4]=(d-_)*x,t[5]=(1-(c+g))*x,t[6]=(m+v)*x,t[7]=0,t[8]=(f+y)*w,t[9]=(m-v)*w,t[10]=(1-(c+p))*w,t[11]=0,t[12]=i[0],t[13]=i[1],t[14]=i[2],t[15]=1,t},s.fromRotationTranslationScaleOrigin=function(t,e,i,n,s){var r=e[0],o=e[1],a=e[2],l=e[3],u=r+r,h=o+o,c=a+a,d=r*u,f=r*h,p=r*c,m=o*h,g=o*c,v=a*c,y=l*u,_=l*h,b=l*c,x=n[0],w=n[1],M=n[2],D=s[0],k=s[1],S=s[2];return t[0]=(1-(m+v))*x,t[1]=(f+b)*x,t[2]=(p-_)*x,t[3]=0,t[4]=(f-b)*w,t[5]=(1-(d+v))*w,t[6]=(g+y)*w,t[7]=0,t[8]=(p+_)*M,t[9]=(g-y)*M,t[10]=(1-(d+m))*M,t[11]=0,t[12]=i[0]+D-(t[0]*D+t[4]*k+t[8]*S),t[13]=i[1]+k-(t[1]*D+t[5]*k+t[9]*S),t[14]=i[2]+S-(t[2]*D+t[6]*k+t[10]*S),t[15]=1,t},s.fromQuat=function(t,e){var i=e[0],n=e[1],s=e[2],r=e[3],o=i+i,a=n+n,l=s+s,u=i*o,h=n*o,c=n*a,d=s*o,f=s*a,p=s*l,m=r*o,g=r*a,v=r*l;return t[0]=1-c-p,t[1]=h+v,t[2]=d-g,t[3]=0,t[4]=h-v,t[5]=1-u-p,t[6]=f+m,t[7]=0,t[8]=d+g,t[9]=f-m,t[10]=1-u-c,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},s.frustum=function(t,e,i,n,s,r,o){var a=1/(i-e),l=1/(s-n),u=1/(r-o);return t[0]=2*r*a,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*r*l,t[6]=0,t[7]=0,t[8]=(i+e)*a,t[9]=(s+n)*l,t[10]=(o+r)*u,t[11]=-1,t[12]=0,t[13]=0,t[14]=o*r*2*u,t[15]=0,t},s.perspective=function(t,e,i,n,s){var r=1/Math.tan(e/2),o=1/(n-s);return t[0]=r/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=(s+n)*o,t[11]=-1,t[12]=0,t[13]=0,t[14]=2*s*n*o,t[15]=0,t},s.perspectiveFromFieldOfView=function(t,e,i,n){var s=Math.tan(e.upDegrees*Math.PI/180),r=Math.tan(e.downDegrees*Math.PI/180),o=Math.tan(e.leftDegrees*Math.PI/180),a=Math.tan(e.rightDegrees*Math.PI/180),l=2/(o+a),u=2/(s+r);return t[0]=l,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=u,t[6]=0,t[7]=0,t[8]=-((o-a)*l*.5),t[9]=(s-r)*u*.5,t[10]=n/(i-n),t[11]=-1,t[12]=0,t[13]=0,t[14]=n*i/(i-n),t[15]=0,t},s.ortho=function(t,e,i,n,s,r,o){var a=1/(e-i),l=1/(n-s),u=1/(r-o);return t[0]=-2*a,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*l,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*u,t[11]=0,t[12]=(e+i)*a,t[13]=(s+n)*l,t[14]=(o+r)*u,t[15]=1,t},s.lookAt=function(t,e,i,r){var o,a,l,u,h,c,d,f,p,m,g=e[0],v=e[1],y=e[2],_=r[0],b=r[1],x=r[2],w=i[0],M=i[1],D=i[2];return Math.abs(g-w)<n.EPSILON&&Math.abs(v-M)<n.EPSILON&&Math.abs(y-D)<n.EPSILON?s.identity(t):(d=g-w,f=v-M,p=y-D,m=1/Math.sqrt(d*d+f*f+p*p),d*=m,f*=m,p*=m,o=b*p-x*f,a=x*d-_*p,l=_*f-b*d,m=Math.sqrt(o*o+a*a+l*l),m?(m=1/m,o*=m,a*=m,l*=m):(o=0,a=0,l=0),u=f*l-p*a,h=p*o-d*l,c=d*a-f*o,m=Math.sqrt(u*u+h*h+c*c),m?(m=1/m,u*=m,h*=m,c*=m):(u=0,h=0,c=0),t[0]=o,t[1]=u,t[2]=d,t[3]=0,t[4]=a,t[5]=h,t[6]=f,t[7]=0,t[8]=l,t[9]=c,t[10]=p,t[11]=0,t[12]=-(o*g+a*v+l*y),t[13]=-(u*g+h*v+c*y),t[14]=-(d*g+f*v+p*y),t[15]=1,t)},s.str=function(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")";
},s.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2)+Math.pow(t[9],2)+Math.pow(t[10],2)+Math.pow(t[11],2)+Math.pow(t[12],2)+Math.pow(t[13],2)+Math.pow(t[14],2)+Math.pow(t[15],2))},s.add=function(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t[3]=e[3]+i[3],t[4]=e[4]+i[4],t[5]=e[5]+i[5],t[6]=e[6]+i[6],t[7]=e[7]+i[7],t[8]=e[8]+i[8],t[9]=e[9]+i[9],t[10]=e[10]+i[10],t[11]=e[11]+i[11],t[12]=e[12]+i[12],t[13]=e[13]+i[13],t[14]=e[14]+i[14],t[15]=e[15]+i[15],t},s.subtract=function(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t[3]=e[3]-i[3],t[4]=e[4]-i[4],t[5]=e[5]-i[5],t[6]=e[6]-i[6],t[7]=e[7]-i[7],t[8]=e[8]-i[8],t[9]=e[9]-i[9],t[10]=e[10]-i[10],t[11]=e[11]-i[11],t[12]=e[12]-i[12],t[13]=e[13]-i[13],t[14]=e[14]-i[14],t[15]=e[15]-i[15],t},s.sub=s.subtract,s.multiplyScalar=function(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=e[3]*i,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[7]=e[7]*i,t[8]=e[8]*i,t[9]=e[9]*i,t[10]=e[10]*i,t[11]=e[11]*i,t[12]=e[12]*i,t[13]=e[13]*i,t[14]=e[14]*i,t[15]=e[15]*i,t},s.multiplyScalarAndAdd=function(t,e,i,n){return t[0]=e[0]+i[0]*n,t[1]=e[1]+i[1]*n,t[2]=e[2]+i[2]*n,t[3]=e[3]+i[3]*n,t[4]=e[4]+i[4]*n,t[5]=e[5]+i[5]*n,t[6]=e[6]+i[6]*n,t[7]=e[7]+i[7]*n,t[8]=e[8]+i[8]*n,t[9]=e[9]+i[9]*n,t[10]=e[10]+i[10]*n,t[11]=e[11]+i[11]*n,t[12]=e[12]+i[12]*n,t[13]=e[13]+i[13]*n,t[14]=e[14]+i[14]*n,t[15]=e[15]+i[15]*n,t},s.exactEquals=function(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3]&&t[4]===e[4]&&t[5]===e[5]&&t[6]===e[6]&&t[7]===e[7]&&t[8]===e[8]&&t[9]===e[9]&&t[10]===e[10]&&t[11]===e[11]&&t[12]===e[12]&&t[13]===e[13]&&t[14]===e[14]&&t[15]===e[15]},s.equals=function(t,e){var i=t[0],s=t[1],r=t[2],o=t[3],a=t[4],l=t[5],u=t[6],h=t[7],c=t[8],d=t[9],f=t[10],p=t[11],m=t[12],g=t[13],v=t[14],y=t[15],_=e[0],b=e[1],x=e[2],w=e[3],M=e[4],D=e[5],k=e[6],S=e[7],C=e[8],I=e[9],T=e[10],E=e[11],A=e[12],F=e[13],P=e[14],N=e[15];return Math.abs(i-_)<=n.EPSILON*Math.max(1,Math.abs(i),Math.abs(_))&&Math.abs(s-b)<=n.EPSILON*Math.max(1,Math.abs(s),Math.abs(b))&&Math.abs(r-x)<=n.EPSILON*Math.max(1,Math.abs(r),Math.abs(x))&&Math.abs(o-w)<=n.EPSILON*Math.max(1,Math.abs(o),Math.abs(w))&&Math.abs(a-M)<=n.EPSILON*Math.max(1,Math.abs(a),Math.abs(M))&&Math.abs(l-D)<=n.EPSILON*Math.max(1,Math.abs(l),Math.abs(D))&&Math.abs(u-k)<=n.EPSILON*Math.max(1,Math.abs(u),Math.abs(k))&&Math.abs(h-S)<=n.EPSILON*Math.max(1,Math.abs(h),Math.abs(S))&&Math.abs(c-C)<=n.EPSILON*Math.max(1,Math.abs(c),Math.abs(C))&&Math.abs(d-I)<=n.EPSILON*Math.max(1,Math.abs(d),Math.abs(I))&&Math.abs(f-T)<=n.EPSILON*Math.max(1,Math.abs(f),Math.abs(T))&&Math.abs(p-E)<=n.EPSILON*Math.max(1,Math.abs(p),Math.abs(E))&&Math.abs(m-A)<=n.EPSILON*Math.max(1,Math.abs(m),Math.abs(A))&&Math.abs(g-F)<=n.EPSILON*Math.max(1,Math.abs(g),Math.abs(F))&&Math.abs(v-P)<=n.EPSILON*Math.max(1,Math.abs(v),Math.abs(P))&&Math.abs(y-N)<=n.EPSILON*Math.max(1,Math.abs(y),Math.abs(N))},t.exports=s},function(t,e,i){var n=i(1),s=i(4),r=i(7),o=i(8),a={};a.create=function(){var t=new n.ARRAY_TYPE(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},a.rotationTo=function(){var t=r.create(),e=r.fromValues(1,0,0),i=r.fromValues(0,1,0);return function(n,s,o){var l=r.dot(s,o);return-.999999>l?(r.cross(t,e,s),r.length(t)<1e-6&&r.cross(t,i,s),r.normalize(t,t),a.setAxisAngle(n,t,Math.PI),n):l>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(r.cross(t,s,o),n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=1+l,a.normalize(n,n))}}(),a.setAxes=function(){var t=s.create();return function(e,i,n,s){return t[0]=n[0],t[3]=n[1],t[6]=n[2],t[1]=s[0],t[4]=s[1],t[7]=s[2],t[2]=-i[0],t[5]=-i[1],t[8]=-i[2],a.normalize(e,a.fromMat3(e,t))}}(),a.clone=o.clone,a.fromValues=o.fromValues,a.copy=o.copy,a.set=o.set,a.identity=function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},a.setAxisAngle=function(t,e,i){i=.5*i;var n=Math.sin(i);return t[0]=n*e[0],t[1]=n*e[1],t[2]=n*e[2],t[3]=Math.cos(i),t},a.getAxisAngle=function(t,e){var i=2*Math.acos(e[3]),n=Math.sin(i/2);return 0!=n?(t[0]=e[0]/n,t[1]=e[1]/n,t[2]=e[2]/n):(t[0]=1,t[1]=0,t[2]=0),i},a.add=o.add,a.multiply=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3],a=i[0],l=i[1],u=i[2],h=i[3];return t[0]=n*h+o*a+s*u-r*l,t[1]=s*h+o*l+r*a-n*u,t[2]=r*h+o*u+n*l-s*a,t[3]=o*h-n*a-s*l-r*u,t},a.mul=a.multiply,a.scale=o.scale,a.rotateX=function(t,e,i){i*=.5;var n=e[0],s=e[1],r=e[2],o=e[3],a=Math.sin(i),l=Math.cos(i);return t[0]=n*l+o*a,t[1]=s*l+r*a,t[2]=r*l-s*a,t[3]=o*l-n*a,t},a.rotateY=function(t,e,i){i*=.5;var n=e[0],s=e[1],r=e[2],o=e[3],a=Math.sin(i),l=Math.cos(i);return t[0]=n*l-r*a,t[1]=s*l+o*a,t[2]=r*l+n*a,t[3]=o*l-s*a,t},a.rotateZ=function(t,e,i){i*=.5;var n=e[0],s=e[1],r=e[2],o=e[3],a=Math.sin(i),l=Math.cos(i);return t[0]=n*l+s*a,t[1]=s*l-n*a,t[2]=r*l+o*a,t[3]=o*l-r*a,t},a.calculateW=function(t,e){var i=e[0],n=e[1],s=e[2];return t[0]=i,t[1]=n,t[2]=s,t[3]=Math.sqrt(Math.abs(1-i*i-n*n-s*s)),t},a.dot=o.dot,a.lerp=o.lerp,a.slerp=function(t,e,i,n){var s,r,o,a,l,u=e[0],h=e[1],c=e[2],d=e[3],f=i[0],p=i[1],m=i[2],g=i[3];return r=u*f+h*p+c*m+d*g,0>r&&(r=-r,f=-f,p=-p,m=-m,g=-g),1-r>1e-6?(s=Math.acos(r),o=Math.sin(s),a=Math.sin((1-n)*s)/o,l=Math.sin(n*s)/o):(a=1-n,l=n),t[0]=a*u+l*f,t[1]=a*h+l*p,t[2]=a*c+l*m,t[3]=a*d+l*g,t},a.sqlerp=function(){var t=a.create(),e=a.create();return function(i,n,s,r,o,l){return a.slerp(t,n,o,l),a.slerp(e,s,r,l),a.slerp(i,t,e,2*l*(1-l)),i}}(),a.invert=function(t,e){var i=e[0],n=e[1],s=e[2],r=e[3],o=i*i+n*n+s*s+r*r,a=o?1/o:0;return t[0]=-i*a,t[1]=-n*a,t[2]=-s*a,t[3]=r*a,t},a.conjugate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=e[3],t},a.length=o.length,a.len=a.length,a.squaredLength=o.squaredLength,a.sqrLen=a.squaredLength,a.normalize=o.normalize,a.fromMat3=function(t,e){var i,n=e[0]+e[4]+e[8];if(n>0)i=Math.sqrt(n+1),t[3]=.5*i,i=.5/i,t[0]=(e[5]-e[7])*i,t[1]=(e[6]-e[2])*i,t[2]=(e[1]-e[3])*i;else{var s=0;e[4]>e[0]&&(s=1),e[8]>e[3*s+s]&&(s=2);var r=(s+1)%3,o=(s+2)%3;i=Math.sqrt(e[3*s+s]-e[3*r+r]-e[3*o+o]+1),t[s]=.5*i,i=.5/i,t[3]=(e[3*r+o]-e[3*o+r])*i,t[r]=(e[3*r+s]+e[3*s+r])*i,t[o]=(e[3*o+s]+e[3*s+o])*i}return t},a.str=function(t){return"quat("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},a.exactEquals=o.exactEquals,a.equals=o.equals,t.exports=a},function(t,e,i){var n=i(1),s={};s.create=function(){var t=new n.ARRAY_TYPE(3);return t[0]=0,t[1]=0,t[2]=0,t},s.clone=function(t){var e=new n.ARRAY_TYPE(3);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},s.fromValues=function(t,e,i){var s=new n.ARRAY_TYPE(3);return s[0]=t,s[1]=e,s[2]=i,s},s.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},s.set=function(t,e,i,n){return t[0]=e,t[1]=i,t[2]=n,t},s.add=function(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t},s.subtract=function(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t},s.sub=s.subtract,s.multiply=function(t,e,i){return t[0]=e[0]*i[0],t[1]=e[1]*i[1],t[2]=e[2]*i[2],t},s.mul=s.multiply,s.divide=function(t,e,i){return t[0]=e[0]/i[0],t[1]=e[1]/i[1],t[2]=e[2]/i[2],t},s.div=s.divide,s.ceil=function(t,e){return t[0]=Math.ceil(e[0]),t[1]=Math.ceil(e[1]),t[2]=Math.ceil(e[2]),t},s.floor=function(t,e){return t[0]=Math.floor(e[0]),t[1]=Math.floor(e[1]),t[2]=Math.floor(e[2]),t},s.min=function(t,e,i){return t[0]=Math.min(e[0],i[0]),t[1]=Math.min(e[1],i[1]),t[2]=Math.min(e[2],i[2]),t},s.max=function(t,e,i){return t[0]=Math.max(e[0],i[0]),t[1]=Math.max(e[1],i[1]),t[2]=Math.max(e[2],i[2]),t},s.round=function(t,e){return t[0]=Math.round(e[0]),t[1]=Math.round(e[1]),t[2]=Math.round(e[2]),t},s.scale=function(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t},s.scaleAndAdd=function(t,e,i,n){return t[0]=e[0]+i[0]*n,t[1]=e[1]+i[1]*n,t[2]=e[2]+i[2]*n,t},s.distance=function(t,e){var i=e[0]-t[0],n=e[1]-t[1],s=e[2]-t[2];return Math.sqrt(i*i+n*n+s*s)},s.dist=s.distance,s.squaredDistance=function(t,e){var i=e[0]-t[0],n=e[1]-t[1],s=e[2]-t[2];return i*i+n*n+s*s},s.sqrDist=s.squaredDistance,s.length=function(t){var e=t[0],i=t[1],n=t[2];return Math.sqrt(e*e+i*i+n*n)},s.len=s.length,s.squaredLength=function(t){var e=t[0],i=t[1],n=t[2];return e*e+i*i+n*n},s.sqrLen=s.squaredLength,s.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t},s.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t},s.normalize=function(t,e){var i=e[0],n=e[1],s=e[2],r=i*i+n*n+s*s;return r>0&&(r=1/Math.sqrt(r),t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r),t},s.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]},s.cross=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=i[0],a=i[1],l=i[2];return t[0]=s*l-r*a,t[1]=r*o-n*l,t[2]=n*a-s*o,t},s.lerp=function(t,e,i,n){var s=e[0],r=e[1],o=e[2];return t[0]=s+n*(i[0]-s),t[1]=r+n*(i[1]-r),t[2]=o+n*(i[2]-o),t},s.hermite=function(t,e,i,n,s,r){var o=r*r,a=o*(2*r-3)+1,l=o*(r-2)+r,u=o*(r-1),h=o*(3-2*r);return t[0]=e[0]*a+i[0]*l+n[0]*u+s[0]*h,t[1]=e[1]*a+i[1]*l+n[1]*u+s[1]*h,t[2]=e[2]*a+i[2]*l+n[2]*u+s[2]*h,t},s.bezier=function(t,e,i,n,s,r){var o=1-r,a=o*o,l=r*r,u=a*o,h=3*r*a,c=3*l*o,d=l*r;return t[0]=e[0]*u+i[0]*h+n[0]*c+s[0]*d,t[1]=e[1]*u+i[1]*h+n[1]*c+s[1]*d,t[2]=e[2]*u+i[2]*h+n[2]*c+s[2]*d,t},s.random=function(t,e){e=e||1;var i=2*n.RANDOM()*Math.PI,s=2*n.RANDOM()-1,r=Math.sqrt(1-s*s)*e;return t[0]=Math.cos(i)*r,t[1]=Math.sin(i)*r,t[2]=s*e,t},s.transformMat4=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=i[3]*n+i[7]*s+i[11]*r+i[15];return o=o||1,t[0]=(i[0]*n+i[4]*s+i[8]*r+i[12])/o,t[1]=(i[1]*n+i[5]*s+i[9]*r+i[13])/o,t[2]=(i[2]*n+i[6]*s+i[10]*r+i[14])/o,t},s.transformMat3=function(t,e,i){var n=e[0],s=e[1],r=e[2];return t[0]=n*i[0]+s*i[3]+r*i[6],t[1]=n*i[1]+s*i[4]+r*i[7],t[2]=n*i[2]+s*i[5]+r*i[8],t},s.transformQuat=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=i[0],a=i[1],l=i[2],u=i[3],h=u*n+a*r-l*s,c=u*s+l*n-o*r,d=u*r+o*s-a*n,f=-o*n-a*s-l*r;return t[0]=h*u+f*-o+c*-l-d*-a,t[1]=c*u+f*-a+d*-o-h*-l,t[2]=d*u+f*-l+h*-a-c*-o,t},s.rotateX=function(t,e,i,n){var s=[],r=[];return s[0]=e[0]-i[0],s[1]=e[1]-i[1],s[2]=e[2]-i[2],r[0]=s[0],r[1]=s[1]*Math.cos(n)-s[2]*Math.sin(n),r[2]=s[1]*Math.sin(n)+s[2]*Math.cos(n),t[0]=r[0]+i[0],t[1]=r[1]+i[1],t[2]=r[2]+i[2],t},s.rotateY=function(t,e,i,n){var s=[],r=[];return s[0]=e[0]-i[0],s[1]=e[1]-i[1],s[2]=e[2]-i[2],r[0]=s[2]*Math.sin(n)+s[0]*Math.cos(n),r[1]=s[1],r[2]=s[2]*Math.cos(n)-s[0]*Math.sin(n),t[0]=r[0]+i[0],t[1]=r[1]+i[1],t[2]=r[2]+i[2],t},s.rotateZ=function(t,e,i,n){var s=[],r=[];return s[0]=e[0]-i[0],s[1]=e[1]-i[1],s[2]=e[2]-i[2],r[0]=s[0]*Math.cos(n)-s[1]*Math.sin(n),r[1]=s[0]*Math.sin(n)+s[1]*Math.cos(n),r[2]=s[2],t[0]=r[0]+i[0],t[1]=r[1]+i[1],t[2]=r[2]+i[2],t},s.forEach=function(){var t=s.create();return function(e,i,n,s,r,o){var a,l;for(i||(i=3),n||(n=0),l=s?Math.min(s*i+n,e.length):e.length,a=n;l>a;a+=i)t[0]=e[a],t[1]=e[a+1],t[2]=e[a+2],r(t,t,o),e[a]=t[0],e[a+1]=t[1],e[a+2]=t[2];return e}}(),s.angle=function(t,e){var i=s.fromValues(t[0],t[1],t[2]),n=s.fromValues(e[0],e[1],e[2]);s.normalize(i,i),s.normalize(n,n);var r=s.dot(i,n);return r>1?0:Math.acos(r)},s.str=function(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"},s.exactEquals=function(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]},s.equals=function(t,e){var i=t[0],s=t[1],r=t[2],o=e[0],a=e[1],l=e[2];return Math.abs(i-o)<=n.EPSILON*Math.max(1,Math.abs(i),Math.abs(o))&&Math.abs(s-a)<=n.EPSILON*Math.max(1,Math.abs(s),Math.abs(a))&&Math.abs(r-l)<=n.EPSILON*Math.max(1,Math.abs(r),Math.abs(l))},t.exports=s},function(t,e,i){var n=i(1),s={};s.create=function(){var t=new n.ARRAY_TYPE(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=0,t},s.clone=function(t){var e=new n.ARRAY_TYPE(4);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},s.fromValues=function(t,e,i,s){var r=new n.ARRAY_TYPE(4);return r[0]=t,r[1]=e,r[2]=i,r[3]=s,r},s.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},s.set=function(t,e,i,n,s){return t[0]=e,t[1]=i,t[2]=n,t[3]=s,t},s.add=function(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t[3]=e[3]+i[3],t},s.subtract=function(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t[3]=e[3]-i[3],t},s.sub=s.subtract,s.multiply=function(t,e,i){return t[0]=e[0]*i[0],t[1]=e[1]*i[1],t[2]=e[2]*i[2],t[3]=e[3]*i[3],t},s.mul=s.multiply,s.divide=function(t,e,i){return t[0]=e[0]/i[0],t[1]=e[1]/i[1],t[2]=e[2]/i[2],t[3]=e[3]/i[3],t},s.div=s.divide,s.ceil=function(t,e){return t[0]=Math.ceil(e[0]),t[1]=Math.ceil(e[1]),t[2]=Math.ceil(e[2]),t[3]=Math.ceil(e[3]),t},s.floor=function(t,e){return t[0]=Math.floor(e[0]),t[1]=Math.floor(e[1]),t[2]=Math.floor(e[2]),t[3]=Math.floor(e[3]),t},s.min=function(t,e,i){return t[0]=Math.min(e[0],i[0]),t[1]=Math.min(e[1],i[1]),t[2]=Math.min(e[2],i[2]),t[3]=Math.min(e[3],i[3]),t},s.max=function(t,e,i){return t[0]=Math.max(e[0],i[0]),t[1]=Math.max(e[1],i[1]),t[2]=Math.max(e[2],i[2]),t[3]=Math.max(e[3],i[3]),t},s.round=function(t,e){return t[0]=Math.round(e[0]),t[1]=Math.round(e[1]),t[2]=Math.round(e[2]),t[3]=Math.round(e[3]),t},s.scale=function(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=e[3]*i,t},s.scaleAndAdd=function(t,e,i,n){return t[0]=e[0]+i[0]*n,t[1]=e[1]+i[1]*n,t[2]=e[2]+i[2]*n,t[3]=e[3]+i[3]*n,t},s.distance=function(t,e){var i=e[0]-t[0],n=e[1]-t[1],s=e[2]-t[2],r=e[3]-t[3];return Math.sqrt(i*i+n*n+s*s+r*r)},s.dist=s.distance,s.squaredDistance=function(t,e){var i=e[0]-t[0],n=e[1]-t[1],s=e[2]-t[2],r=e[3]-t[3];return i*i+n*n+s*s+r*r},s.sqrDist=s.squaredDistance,s.length=function(t){var e=t[0],i=t[1],n=t[2],s=t[3];return Math.sqrt(e*e+i*i+n*n+s*s)},s.len=s.length,s.squaredLength=function(t){var e=t[0],i=t[1],n=t[2],s=t[3];return e*e+i*i+n*n+s*s},s.sqrLen=s.squaredLength,s.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t},s.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t[3]=1/e[3],t},s.normalize=function(t,e){var i=e[0],n=e[1],s=e[2],r=e[3],o=i*i+n*n+s*s+r*r;return o>0&&(o=1/Math.sqrt(o),t[0]=i*o,t[1]=n*o,t[2]=s*o,t[3]=r*o),t},s.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]+t[3]*e[3]},s.lerp=function(t,e,i,n){var s=e[0],r=e[1],o=e[2],a=e[3];return t[0]=s+n*(i[0]-s),t[1]=r+n*(i[1]-r),t[2]=o+n*(i[2]-o),t[3]=a+n*(i[3]-a),t},s.random=function(t,e){return e=e||1,t[0]=n.RANDOM(),t[1]=n.RANDOM(),t[2]=n.RANDOM(),t[3]=n.RANDOM(),s.normalize(t,t),s.scale(t,t,e),t},s.transformMat4=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=e[3];return t[0]=i[0]*n+i[4]*s+i[8]*r+i[12]*o,t[1]=i[1]*n+i[5]*s+i[9]*r+i[13]*o,t[2]=i[2]*n+i[6]*s+i[10]*r+i[14]*o,t[3]=i[3]*n+i[7]*s+i[11]*r+i[15]*o,t},s.transformQuat=function(t,e,i){var n=e[0],s=e[1],r=e[2],o=i[0],a=i[1],l=i[2],u=i[3],h=u*n+a*r-l*s,c=u*s+l*n-o*r,d=u*r+o*s-a*n,f=-o*n-a*s-l*r;return t[0]=h*u+f*-o+c*-l-d*-a,t[1]=c*u+f*-a+d*-o-h*-l,t[2]=d*u+f*-l+h*-a-c*-o,t[3]=e[3],t},s.forEach=function(){var t=s.create();return function(e,i,n,s,r,o){var a,l;for(i||(i=4),n||(n=0),l=s?Math.min(s*i+n,e.length):e.length,a=n;l>a;a+=i)t[0]=e[a],t[1]=e[a+1],t[2]=e[a+2],t[3]=e[a+3],r(t,t,o),e[a]=t[0],e[a+1]=t[1],e[a+2]=t[2],e[a+3]=t[3];return e}}(),s.str=function(t){return"vec4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},s.exactEquals=function(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3]},s.equals=function(t,e){var i=t[0],s=t[1],r=t[2],o=t[3],a=e[0],l=e[1],u=e[2],h=e[3];return Math.abs(i-a)<=n.EPSILON*Math.max(1,Math.abs(i),Math.abs(a))&&Math.abs(s-l)<=n.EPSILON*Math.max(1,Math.abs(s),Math.abs(l))&&Math.abs(r-u)<=n.EPSILON*Math.max(1,Math.abs(r),Math.abs(u))&&Math.abs(o-h)<=n.EPSILON*Math.max(1,Math.abs(o),Math.abs(h))},t.exports=s},function(t,e,i){var n=i(1),s={};s.create=function(){var t=new n.ARRAY_TYPE(2);return t[0]=0,t[1]=0,t},s.clone=function(t){var e=new n.ARRAY_TYPE(2);return e[0]=t[0],e[1]=t[1],e},s.fromValues=function(t,e){var i=new n.ARRAY_TYPE(2);return i[0]=t,i[1]=e,i},s.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t},s.set=function(t,e,i){return t[0]=e,t[1]=i,t},s.add=function(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t},s.subtract=function(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t},s.sub=s.subtract,s.multiply=function(t,e,i){return t[0]=e[0]*i[0],t[1]=e[1]*i[1],t},s.mul=s.multiply,s.divide=function(t,e,i){return t[0]=e[0]/i[0],t[1]=e[1]/i[1],t},s.div=s.divide,s.ceil=function(t,e){return t[0]=Math.ceil(e[0]),t[1]=Math.ceil(e[1]),t},s.floor=function(t,e){return t[0]=Math.floor(e[0]),t[1]=Math.floor(e[1]),t},s.min=function(t,e,i){return t[0]=Math.min(e[0],i[0]),t[1]=Math.min(e[1],i[1]),t},s.max=function(t,e,i){return t[0]=Math.max(e[0],i[0]),t[1]=Math.max(e[1],i[1]),t},s.round=function(t,e){return t[0]=Math.round(e[0]),t[1]=Math.round(e[1]),t},s.scale=function(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t},s.scaleAndAdd=function(t,e,i,n){return t[0]=e[0]+i[0]*n,t[1]=e[1]+i[1]*n,t},s.distance=function(t,e){var i=e[0]-t[0],n=e[1]-t[1];return Math.sqrt(i*i+n*n)},s.dist=s.distance,s.squaredDistance=function(t,e){var i=e[0]-t[0],n=e[1]-t[1];return i*i+n*n},s.sqrDist=s.squaredDistance,s.length=function(t){var e=t[0],i=t[1];return Math.sqrt(e*e+i*i)},s.len=s.length,s.squaredLength=function(t){var e=t[0],i=t[1];return e*e+i*i},s.sqrLen=s.squaredLength,s.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t},s.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t},s.normalize=function(t,e){var i=e[0],n=e[1],s=i*i+n*n;return s>0&&(s=1/Math.sqrt(s),t[0]=e[0]*s,t[1]=e[1]*s),t},s.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]},s.cross=function(t,e,i){var n=e[0]*i[1]-e[1]*i[0];return t[0]=t[1]=0,t[2]=n,t},s.lerp=function(t,e,i,n){var s=e[0],r=e[1];return t[0]=s+n*(i[0]-s),t[1]=r+n*(i[1]-r),t},s.random=function(t,e){e=e||1;var i=2*n.RANDOM()*Math.PI;return t[0]=Math.cos(i)*e,t[1]=Math.sin(i)*e,t},s.transformMat2=function(t,e,i){var n=e[0],s=e[1];return t[0]=i[0]*n+i[2]*s,t[1]=i[1]*n+i[3]*s,t},s.transformMat2d=function(t,e,i){var n=e[0],s=e[1];return t[0]=i[0]*n+i[2]*s+i[4],t[1]=i[1]*n+i[3]*s+i[5],t},s.transformMat3=function(t,e,i){var n=e[0],s=e[1];return t[0]=i[0]*n+i[3]*s+i[6],t[1]=i[1]*n+i[4]*s+i[7],t},s.transformMat4=function(t,e,i){var n=e[0],s=e[1];return t[0]=i[0]*n+i[4]*s+i[12],t[1]=i[1]*n+i[5]*s+i[13],t},s.forEach=function(){var t=s.create();return function(e,i,n,s,r,o){var a,l;for(i||(i=2),n||(n=0),l=s?Math.min(s*i+n,e.length):e.length,a=n;l>a;a+=i)t[0]=e[a],t[1]=e[a+1],r(t,t,o),e[a]=t[0],e[a+1]=t[1];return e}}(),s.str=function(t){return"vec2("+t[0]+", "+t[1]+")"},s.exactEquals=function(t,e){return t[0]===e[0]&&t[1]===e[1]},s.equals=function(t,e){var i=t[0],s=t[1],r=e[0],o=e[1];return Math.abs(i-r)<=n.EPSILON*Math.max(1,Math.abs(i),Math.abs(r))&&Math.abs(s-o)<=n.EPSILON*Math.max(1,Math.abs(s),Math.abs(o))},t.exports=s}])}),define("behaviour/ZIndexManager",["require"],function(t){"use strict";function e(){this.backIndex=0,this.frontIndex=0,this.elements={}}return e.prototype.registerElement=function(t){this.elements[this.frontIndex]=t,t.element.css("zIndex",this.frontIndex),this.frontIndex++},e.prototype.onMouseDown=function(t,e){this.bringToFront(t)},e.prototype.onTouchStart=function(t,e){this.bringToFront(t)},e.prototype.bringToFront=function(t){t.css("zIndex",this.frontIndex),this.frontIndex++},e.prototype.sendToBack=function(t){t.css("zIndex",this.backIndex),this.backIndex--},e}),define("behaviour/MultiTouchElement",["require","jquery"],function(t){"use strict";function e(t){this.element=i(t),this.behaviours=[],this.bindEvents()}var i=t("jquery");return e.prototype.bindEvents=function(){this.element.on({mousedown:this.onMouseDown.bind(this),touchstart:this.onTouchStart.bind(this),touchmove:this.onTouchMove.bind(this),touchend:this.onTouchEnd.bind(this)})},e.prototype.dispatchEvent=function(t,e){for(var i=0,n=this.behaviours.length;n>i;i++)this.behaviours[i][t]&&this.behaviours[i][t](this.element,e)},e.prototype.onMouseDown=function(t){this.dispatchEvent("onMouseDown",t);var e=i(window),n=this.onMouseMove.bind(this);e.on("mousemove",n),e.one("mouseup",function(){e.off("mousemove",n),this.onMouseUp.apply(this,arguments)}.bind(this))},e.prototype.onMouseMove=function(t){this.dispatchEvent("onMouseMove",t)},e.prototype.onMouseUp=function(t){this.dispatchEvent("onMouseUp",t)},e.prototype.onTouchStart=function(t){t.preventDefault(),this.dispatchEvent("onTouchStart",t)},e.prototype.onTouchMove=function(t){t.preventDefault(),this.dispatchEvent("onTouchMove",t)},e.prototype.onTouchEnd=function(t){t.preventDefault(),this.dispatchEvent("onTouchEnd",t)},e.prototype.addBehaviour=function(t){this.behaviours.push(t)},e}),define("behaviour/RotateTranslateScaleBehaviour",["require","gl-matrix"],function(t){"use strict";function e(t){this.element=t,this.touches={},this.moving=!1,this.translation=i.vec3.create(),this.rotation=0,this.scale=i.vec3.fromValues(1,1,1),this.minScale=i.vec3.fromValues(.5,.5,1),this.maxScale=i.vec3.fromValues(5,5,1),this.updateRequested=!1,this.onAnimationFrameCallback=this.onAnimationFrame.bind(this)}var i=t("gl-matrix");return e.prototype.needsUpdate=function(){this.updateRequested||(requestAnimationFrame(this.onAnimationFrameCallback),this.updateRequested=!0)},e.prototype.onMouseDown=function(t,e){this.touches[-1]={startPoint:i.vec3.fromValues(e.pageX,e.pageY,0),lastPoint:i.vec3.fromValues(e.pageX,e.pageY,0)}},e.prototype.onMouseMove=function(t,e){var n=this.touches[-1],s=i.vec3.fromValues(e.pageX,e.pageY,0),r=i.vec3.sub(i.vec3.create(),s,n.lastPoint);i.vec3.add(this.translation,this.translation,r),i.vec3.copy(n.lastPoint,s),this.needsUpdate()},e.prototype.onMouseUp=function(t,e){delete this.touches[-1]},e.prototype.onTouchStart=function(t,e){for(var n=e.originalEvent.changedTouches,s=0,r=n.length;r>s;s++){var o=n[s];this.touches[o.identifier]={startPoint:i.vec3.fromValues(o.pageX,o.pageY,0),lastPoint:i.vec3.fromValues(o.pageX,o.pageY,0)}}},e.prototype.onTouchMove=function(t,e){var n=e.originalEvent.targetTouches,s=n.length;if(1===s){var r=n[0],o=this.touches[r.identifier],a=i.vec3.fromValues(r.pageX,r.pageY,0),l=i.vec3.sub(i.vec3.create(),a,o.lastPoint);i.vec3.add(this.translation,this.translation,l),i.vec3.copy(o.lastPoint,a)}else{var u=n[0],h=n[1],c=i.vec3.fromValues(u.pageX,u.pageY,0),d=i.vec3.fromValues(h.pageX,h.pageY,0),f=this.touches[u.identifier],p=this.touches[h.identifier],m=i.vec3.sqrDist(f.lastPoint,p.lastPoint),g=i.vec3.sqrDist(c,d),v=g/m,y=i.vec3.fromValues(v,v,1);i.vec3.multiply(this.scale,this.scale,y),i.vec3.max(this.scale,this.scale,this.minScale),i.vec3.min(this.scale,this.scale,this.maxScale);var _=i.vec3.subtract(i.vec3.create(),c,f.lastPoint),b=i.vec3.subtract(i.vec3.create(),d,p.lastPoint),x=i.vec3.add(i.vec3.create(),_,b);i.vec3.scale(x,x,.5),i.vec3.add(this.translation,this.translation,x);var w=Math.atan2(f.lastPoint[1]-p.lastPoint[1],f.lastPoint[0]-p.lastPoint[0]),M=Math.atan2(c[1]-d[1],c[0]-d[0]);this.rotation+=M-w,i.vec3.copy(f.lastPoint,c),i.vec3.copy(p.lastPoint,d)}this.needsUpdate()},e.prototype.onAnimationFrame=function(){this.updateRequested=!1,this.updateTransform(this.element.element)},e.prototype.updateTransform=function(t){t.css({transform:"translate3d("+this.translation[0]+"px, "+this.translation[1]+"px, 0) scale3d("+this.scale[0]+", "+this.scale[1]+", 1) rotateZ("+this.rotation+"rad)"})},e.prototype.onTouchEnd=function(t,e){for(var i=e.originalEvent.changedTouches,n=0,s=i.length;s>n;n++){var r=i[n],o=r.identifier;delete this.touches[o]}},e}),define("behaviour/MultiTouchManager",["require","jquery","../util/Factory","./ZIndexManager","./MultiTouchElement","./RotateTranslateScaleBehaviour"],function(t){"use strict";function e(){this.elements=[],this.zIndexManager=new s,i(window).on("touchmove",function(t){t.preventDefault()})}var i=t("jquery"),n=t("../util/Factory"),s=t("./ZIndexManager"),r=t("./MultiTouchElement"),o=t("./RotateTranslateScaleBehaviour");return e.prototype.addElementRTS=function(t){var e=this.addElement(t),i=new o(e);return e.addBehaviour(i),e},e.prototype.addElement=function(t){var e=new r(t);return this.elements.push(e),this.zIndexManager.registerElement(e),e.addBehaviour(this.zIndexManager),e},n.createFactory(e)}),define("behaviour/DraggableBehaviour",["require","gl-matrix"],function(t){"use strict";function e(t){this.element=t,this.touches={},this.touchCount=0,this.moving=!1,this.translation=i.vec3.create(),this.rotation=0,this.scale=i.vec3.fromValues(1,1,1),this.minScale=i.vec3.fromValues(.5,.5,1),this.maxScale=i.vec3.fromValues(5,5,1),this.updateRequested=!1,this.onAnimationFrameCallback=this.onAnimationFrame.bind(this)}var i=t("gl-matrix");return e.prototype.needsUpdate=function(){this.updateRequested||(requestAnimationFrame(this.onAnimationFrameCallback),this.updateRequested=!0)},e.prototype.onMouseDown=function(t,e){this.touches[-1]={startPoint:i.vec3.fromValues(e.pageX,e.pageY,0),lastPoint:i.vec3.fromValues(e.pageX,e.pageY,0)}},e.prototype.onMouseMove=function(t,e){var n=this.touches[-1],s=i.vec3.fromValues(e.pageX,e.pageY,0),r=i.vec3.sub(i.vec3.create(),s,n.lastPoint);i.vec3.add(this.translation,this.translation,r),i.vec3.copy(n.lastPoint,s),this.needsUpdate()},e.prototype.onMouseUp=function(t,e){delete this.touches[-1]},e.prototype.onTouchStart=function(t,e){var n=e.originalEvent.changedTouches;this.touchCount++;for(var s=0,r=n.length;r>s;s++){var o=n[s];this.touches[o.identifier]={startPoint:i.vec3.fromValues(o.pageX,o.pageY,0),lastPoint:i.vec3.fromValues(o.pageX,o.pageY,0)}}},e.prototype.onTouchMove=function(t,e){var n=e.originalEvent.targetTouches,s=n.length;if(s>=1){var r=n[0],o=this.touches[r.identifier],a=i.vec3.fromValues(r.pageX,r.pageY,0),l=i.vec3.sub(i.vec3.create(),a,o.lastPoint);i.vec3.add(this.translation,this.translation,l),i.vec3.copy(o.lastPoint,a)}this.needsUpdate()},e.prototype.onAnimationFrame=function(){this.updateRequested=!1,this.updateTransform(this.element.element)},e.prototype.updateTransform=function(t){t.css({transform:"translate3d("+this.translation[0]+"px, "+this.translation[1]+"px, 0) scale3d("+this.scale[0]+", "+this.scale[1]+", 1) rotateZ("+this.rotation+"rad)"})},e.prototype.onTouchEnd=function(t,e){var i=e.originalEvent.changedTouches;this.touchCount--;for(var n=0,s=i.length;s>n;n++){var r=i[n],o=r.identifier;delete this.touches[o]}},e}),function(){function t(t){function e(e,i,n,s,r,o){for(;r>=0&&o>r;r+=t){var a=s?s[r]:r;n=i(n,e[a],a,e)}return n}return function(i,n,s,r){n=_(n,r,4);var o=!S(i)&&y.keys(i),a=(o||i).length,l=t>0?0:a-1;return arguments.length<3&&(s=i[o?o[l]:l],l+=t),e(i,n,s,o,l,a)}}function e(t){return function(e,i,n){i=b(i,n);for(var s=k(e),r=t>0?0:s-1;r>=0&&s>r;r+=t)if(i(e[r],r,e))return r;return-1}}function i(t,e,i){return function(n,s,r){var o=0,a=k(n);if("number"==typeof r)t>0?o=r>=0?r:Math.max(r+a,o):a=r>=0?Math.min(r+1,a):r+a+1;else if(i&&r&&a)return r=i(n,s),n[r]===s?r:-1;if(s!==s)return r=e(h.call(n,o,a),y.isNaN),r>=0?r+o:-1;for(r=t>0?o:a-1;r>=0&&a>r;r+=t)if(n[r]===s)return r;return-1}}function n(t,e){var i=A.length,n=t.constructor,s=y.isFunction(n)&&n.prototype||a,r="constructor";for(y.has(t,r)&&!y.contains(e,r)&&e.push(r);i--;)r=A[i],r in t&&t[r]!==s[r]&&!y.contains(e,r)&&e.push(r)}var s=this,r=s._,o=Array.prototype,a=Object.prototype,l=Function.prototype,u=o.push,h=o.slice,c=a.toString,d=a.hasOwnProperty,f=Array.isArray,p=Object.keys,m=l.bind,g=Object.create,v=function(){},y=function(t){return t instanceof y?t:this instanceof y?void(this._wrapped=t):new y(t)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=y),exports._=y):s._=y,y.VERSION="1.8.3";var _=function(t,e,i){if(void 0===e)return t;switch(null==i?3:i){case 1:return function(i){return t.call(e,i)};case 2:return function(i,n){return t.call(e,i,n)};case 3:return function(i,n,s){return t.call(e,i,n,s)};case 4:return function(i,n,s,r){return t.call(e,i,n,s,r)}}return function(){return t.apply(e,arguments)}},b=function(t,e,i){return null==t?y.identity:y.isFunction(t)?_(t,e,i):y.isObject(t)?y.matcher(t):y.property(t)};y.iteratee=function(t,e){return b(t,e,1/0)};var x=function(t,e){return function(i){var n=arguments.length;if(2>n||null==i)return i;for(var s=1;n>s;s++)for(var r=arguments[s],o=t(r),a=o.length,l=0;a>l;l++){var u=o[l];e&&void 0!==i[u]||(i[u]=r[u])}return i}},w=function(t){if(!y.isObject(t))return{};if(g)return g(t);v.prototype=t;var e=new v;return v.prototype=null,e},M=function(t){return function(e){return null==e?void 0:e[t]}},D=Math.pow(2,53)-1,k=M("length"),S=function(t){var e=k(t);return"number"==typeof e&&e>=0&&D>=e};y.each=y.forEach=function(t,e,i){e=_(e,i);var n,s;if(S(t))for(n=0,s=t.length;s>n;n++)e(t[n],n,t);else{var r=y.keys(t);for(n=0,s=r.length;s>n;n++)e(t[r[n]],r[n],t)}return t},y.map=y.collect=function(t,e,i){e=b(e,i);for(var n=!S(t)&&y.keys(t),s=(n||t).length,r=Array(s),o=0;s>o;o++){var a=n?n[o]:o;r[o]=e(t[a],a,t)}return r},y.reduce=y.foldl=y.inject=t(1),y.reduceRight=y.foldr=t(-1),y.find=y.detect=function(t,e,i){var n;return n=S(t)?y.findIndex(t,e,i):y.findKey(t,e,i),void 0!==n&&-1!==n?t[n]:void 0},y.filter=y.select=function(t,e,i){var n=[];return e=b(e,i),y.each(t,function(t,i,s){e(t,i,s)&&n.push(t)}),n},y.reject=function(t,e,i){return y.filter(t,y.negate(b(e)),i)},y.every=y.all=function(t,e,i){e=b(e,i);for(var n=!S(t)&&y.keys(t),s=(n||t).length,r=0;s>r;r++){var o=n?n[r]:r;if(!e(t[o],o,t))return!1}return!0},y.some=y.any=function(t,e,i){e=b(e,i);for(var n=!S(t)&&y.keys(t),s=(n||t).length,r=0;s>r;r++){var o=n?n[r]:r;if(e(t[o],o,t))return!0}return!1},y.contains=y.includes=y.include=function(t,e,i,n){return S(t)||(t=y.values(t)),("number"!=typeof i||n)&&(i=0),y.indexOf(t,e,i)>=0},y.invoke=function(t,e){var i=h.call(arguments,2),n=y.isFunction(e);return y.map(t,function(t){var s=n?e:t[e];return null==s?s:s.apply(t,i)})},y.pluck=function(t,e){return y.map(t,y.property(e))},y.where=function(t,e){return y.filter(t,y.matcher(e))},y.findWhere=function(t,e){return y.find(t,y.matcher(e))},y.max=function(t,e,i){var n,s,r=-(1/0),o=-(1/0);if(null==e&&null!=t){t=S(t)?t:y.values(t);for(var a=0,l=t.length;l>a;a++)n=t[a],n>r&&(r=n)}else e=b(e,i),y.each(t,function(t,i,n){s=e(t,i,n),(s>o||s===-(1/0)&&r===-(1/0))&&(r=t,o=s)});return r},y.min=function(t,e,i){var n,s,r=1/0,o=1/0;if(null==e&&null!=t){t=S(t)?t:y.values(t);for(var a=0,l=t.length;l>a;a++)n=t[a],r>n&&(r=n)}else e=b(e,i),y.each(t,function(t,i,n){s=e(t,i,n),(o>s||s===1/0&&r===1/0)&&(r=t,o=s)});return r},y.shuffle=function(t){for(var e,i=S(t)?t:y.values(t),n=i.length,s=Array(n),r=0;n>r;r++)e=y.random(0,r),e!==r&&(s[r]=s[e]),s[e]=i[r];return s},y.sample=function(t,e,i){return null==e||i?(S(t)||(t=y.values(t)),t[y.random(t.length-1)]):y.shuffle(t).slice(0,Math.max(0,e))},y.sortBy=function(t,e,i){return e=b(e,i),y.pluck(y.map(t,function(t,i,n){return{value:t,index:i,criteria:e(t,i,n)}}).sort(function(t,e){var i=t.criteria,n=e.criteria;if(i!==n){if(i>n||void 0===i)return 1;if(n>i||void 0===n)return-1}return t.index-e.index}),"value")};var C=function(t){return function(e,i,n){var s={};return i=b(i,n),y.each(e,function(n,r){var o=i(n,r,e);t(s,n,o)}),s}};y.groupBy=C(function(t,e,i){y.has(t,i)?t[i].push(e):t[i]=[e]}),y.indexBy=C(function(t,e,i){t[i]=e}),y.countBy=C(function(t,e,i){y.has(t,i)?t[i]++:t[i]=1}),y.toArray=function(t){return t?y.isArray(t)?h.call(t):S(t)?y.map(t,y.identity):y.values(t):[]},y.size=function(t){return null==t?0:S(t)?t.length:y.keys(t).length},y.partition=function(t,e,i){e=b(e,i);var n=[],s=[];return y.each(t,function(t,i,r){(e(t,i,r)?n:s).push(t)}),[n,s]},y.first=y.head=y.take=function(t,e,i){return null!=t?null==e||i?t[0]:y.initial(t,t.length-e):void 0},y.initial=function(t,e,i){return h.call(t,0,Math.max(0,t.length-(null==e||i?1:e)))},y.last=function(t,e,i){return null!=t?null==e||i?t[t.length-1]:y.rest(t,Math.max(0,t.length-e)):void 0},y.rest=y.tail=y.drop=function(t,e,i){return h.call(t,null==e||i?1:e)},y.compact=function(t){return y.filter(t,y.identity)};var I=function(t,e,i,n){for(var s=[],r=0,o=n||0,a=k(t);a>o;o++){var l=t[o];if(S(l)&&(y.isArray(l)||y.isArguments(l))){e||(l=I(l,e,i));var u=0,h=l.length;for(s.length+=h;h>u;)s[r++]=l[u++]}else i||(s[r++]=l)}return s};y.flatten=function(t,e){return I(t,e,!1)},y.without=function(t){return y.difference(t,h.call(arguments,1))},y.uniq=y.unique=function(t,e,i,n){y.isBoolean(e)||(n=i,i=e,e=!1),null!=i&&(i=b(i,n));for(var s=[],r=[],o=0,a=k(t);a>o;o++){var l=t[o],u=i?i(l,o,t):l;e?(o&&r===u||s.push(l),r=u):i?y.contains(r,u)||(r.push(u),
s.push(l)):y.contains(s,l)||s.push(l)}return s},y.union=function(){return y.uniq(I(arguments,!0,!0))},y.intersection=function(t){for(var e=[],i=arguments.length,n=0,s=k(t);s>n;n++){var r=t[n];if(!y.contains(e,r)){for(var o=1;i>o&&y.contains(arguments[o],r);o++);o===i&&e.push(r)}}return e},y.difference=function(t){var e=I(arguments,!0,!0,1);return y.filter(t,function(t){return!y.contains(e,t)})},y.zip=function(){return y.unzip(arguments)},y.unzip=function(t){for(var e=t&&y.max(t,k).length||0,i=Array(e),n=0;e>n;n++)i[n]=y.pluck(t,n);return i},y.object=function(t,e){for(var i={},n=0,s=k(t);s>n;n++)e?i[t[n]]=e[n]:i[t[n][0]]=t[n][1];return i},y.findIndex=e(1),y.findLastIndex=e(-1),y.sortedIndex=function(t,e,i,n){i=b(i,n,1);for(var s=i(e),r=0,o=k(t);o>r;){var a=Math.floor((r+o)/2);i(t[a])<s?r=a+1:o=a}return r},y.indexOf=i(1,y.findIndex,y.sortedIndex),y.lastIndexOf=i(-1,y.findLastIndex),y.range=function(t,e,i){null==e&&(e=t||0,t=0),i=i||1;for(var n=Math.max(Math.ceil((e-t)/i),0),s=Array(n),r=0;n>r;r++,t+=i)s[r]=t;return s};var T=function(t,e,i,n,s){if(!(n instanceof e))return t.apply(i,s);var r=w(t.prototype),o=t.apply(r,s);return y.isObject(o)?o:r};y.bind=function(t,e){if(m&&t.bind===m)return m.apply(t,h.call(arguments,1));if(!y.isFunction(t))throw new TypeError("Bind must be called on a function");var i=h.call(arguments,2),n=function(){return T(t,n,e,this,i.concat(h.call(arguments)))};return n},y.partial=function(t){var e=h.call(arguments,1),i=function(){for(var n=0,s=e.length,r=Array(s),o=0;s>o;o++)r[o]=e[o]===y?arguments[n++]:e[o];for(;n<arguments.length;)r.push(arguments[n++]);return T(t,i,this,this,r)};return i},y.bindAll=function(t){var e,i,n=arguments.length;if(1>=n)throw new Error("bindAll must be passed function names");for(e=1;n>e;e++)i=arguments[e],t[i]=y.bind(t[i],t);return t},y.memoize=function(t,e){var i=function(n){var s=i.cache,r=""+(e?e.apply(this,arguments):n);return y.has(s,r)||(s[r]=t.apply(this,arguments)),s[r]};return i.cache={},i},y.delay=function(t,e){var i=h.call(arguments,2);return setTimeout(function(){return t.apply(null,i)},e)},y.defer=y.partial(y.delay,y,1),y.throttle=function(t,e,i){var n,s,r,o=null,a=0;i||(i={});var l=function(){a=i.leading===!1?0:y.now(),o=null,r=t.apply(n,s),o||(n=s=null)};return function(){var u=y.now();a||i.leading!==!1||(a=u);var h=e-(u-a);return n=this,s=arguments,0>=h||h>e?(o&&(clearTimeout(o),o=null),a=u,r=t.apply(n,s),o||(n=s=null)):o||i.trailing===!1||(o=setTimeout(l,h)),r}},y.debounce=function(t,e,i){var n,s,r,o,a,l=function(){var u=y.now()-o;e>u&&u>=0?n=setTimeout(l,e-u):(n=null,i||(a=t.apply(r,s),n||(r=s=null)))};return function(){r=this,s=arguments,o=y.now();var u=i&&!n;return n||(n=setTimeout(l,e)),u&&(a=t.apply(r,s),r=s=null),a}},y.wrap=function(t,e){return y.partial(e,t)},y.negate=function(t){return function(){return!t.apply(this,arguments)}},y.compose=function(){var t=arguments,e=t.length-1;return function(){for(var i=e,n=t[e].apply(this,arguments);i--;)n=t[i].call(this,n);return n}},y.after=function(t,e){return function(){return--t<1?e.apply(this,arguments):void 0}},y.before=function(t,e){var i;return function(){return--t>0&&(i=e.apply(this,arguments)),1>=t&&(e=null),i}},y.once=y.partial(y.before,2);var E=!{toString:null}.propertyIsEnumerable("toString"),A=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];y.keys=function(t){if(!y.isObject(t))return[];if(p)return p(t);var e=[];for(var i in t)y.has(t,i)&&e.push(i);return E&&n(t,e),e},y.allKeys=function(t){if(!y.isObject(t))return[];var e=[];for(var i in t)e.push(i);return E&&n(t,e),e},y.values=function(t){for(var e=y.keys(t),i=e.length,n=Array(i),s=0;i>s;s++)n[s]=t[e[s]];return n},y.mapObject=function(t,e,i){e=b(e,i);for(var n,s=y.keys(t),r=s.length,o={},a=0;r>a;a++)n=s[a],o[n]=e(t[n],n,t);return o},y.pairs=function(t){for(var e=y.keys(t),i=e.length,n=Array(i),s=0;i>s;s++)n[s]=[e[s],t[e[s]]];return n},y.invert=function(t){for(var e={},i=y.keys(t),n=0,s=i.length;s>n;n++)e[t[i[n]]]=i[n];return e},y.functions=y.methods=function(t){var e=[];for(var i in t)y.isFunction(t[i])&&e.push(i);return e.sort()},y.extend=x(y.allKeys),y.extendOwn=y.assign=x(y.keys),y.findKey=function(t,e,i){e=b(e,i);for(var n,s=y.keys(t),r=0,o=s.length;o>r;r++)if(n=s[r],e(t[n],n,t))return n},y.pick=function(t,e,i){var n,s,r={},o=t;if(null==o)return r;y.isFunction(e)?(s=y.allKeys(o),n=_(e,i)):(s=I(arguments,!1,!1,1),n=function(t,e,i){return e in i},o=Object(o));for(var a=0,l=s.length;l>a;a++){var u=s[a],h=o[u];n(h,u,o)&&(r[u]=h)}return r},y.omit=function(t,e,i){if(y.isFunction(e))e=y.negate(e);else{var n=y.map(I(arguments,!1,!1,1),String);e=function(t,e){return!y.contains(n,e)}}return y.pick(t,e,i)},y.defaults=x(y.allKeys,!0),y.create=function(t,e){var i=w(t);return e&&y.extendOwn(i,e),i},y.clone=function(t){return y.isObject(t)?y.isArray(t)?t.slice():y.extend({},t):t},y.tap=function(t,e){return e(t),t},y.isMatch=function(t,e){var i=y.keys(e),n=i.length;if(null==t)return!n;for(var s=Object(t),r=0;n>r;r++){var o=i[r];if(e[o]!==s[o]||!(o in s))return!1}return!0};var F=function(t,e,i,n){if(t===e)return 0!==t||1/t===1/e;if(null==t||null==e)return t===e;t instanceof y&&(t=t._wrapped),e instanceof y&&(e=e._wrapped);var s=c.call(t);if(s!==c.call(e))return!1;switch(s){case"[object RegExp]":case"[object String]":return""+t==""+e;case"[object Number]":return+t!==+t?+e!==+e:0===+t?1/+t===1/e:+t===+e;case"[object Date]":case"[object Boolean]":return+t===+e}var r="[object Array]"===s;if(!r){if("object"!=typeof t||"object"!=typeof e)return!1;var o=t.constructor,a=e.constructor;if(o!==a&&!(y.isFunction(o)&&o instanceof o&&y.isFunction(a)&&a instanceof a)&&"constructor"in t&&"constructor"in e)return!1}i=i||[],n=n||[];for(var l=i.length;l--;)if(i[l]===t)return n[l]===e;if(i.push(t),n.push(e),r){if(l=t.length,l!==e.length)return!1;for(;l--;)if(!F(t[l],e[l],i,n))return!1}else{var u,h=y.keys(t);if(l=h.length,y.keys(e).length!==l)return!1;for(;l--;)if(u=h[l],!y.has(e,u)||!F(t[u],e[u],i,n))return!1}return i.pop(),n.pop(),!0};y.isEqual=function(t,e){return F(t,e)},y.isEmpty=function(t){return null==t?!0:S(t)&&(y.isArray(t)||y.isString(t)||y.isArguments(t))?0===t.length:0===y.keys(t).length},y.isElement=function(t){return!(!t||1!==t.nodeType)},y.isArray=f||function(t){return"[object Array]"===c.call(t)},y.isObject=function(t){var e=typeof t;return"function"===e||"object"===e&&!!t},y.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(t){y["is"+t]=function(e){return c.call(e)==="[object "+t+"]"}}),y.isArguments(arguments)||(y.isArguments=function(t){return y.has(t,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(y.isFunction=function(t){return"function"==typeof t||!1}),y.isFinite=function(t){return isFinite(t)&&!isNaN(parseFloat(t))},y.isNaN=function(t){return y.isNumber(t)&&t!==+t},y.isBoolean=function(t){return t===!0||t===!1||"[object Boolean]"===c.call(t)},y.isNull=function(t){return null===t},y.isUndefined=function(t){return void 0===t},y.has=function(t,e){return null!=t&&d.call(t,e)},y.noConflict=function(){return s._=r,this},y.identity=function(t){return t},y.constant=function(t){return function(){return t}},y.noop=function(){},y.property=M,y.propertyOf=function(t){return null==t?function(){}:function(e){return t[e]}},y.matcher=y.matches=function(t){return t=y.extendOwn({},t),function(e){return y.isMatch(e,t)}},y.times=function(t,e,i){var n=Array(Math.max(0,t));e=_(e,i,1);for(var s=0;t>s;s++)n[s]=e(s);return n},y.random=function(t,e){return null==e&&(e=t,t=0),t+Math.floor(Math.random()*(e-t+1))},y.now=Date.now||function(){return(new Date).getTime()};var P={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},N=y.invert(P),O=function(t){var e=function(e){return t[e]},i="(?:"+y.keys(t).join("|")+")",n=RegExp(i),s=RegExp(i,"g");return function(t){return t=null==t?"":""+t,n.test(t)?t.replace(s,e):t}};y.escape=O(P),y.unescape=O(N),y.result=function(t,e,i){var n=null==t?void 0:t[e];return void 0===n&&(n=i),y.isFunction(n)?n.call(t):n};var z=0;y.uniqueId=function(t){var e=++z+"";return t?t+e:e},y.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var R=/(.)^/,L={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},H=/\\|'|\r|\n|\u2028|\u2029/g,j=function(t){return"\\"+L[t]};y.template=function(t,e,i){!e&&i&&(e=i),e=y.defaults({},e,y.templateSettings);var n=RegExp([(e.escape||R).source,(e.interpolate||R).source,(e.evaluate||R).source].join("|")+"|$","g"),s=0,r="__p+='";t.replace(n,function(e,i,n,o,a){return r+=t.slice(s,a).replace(H,j),s=a+e.length,i?r+="'+\n((__t=("+i+"))==null?'':_.escape(__t))+\n'":n?r+="'+\n((__t=("+n+"))==null?'':__t)+\n'":o&&(r+="';\n"+o+"\n__p+='"),e}),r+="';\n",e.variable||(r="with(obj||{}){\n"+r+"}\n"),r="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+r+"return __p;\n";try{var o=new Function(e.variable||"obj","_",r)}catch(a){throw a.source=r,a}var l=function(t){return o.call(this,t,y)},u=e.variable||"obj";return l.source="function("+u+"){\n"+r+"}",l},y.chain=function(t){var e=y(t);return e._chain=!0,e};var q=function(t,e){return t._chain?y(e).chain():e};y.mixin=function(t){y.each(y.functions(t),function(e){var i=y[e]=t[e];y.prototype[e]=function(){var t=[this._wrapped];return u.apply(t,arguments),q(this,i.apply(y,t))}})},y.mixin(y),y.each(["pop","push","reverse","shift","sort","splice","unshift"],function(t){var e=o[t];y.prototype[t]=function(){var i=this._wrapped;return e.apply(i,arguments),"shift"!==t&&"splice"!==t||0!==i.length||delete i[0],q(this,i)}}),y.each(["concat","join","slice"],function(t){var e=o[t];y.prototype[t]=function(){return q(this,e.apply(this._wrapped,arguments))}}),y.prototype.value=function(){return this._wrapped},y.prototype.valueOf=y.prototype.toJSON=y.prototype.value,y.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return y})}.call(this),function(t){"function"==typeof define&&define.amd?define("jquery-ui",["jquery"],t):t(jQuery)}(function(t){function e(e,n){var s,r,o,a=e.nodeName.toLowerCase();return"area"===a?(s=e.parentNode,r=s.name,e.href&&r&&"map"===s.nodeName.toLowerCase()?(o=t("img[usemap='#"+r+"']")[0],!!o&&i(o)):!1):(/^(input|select|textarea|button|object)$/.test(a)?!e.disabled:"a"===a?e.href||n:n)&&i(e)}function i(e){return t.expr.filters.visible(e)&&!t(e).parents().addBack().filter(function(){return"hidden"===t.css(this,"visibility")}).length}function n(t){for(var e,i;t.length&&t[0]!==document;){if(e=t.css("position"),("absolute"===e||"relative"===e||"fixed"===e)&&(i=parseInt(t.css("zIndex"),10),!isNaN(i)&&0!==i))return i;t=t.parent()}return 0}function s(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},t.extend(this._defaults,this.regional[""]),this.regional.en=t.extend(!0,{},this.regional[""]),this.regional["en-US"]=t.extend(!0,{},this.regional.en),this.dpDiv=r(t("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function r(e){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(i,"mouseout",function(){t(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).removeClass("ui-datepicker-next-hover")}).delegate(i,"mouseover",o)}function o(){t.datepicker._isDisabledDatepicker(v.inline?v.dpDiv.parent()[0]:v.input[0])||(t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),t(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).addClass("ui-datepicker-next-hover"))}function a(e,i){t.extend(e,i);for(var n in i)null==i[n]&&(e[n]=i[n]);return e}function l(t){return function(){var e=this.element.val();t.apply(this,arguments),this._refresh(),e!==this.element.val()&&this._trigger("change")}}t.ui=t.ui||{},t.extend(t.ui,{version:"1.11.4",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),t.fn.extend({scrollParent:function(e){var i=this.css("position"),n="absolute"===i,s=e?/(auto|scroll|hidden)/:/(auto|scroll)/,r=this.parents().filter(function(){var e=t(this);return n&&"static"===e.css("position")?!1:s.test(e.css("overflow")+e.css("overflow-y")+e.css("overflow-x"))}).eq(0);return"fixed"!==i&&r.length?r:t(this[0].ownerDocument||document)},uniqueId:function(){var t=0;return function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++t)})}}(),removeUniqueId:function(){return this.each(function(){/^ui-id-\d+$/.test(this.id)&&t(this).removeAttr("id")})}}),t.extend(t.expr[":"],{data:t.expr.createPseudo?t.expr.createPseudo(function(e){return function(i){return!!t.data(i,e)}}):function(e,i,n){return!!t.data(e,n[3])},focusable:function(i){return e(i,!isNaN(t.attr(i,"tabindex")))},tabbable:function(i){var n=t.attr(i,"tabindex"),s=isNaN(n);return(s||n>=0)&&e(i,!s)}}),t("<a>").outerWidth(1).jquery||t.each(["Width","Height"],function(e,i){function n(e,i,n,r){return t.each(s,function(){i-=parseFloat(t.css(e,"padding"+this))||0,n&&(i-=parseFloat(t.css(e,"border"+this+"Width"))||0),r&&(i-=parseFloat(t.css(e,"margin"+this))||0)}),i}var s="Width"===i?["Left","Right"]:["Top","Bottom"],r=i.toLowerCase(),o={innerWidth:t.fn.innerWidth,innerHeight:t.fn.innerHeight,outerWidth:t.fn.outerWidth,outerHeight:t.fn.outerHeight};t.fn["inner"+i]=function(e){return void 0===e?o["inner"+i].call(this):this.each(function(){t(this).css(r,n(this,e)+"px")})},t.fn["outer"+i]=function(e,s){return"number"!=typeof e?o["outer"+i].call(this,e):this.each(function(){t(this).css(r,n(this,e,!0,s)+"px")})}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(t.fn.removeData=function(e){return function(i){return arguments.length?e.call(this,t.camelCase(i)):e.call(this)}}(t.fn.removeData)),t.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),t.fn.extend({focus:function(e){return function(i,n){return"number"==typeof i?this.each(function(){var e=this;setTimeout(function(){t(e).focus(),n&&n.call(e)},i)}):e.apply(this,arguments)}}(t.fn.focus),disableSelection:function(){var t="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.bind(t+".ui-disableSelection",function(t){t.preventDefault()})}}(),enableSelection:function(){return this.unbind(".ui-disableSelection")},zIndex:function(e){if(void 0!==e)return this.css("zIndex",e);if(this.length)for(var i,n,s=t(this[0]);s.length&&s[0]!==document;){if(i=s.css("position"),("absolute"===i||"relative"===i||"fixed"===i)&&(n=parseInt(s.css("zIndex"),10),!isNaN(n)&&0!==n))return n;s=s.parent()}return 0}}),t.ui.plugin={add:function(e,i,n){var s,r=t.ui[e].prototype;for(s in n)r.plugins[s]=r.plugins[s]||[],r.plugins[s].push([i,n[s]])},call:function(t,e,i,n){var s,r=t.plugins[e];if(r&&(n||t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType))for(s=0;s<r.length;s++)t.options[r[s][0]]&&r[s][1].apply(t.element,i)}};var u=0,h=Array.prototype.slice;t.cleanData=function(e){return function(i){var n,s,r;for(r=0;null!=(s=i[r]);r++)try{n=t._data(s,"events"),n&&n.remove&&t(s).triggerHandler("remove")}catch(o){}e(i)}}(t.cleanData),t.widget=function(e,i,n){var s,r,o,a,l={},u=e.split(".")[0];return e=e.split(".")[1],s=u+"-"+e,n||(n=i,i=t.Widget),t.expr[":"][s.toLowerCase()]=function(e){return!!t.data(e,s)},t[u]=t[u]||{},r=t[u][e],o=t[u][e]=function(t,e){return this._createWidget?void(arguments.length&&this._createWidget(t,e)):new o(t,e)},t.extend(o,r,{version:n.version,_proto:t.extend({},n),_childConstructors:[]}),a=new i,a.options=t.widget.extend({},a.options),t.each(n,function(e,n){return t.isFunction(n)?void(l[e]=function(){var t=function(){return i.prototype[e].apply(this,arguments)},s=function(t){return i.prototype[e].apply(this,t)};return function(){var e,i=this._super,r=this._superApply;return this._super=t,this._superApply=s,e=n.apply(this,arguments),this._super=i,this._superApply=r,e}}()):void(l[e]=n)}),o.prototype=t.widget.extend(a,{widgetEventPrefix:r?a.widgetEventPrefix||e:e},l,{constructor:o,namespace:u,widgetName:e,widgetFullName:s}),r?(t.each(r._childConstructors,function(e,i){var n=i.prototype;t.widget(n.namespace+"."+n.widgetName,o,i._proto)}),delete r._childConstructors):i._childConstructors.push(o),t.widget.bridge(e,o),o},t.widget.extend=function(e){for(var i,n,s=h.call(arguments,1),r=0,o=s.length;o>r;r++)for(i in s[r])n=s[r][i],s[r].hasOwnProperty(i)&&void 0!==n&&(t.isPlainObject(n)?e[i]=t.isPlainObject(e[i])?t.widget.extend({},e[i],n):t.widget.extend({},n):e[i]=n);return e},t.widget.bridge=function(e,i){var n=i.prototype.widgetFullName||e;t.fn[e]=function(s){var r="string"==typeof s,o=h.call(arguments,1),a=this;return r?this.each(function(){var i,r=t.data(this,n);return"instance"===s?(a=r,!1):r?t.isFunction(r[s])&&"_"!==s.charAt(0)?(i=r[s].apply(r,o),i!==r&&void 0!==i?(a=i&&i.jquery?a.pushStack(i.get()):i,!1):void 0):t.error("no such method '"+s+"' for "+e+" widget instance"):t.error("cannot call methods on "+e+" prior to initialization; attempted to call method '"+s+"'")}):(o.length&&(s=t.widget.extend.apply(null,[s].concat(o))),this.each(function(){var e=t.data(this,n);e?(e.option(s||{}),e._init&&e._init()):t.data(this,n,new i(s,this))})),a}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(e,i){i=t(i||this.defaultElement||this)[0],this.element=t(i),this.uuid=u++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=t(),this.hoverable=t(),this.focusable=t(),i!==this&&(t.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===i&&this.destroy()}}),this.document=t(i.style?i.ownerDocument:i.document||i),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:t.noop,_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData(t.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:t.noop,widget:function(){return this.element},option:function(e,i){var n,s,r,o=e;if(0===arguments.length)return t.widget.extend({},this.options);if("string"==typeof e)if(o={},n=e.split("."),e=n.shift(),n.length){for(s=o[e]=t.widget.extend({},this.options[e]),r=0;r<n.length-1;r++)s[n[r]]=s[n[r]]||{},s=s[n[r]];if(e=n.pop(),1===arguments.length)return void 0===s[e]?null:s[e];s[e]=i}else{if(1===arguments.length)return void 0===this.options[e]?null:this.options[e];o[e]=i}return this._setOptions(o),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return this.options[t]=e,"disabled"===t&&(this.widget().toggleClass(this.widgetFullName+"-disabled",!!e),e&&(this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus"))),this},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_on:function(e,i,n){var s,r=this;"boolean"!=typeof e&&(n=i,i=e,e=!1),n?(i=s=t(i),this.bindings=this.bindings.add(i)):(n=i,i=this.element,s=this.widget()),t.each(n,function(n,o){function a(){return e||r.options.disabled!==!0&&!t(this).hasClass("ui-state-disabled")?("string"==typeof o?r[o]:o).apply(r,arguments):void 0}"string"!=typeof o&&(a.guid=o.guid=o.guid||a.guid||t.guid++);var l=n.match(/^([\w:-]*)\s*(.*)$/),u=l[1]+r.eventNamespace,h=l[2];h?s.delegate(h,u,a):i.bind(u,a)})},_off:function(e,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(i).undelegate(i),this.bindings=t(this.bindings.not(e).get()),this.focusable=t(this.focusable.not(e).get()),this.hoverable=t(this.hoverable.not(e).get())},_delay:function(t,e){function i(){return("string"==typeof t?n[t]:t).apply(n,arguments)}var n=this;return setTimeout(i,e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){t(e.currentTarget).addClass("ui-state-hover")},mouseleave:function(e){t(e.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){t(e.currentTarget).addClass("ui-state-focus")},focusout:function(e){t(e.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(e,i,n){var s,r,o=this.options[e];if(n=n||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],r=i.originalEvent)for(s in r)s in i||(i[s]=r[s]);return this.element.trigger(i,n),!(t.isFunction(o)&&o.apply(this.element[0],[i].concat(n))===!1||i.isDefaultPrevented())}},t.each({show:"fadeIn",hide:"fadeOut"},function(e,i){t.Widget.prototype["_"+e]=function(n,s,r){"string"==typeof s&&(s={effect:s});var o,a=s?s===!0||"number"==typeof s?i:s.effect||i:e;s=s||{},"number"==typeof s&&(s={duration:s}),o=!t.isEmptyObject(s),s.complete=r,s.delay&&n.delay(s.delay),o&&t.effects&&t.effects.effect[a]?n[e](s):a!==e&&n[a]?n[a](s.duration,s.easing,r):n.queue(function(i){t(this)[e](),r&&r.call(n[0]),i()})}});var c=(t.widget,!1);t(document).mouseup(function(){c=!1});t.widget("ui.mouse",{version:"1.11.4",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.bind("mousedown."+this.widgetName,function(t){return e._mouseDown(t)}).bind("click."+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+".preventClickEvent")?(t.removeData(i.target,e.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&this.document.unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(e){if(!c){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(e),this._mouseDownEvent=e;var i=this,n=1===e.which,s="string"==typeof this.options.cancel&&e.target.nodeName?t(e.target).closest(this.options.cancel).length:!1;return n&&!s&&this._mouseCapture(e)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){i.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(e)!==!1,!this._mouseStarted)?(e.preventDefault(),!0):(!0===t.data(e.target,this.widgetName+".preventClickEvent")&&t.removeData(e.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(t){return i._mouseMove(t)},this._mouseUpDelegate=function(t){return i._mouseUp(t)},this.document.bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),e.preventDefault(),c=!0,!0)):!0}},_mouseMove:function(e){if(this._mouseMoved){if(t.ui.ie&&(!document.documentMode||document.documentMode<9)&&!e.button)return this._mouseUp(e);if(!e.which)return this._mouseUp(e)}return(e.which||e.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){return this.document.unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(e)),c=!1,!1},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}});!function(){function e(t,e,i){return[parseFloat(t[0])*(f.test(t[0])?e/100:1),parseFloat(t[1])*(f.test(t[1])?i/100:1)]}function i(e,i){return parseInt(t.css(e,i),10)||0}function n(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}t.ui=t.ui||{};var s,r,o=Math.max,a=Math.abs,l=Math.round,u=/left|center|right/,h=/top|center|bottom/,c=/[\+\-]\d+(\.[\d]+)?%?/,d=/^\w+/,f=/%$/,p=t.fn.position;t.position={scrollbarWidth:function(){if(void 0!==s)return s;var e,i,n=t("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),r=n.children()[0];return t("body").append(n),e=r.offsetWidth,n.css("overflow","scroll"),i=r.offsetWidth,e===i&&(i=n[0].clientWidth),n.remove(),s=e-i},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?"":e.element.css("overflow-x"),n=e.isWindow||e.isDocument?"":e.element.css("overflow-y"),s="scroll"===i||"auto"===i&&e.width<e.element[0].scrollWidth,r="scroll"===n||"auto"===n&&e.height<e.element[0].scrollHeight;return{width:r?t.position.scrollbarWidth():0,height:s?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),n=t.isWindow(i[0]),s=!!i[0]&&9===i[0].nodeType;return{element:i,isWindow:n,isDocument:s,offset:i.offset()||{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:n||s?i.width():i.outerWidth(),height:n||s?i.height():i.outerHeight()}}},t.fn.position=function(s){if(!s||!s.of)return p.apply(this,arguments);s=t.extend({},s);var f,m,g,v,y,_,b=t(s.of),x=t.position.getWithinInfo(s.within),w=t.position.getScrollInfo(x),M=(s.collision||"flip").split(" "),D={};return _=n(b),b[0].preventDefault&&(s.at="left top"),m=_.width,g=_.height,v=_.offset,y=t.extend({},v),t.each(["my","at"],function(){var t,e,i=(s[this]||"").split(" ");1===i.length&&(i=u.test(i[0])?i.concat(["center"]):h.test(i[0])?["center"].concat(i):["center","center"]),i[0]=u.test(i[0])?i[0]:"center",i[1]=h.test(i[1])?i[1]:"center",t=c.exec(i[0]),e=c.exec(i[1]),D[this]=[t?t[0]:0,e?e[0]:0],s[this]=[d.exec(i[0])[0],d.exec(i[1])[0]]}),1===M.length&&(M[1]=M[0]),"right"===s.at[0]?y.left+=m:"center"===s.at[0]&&(y.left+=m/2),"bottom"===s.at[1]?y.top+=g:"center"===s.at[1]&&(y.top+=g/2),f=e(D.at,m,g),y.left+=f[0],y.top+=f[1],this.each(function(){var n,u,h=t(this),c=h.outerWidth(),d=h.outerHeight(),p=i(this,"marginLeft"),_=i(this,"marginTop"),k=c+p+i(this,"marginRight")+w.width,S=d+_+i(this,"marginBottom")+w.height,C=t.extend({},y),I=e(D.my,h.outerWidth(),h.outerHeight());"right"===s.my[0]?C.left-=c:"center"===s.my[0]&&(C.left-=c/2),"bottom"===s.my[1]?C.top-=d:"center"===s.my[1]&&(C.top-=d/2),C.left+=I[0],C.top+=I[1],r||(C.left=l(C.left),C.top=l(C.top)),n={marginLeft:p,marginTop:_},t.each(["left","top"],function(e,i){t.ui.position[M[e]]&&t.ui.position[M[e]][i](C,{targetWidth:m,targetHeight:g,elemWidth:c,elemHeight:d,collisionPosition:n,collisionWidth:k,collisionHeight:S,offset:[f[0]+I[0],f[1]+I[1]],my:s.my,at:s.at,within:x,elem:h})}),s.using&&(u=function(t){var e=v.left-C.left,i=e+m-c,n=v.top-C.top,r=n+g-d,l={target:{element:b,left:v.left,top:v.top,width:m,height:g},element:{element:h,left:C.left,top:C.top,width:c,height:d},horizontal:0>i?"left":e>0?"right":"center",vertical:0>r?"top":n>0?"bottom":"middle"};c>m&&a(e+i)<m&&(l.horizontal="center"),d>g&&a(n+r)<g&&(l.vertical="middle"),o(a(e),a(i))>o(a(n),a(r))?l.important="horizontal":l.important="vertical",s.using.call(this,t,l)}),h.offset(t.extend(C,{using:u}))})},t.ui.position={fit:{left:function(t,e){var i,n=e.within,s=n.isWindow?n.scrollLeft:n.offset.left,r=n.width,a=t.left-e.collisionPosition.marginLeft,l=s-a,u=a+e.collisionWidth-r-s;e.collisionWidth>r?l>0&&0>=u?(i=t.left+l+e.collisionWidth-r-s,t.left+=l-i):u>0&&0>=l?t.left=s:l>u?t.left=s+r-e.collisionWidth:t.left=s:l>0?t.left+=l:u>0?t.left-=u:t.left=o(t.left-a,t.left)},top:function(t,e){var i,n=e.within,s=n.isWindow?n.scrollTop:n.offset.top,r=e.within.height,a=t.top-e.collisionPosition.marginTop,l=s-a,u=a+e.collisionHeight-r-s;e.collisionHeight>r?l>0&&0>=u?(i=t.top+l+e.collisionHeight-r-s,t.top+=l-i):u>0&&0>=l?t.top=s:l>u?t.top=s+r-e.collisionHeight:t.top=s:l>0?t.top+=l:u>0?t.top-=u:t.top=o(t.top-a,t.top)}},flip:{left:function(t,e){var i,n,s=e.within,r=s.offset.left+s.scrollLeft,o=s.width,l=s.isWindow?s.scrollLeft:s.offset.left,u=t.left-e.collisionPosition.marginLeft,h=u-l,c=u+e.collisionWidth-o-l,d="left"===e.my[0]?-e.elemWidth:"right"===e.my[0]?e.elemWidth:0,f="left"===e.at[0]?e.targetWidth:"right"===e.at[0]?-e.targetWidth:0,p=-2*e.offset[0];0>h?(i=t.left+d+f+p+e.collisionWidth-o-r,(0>i||i<a(h))&&(t.left+=d+f+p)):c>0&&(n=t.left-e.collisionPosition.marginLeft+d+f+p-l,(n>0||a(n)<c)&&(t.left+=d+f+p))},top:function(t,e){var i,n,s=e.within,r=s.offset.top+s.scrollTop,o=s.height,l=s.isWindow?s.scrollTop:s.offset.top,u=t.top-e.collisionPosition.marginTop,h=u-l,c=u+e.collisionHeight-o-l,d="top"===e.my[1],f=d?-e.elemHeight:"bottom"===e.my[1]?e.elemHeight:0,p="top"===e.at[1]?e.targetHeight:"bottom"===e.at[1]?-e.targetHeight:0,m=-2*e.offset[1];0>h?(n=t.top+f+p+m+e.collisionHeight-o-r,(0>n||n<a(h))&&(t.top+=f+p+m)):c>0&&(i=t.top-e.collisionPosition.marginTop+f+p+m-l,(i>0||a(i)<c)&&(t.top+=f+p+m))}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),
t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}},function(){var e,i,n,s,o,a=document.getElementsByTagName("body")[0],l=document.createElement("div");e=document.createElement(a?"div":"body"),n={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},a&&t.extend(n,{position:"absolute",left:"-1000px",top:"-1000px"});for(o in n)e.style[o]=n[o];e.appendChild(l),i=a||document.documentElement,i.insertBefore(e,i.firstChild),l.style.cssText="position: absolute; left: 10.7432222px;",s=t(l).offset().left,r=s>10&&11>s,e.innerHTML="",i.removeChild(e)}()}();t.ui.position,t.widget("ui.accordion",{version:"1.11.4",options:{active:0,animate:{},collapsible:!1,event:"click",header:"> li > :first-child,> :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},hideProps:{borderTopWidth:"hide",borderBottomWidth:"hide",paddingTop:"hide",paddingBottom:"hide",height:"hide"},showProps:{borderTopWidth:"show",borderBottomWidth:"show",paddingTop:"show",paddingBottom:"show",height:"show"},_create:function(){var e=this.options;this.prevShow=this.prevHide=t(),this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role","tablist"),e.collapsible||e.active!==!1&&null!=e.active||(e.active=0),this._processPanels(),e.active<0&&(e.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():t()}},_createIcons:function(){var e=this.options.icons;e&&(t("<span>").addClass("ui-accordion-header-icon ui-icon "+e.header).prependTo(this.headers),this.active.children(".ui-accordion-header-icon").removeClass(e.header).addClass(e.activeHeader),this.headers.addClass("ui-accordion-icons"))},_destroyIcons:function(){this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()},_destroy:function(){var t;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").removeUniqueId(),this._destroyIcons(),t=this.headers.next().removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").css("display","").removeAttr("role").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeUniqueId(),"content"!==this.options.heightStyle&&t.css("height","")},_setOption:function(t,e){return"active"===t?void this._activate(e):("event"===t&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(e)),this._super(t,e),"collapsible"!==t||e||this.options.active!==!1||this._activate(0),"icons"===t&&(this._destroyIcons(),e&&this._createIcons()),void("disabled"===t&&(this.element.toggleClass("ui-state-disabled",!!e).attr("aria-disabled",e),this.headers.add(this.headers.next()).toggleClass("ui-state-disabled",!!e))))},_keydown:function(e){if(!e.altKey&&!e.ctrlKey){var i=t.ui.keyCode,n=this.headers.length,s=this.headers.index(e.target),r=!1;switch(e.keyCode){case i.RIGHT:case i.DOWN:r=this.headers[(s+1)%n];break;case i.LEFT:case i.UP:r=this.headers[(s-1+n)%n];break;case i.SPACE:case i.ENTER:this._eventHandler(e);break;case i.HOME:r=this.headers[0];break;case i.END:r=this.headers[n-1]}r&&(t(e.target).attr("tabIndex",-1),t(r).attr("tabIndex",0),r.focus(),e.preventDefault())}},_panelKeyDown:function(e){e.keyCode===t.ui.keyCode.UP&&e.ctrlKey&&t(e.currentTarget).prev().focus()},refresh:function(){var e=this.options;this._processPanels(),e.active===!1&&e.collapsible===!0||!this.headers.length?(e.active=!1,this.active=t()):e.active===!1?this._activate(0):this.active.length&&!t.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(e.active=!1,this.active=t()):this._activate(Math.max(0,e.active-1)):e.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){var t=this.headers,e=this.panels;this.headers=this.element.find(this.options.header).addClass("ui-accordion-header ui-state-default ui-corner-all"),this.panels=this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide(),e&&(this._off(t.not(this.headers)),this._off(e.not(this.panels)))},_refresh:function(){var e,i=this.options,n=i.heightStyle,s=this.element.parent();this.active=this._findActive(i.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all"),this.active.next().addClass("ui-accordion-content-active").show(),this.headers.attr("role","tab").each(function(){var e=t(this),i=e.uniqueId().attr("id"),n=e.next(),s=n.uniqueId().attr("id");e.attr("aria-controls",s),n.attr("aria-labelledby",i)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}).next().attr({"aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._createIcons(),this._setupEvents(i.event),"fill"===n?(e=s.height(),this.element.siblings(":visible").each(function(){var i=t(this),n=i.css("position");"absolute"!==n&&"fixed"!==n&&(e-=i.outerHeight(!0))}),this.headers.each(function(){e-=t(this).outerHeight(!0)}),this.headers.next().each(function(){t(this).height(Math.max(0,e-t(this).innerHeight()+t(this).height()))}).css("overflow","auto")):"auto"===n&&(e=0,this.headers.next().each(function(){e=Math.max(e,t(this).css("height","").height())}).height(e))},_activate:function(e){var i=this._findActive(e)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return"number"==typeof e?this.headers.eq(e):t()},_setupEvents:function(e){var i={keydown:"_keydown"};e&&t.each(e.split(" "),function(t,e){i[e]="_eventHandler"}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(e){var i=this.options,n=this.active,s=t(e.currentTarget),r=s[0]===n[0],o=r&&i.collapsible,a=o?t():s.next(),l=n.next(),u={oldHeader:n,oldPanel:l,newHeader:o?t():s,newPanel:a};e.preventDefault(),r&&!i.collapsible||this._trigger("beforeActivate",e,u)===!1||(i.active=o?!1:this.headers.index(s),this.active=r?t():s,this._toggle(u),n.removeClass("ui-accordion-header-active ui-state-active"),i.icons&&n.children(".ui-accordion-header-icon").removeClass(i.icons.activeHeader).addClass(i.icons.header),r||(s.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),i.icons&&s.children(".ui-accordion-header-icon").removeClass(i.icons.header).addClass(i.icons.activeHeader),s.next().addClass("ui-accordion-content-active")))},_toggle:function(e){var i=e.newPanel,n=this.prevShow.length?this.prevShow:e.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=n,this.options.animate?this._animate(i,n,e):(n.hide(),i.show(),this._toggleComplete(e)),n.attr({"aria-hidden":"true"}),n.prev().attr({"aria-selected":"false","aria-expanded":"false"}),i.length&&n.length?n.prev().attr({tabIndex:-1,"aria-expanded":"false"}):i.length&&this.headers.filter(function(){return 0===parseInt(t(this).attr("tabIndex"),10)}).attr("tabIndex",-1),i.attr("aria-hidden","false").prev().attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_animate:function(t,e,i){var n,s,r,o=this,a=0,l=t.css("box-sizing"),u=t.length&&(!e.length||t.index()<e.index()),h=this.options.animate||{},c=u&&h.down||h,d=function(){o._toggleComplete(i)};return"number"==typeof c&&(r=c),"string"==typeof c&&(s=c),s=s||c.easing||h.easing,r=r||c.duration||h.duration,e.length?t.length?(n=t.show().outerHeight(),e.animate(this.hideProps,{duration:r,easing:s,step:function(t,e){e.now=Math.round(t)}}),void t.hide().animate(this.showProps,{duration:r,easing:s,complete:d,step:function(t,i){i.now=Math.round(t),"height"!==i.prop?"content-box"===l&&(a+=i.now):"content"!==o.options.heightStyle&&(i.now=Math.round(n-e.outerHeight()-a),a=0)}})):e.animate(this.hideProps,r,s,d):t.animate(this.showProps,r,s,d)},_toggleComplete:function(t){var e=t.oldPanel;e.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"),e.length&&(e.parent()[0].className=e.parent()[0].className),this._trigger("activate",null,t)}}),t.widget("ui.menu",{version:"1.11.4",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},items:"> *",menus:"ul",position:{my:"left-1 top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}),this.options.disabled&&this.element.addClass("ui-state-disabled").attr("aria-disabled","true"),this._on({"mousedown .ui-menu-item":function(t){t.preventDefault()},"click .ui-menu-item":function(e){var i=t(e.target);!this.mouseHandled&&i.not(".ui-state-disabled").length&&(this.select(e),e.isPropagationStopped()||(this.mouseHandled=!0),i.has(".ui-menu").length?this.expand(e):!this.element.is(":focus")&&t(this.document[0].activeElement).closest(".ui-menu").length&&(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(e){if(!this.previousFilter){var i=t(e.currentTarget);i.siblings(".ui-state-active").removeClass("ui-state-active"),this.focus(e,i)}},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(t,e){var i=this.active||this.element.find(this.options.items).eq(0);e||this.focus(t,i)},blur:function(e){this._delay(function(){t.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(e)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(t){this._closeOnDocumentClick(t)&&this.collapseAll(t),this.mouseHandled=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-menu-icons ui-front").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").removeUniqueId().removeClass("ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var e=t(this);e.data("ui-menu-submenu-carat")&&e.remove()}),this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(e){var i,n,s,r,o=!0;switch(e.keyCode){case t.ui.keyCode.PAGE_UP:this.previousPage(e);break;case t.ui.keyCode.PAGE_DOWN:this.nextPage(e);break;case t.ui.keyCode.HOME:this._move("first","first",e);break;case t.ui.keyCode.END:this._move("last","last",e);break;case t.ui.keyCode.UP:this.previous(e);break;case t.ui.keyCode.DOWN:this.next(e);break;case t.ui.keyCode.LEFT:this.collapse(e);break;case t.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(e);break;case t.ui.keyCode.ENTER:case t.ui.keyCode.SPACE:this._activate(e);break;case t.ui.keyCode.ESCAPE:this.collapse(e);break;default:o=!1,n=this.previousFilter||"",s=String.fromCharCode(e.keyCode),r=!1,clearTimeout(this.filterTimer),s===n?r=!0:s=n+s,i=this._filterMenuItems(s),i=r&&-1!==i.index(this.active.next())?this.active.nextAll(".ui-menu-item"):i,i.length||(s=String.fromCharCode(e.keyCode),i=this._filterMenuItems(s)),i.length?(this.focus(e,i),this.previousFilter=s,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter}o&&e.preventDefault()},_activate:function(t){this.active.is(".ui-state-disabled")||(this.active.is("[aria-haspopup='true']")?this.expand(t):this.select(t))},refresh:function(){var e,i,n=this,s=this.options.icons.submenu,r=this.element.find(this.options.menus);this.element.toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length),r.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-front").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var e=t(this),i=e.parent(),n=t("<span>").addClass("ui-menu-icon ui-icon "+s).data("ui-menu-submenu-carat",!0);i.attr("aria-haspopup","true").prepend(n),e.attr("aria-labelledby",i.attr("id"))}),e=r.add(this.element),i=e.find(this.options.items),i.not(".ui-menu-item").each(function(){var e=t(this);n._isDivider(e)&&e.addClass("ui-widget-content ui-menu-divider")}),i.not(".ui-menu-item, .ui-menu-divider").addClass("ui-menu-item").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),i.filter(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!t.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(t,e){"icons"===t&&this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(e.submenu),"disabled"===t&&this.element.toggleClass("ui-state-disabled",!!e).attr("aria-disabled",e),this._super(t,e)},focus:function(t,e){var i,n;this.blur(t,t&&"focus"===t.type),this._scrollIntoView(e),this.active=e.first(),n=this.active.addClass("ui-state-focus").removeClass("ui-state-active"),this.options.role&&this.element.attr("aria-activedescendant",n.attr("id")),this.active.parent().closest(".ui-menu-item").addClass("ui-state-active"),t&&"keydown"===t.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=e.children(".ui-menu"),i.length&&t&&/^mouse/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger("focus",t,{item:e})},_scrollIntoView:function(e){var i,n,s,r,o,a;this._hasScroll()&&(i=parseFloat(t.css(this.activeMenu[0],"borderTopWidth"))||0,n=parseFloat(t.css(this.activeMenu[0],"paddingTop"))||0,s=e.offset().top-this.activeMenu.offset().top-i-n,r=this.activeMenu.scrollTop(),o=this.activeMenu.height(),a=e.outerHeight(),0>s?this.activeMenu.scrollTop(r+s):s+a>o&&this.activeMenu.scrollTop(r+s-o+a))},blur:function(t,e){e||clearTimeout(this.timer),this.active&&(this.active.removeClass("ui-state-focus"),this.active=null,this._trigger("blur",t,{item:this.active}))},_startOpening:function(t){clearTimeout(this.timer),"true"===t.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close(),this._open(t)},this.delay))},_open:function(e){var i=t.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden","true"),e.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay(function(){var n=i?this.element:t(e&&e.target).closest(this.element.find(".ui-menu"));n.length||(n=this.element),this._close(n),this.blur(e),this.activeMenu=n},this.delay)},_close:function(t){t||(t=this.active?this.active.parent():this.element),t.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find(".ui-state-active").not(".ui-state-focus").removeClass("ui-state-active")},_closeOnDocumentClick:function(e){return!t(e.target).closest(".ui-menu").length},_isDivider:function(t){return!/[^\-\u2014\u2013\s]/.test(t.text())},collapse:function(t){var e=this.active&&this.active.parent().closest(".ui-menu-item",this.element);e&&e.length&&(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&&this.active.children(".ui-menu ").find(this.options.items).first();e&&e.length&&(this._open(e.parent()),this._delay(function(){this.focus(t,e)}))},next:function(t){this._move("next","first",t)},previous:function(t){this._move("prev","last",t)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(t,e,i){var n;this.active&&(n="first"===t||"last"===t?this.active["first"===t?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[t+"All"](".ui-menu-item").eq(0)),n&&n.length&&this.active||(n=this.activeMenu.find(this.options.items)[e]()),this.focus(i,n)},nextPage:function(e){var i,n,s;return this.active?void(this.isLastItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return i=t(this),i.offset().top-n-s<0}),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items)[this.active?"last":"first"]()))):void this.next(e)},previousPage:function(e){var i,n,s;return this.active?void(this.isFirstItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return i=t(this),i.offset().top-n+s>0}),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items).first()))):void this.next(e)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(e){this.active=this.active||t(e.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(e,!0),this._trigger("select",e,i)},_filterMenuItems:function(e){var i=e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),n=new RegExp("^"+i,"i");return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function(){return n.test(t.trim(t(this).text()))})}});t.widget("ui.autocomplete",{version:"1.11.4",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var e,i,n,s=this.element[0].nodeName.toLowerCase(),r="textarea"===s,o="input"===s;this.isMultiLine=r?!0:o?!1:this.element.prop("isContentEditable"),this.valueMethod=this.element[r||o?"val":"text"],this.isNewMenu=!0,this.element.addClass("ui-autocomplete-input").attr("autocomplete","off"),this._on(this.element,{keydown:function(s){if(this.element.prop("readOnly"))return e=!0,n=!0,void(i=!0);e=!1,n=!1,i=!1;var r=t.ui.keyCode;switch(s.keyCode){case r.PAGE_UP:e=!0,this._move("previousPage",s);break;case r.PAGE_DOWN:e=!0,this._move("nextPage",s);break;case r.UP:e=!0,this._keyEvent("previous",s);break;case r.DOWN:e=!0,this._keyEvent("next",s);break;case r.ENTER:this.menu.active&&(e=!0,s.preventDefault(),this.menu.select(s));break;case r.TAB:this.menu.active&&this.menu.select(s);break;case r.ESCAPE:this.menu.element.is(":visible")&&(this.isMultiLine||this._value(this.term),this.close(s),s.preventDefault());break;default:i=!0,this._searchTimeout(s)}},keypress:function(n){if(e)return e=!1,void((!this.isMultiLine||this.menu.element.is(":visible"))&&n.preventDefault());if(!i){var s=t.ui.keyCode;switch(n.keyCode){case s.PAGE_UP:this._move("previousPage",n);break;case s.PAGE_DOWN:this._move("nextPage",n);break;case s.UP:this._keyEvent("previous",n);break;case s.DOWN:this._keyEvent("next",n)}}},input:function(t){return n?(n=!1,void t.preventDefault()):void this._searchTimeout(t)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(t){return this.cancelBlur?void delete this.cancelBlur:(clearTimeout(this.searching),this.close(t),void this._change(t))}}),this._initSource(),this.menu=t("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({role:null}).hide().menu("instance"),this._on(this.menu.element,{mousedown:function(e){e.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var i=this.menu.element[0];t(e.target).closest(".ui-menu-item").length||this._delay(function(){var e=this;this.document.one("mousedown",function(n){n.target===e.element[0]||n.target===i||t.contains(i,n.target)||e.close()})})},menufocus:function(e,i){var n,s;return this.isNewMenu&&(this.isNewMenu=!1,e.originalEvent&&/^mouse/.test(e.originalEvent.type))?(this.menu.blur(),void this.document.one("mousemove",function(){t(e.target).trigger(e.originalEvent)})):(s=i.item.data("ui-autocomplete-item"),!1!==this._trigger("focus",e,{item:s})&&e.originalEvent&&/^key/.test(e.originalEvent.type)&&this._value(s.value),n=i.item.attr("aria-label")||s.value,void(n&&t.trim(n).length&&(this.liveRegion.children().hide(),t("<div>").text(n).appendTo(this.liveRegion))))},menuselect:function(t,e){var i=e.item.data("ui-autocomplete-item"),n=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n,this.selectedItem=i})),!1!==this._trigger("select",t,{item:i})&&this._value(i.value),this.term=this._value(),this.close(t),this.selectedItem=i}}),this.liveRegion=t("<span>",{role:"status","aria-live":"assertive","aria-relevant":"additions"}).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(t,e){this._super(t,e),"source"===t&&this._initSource(),"appendTo"===t&&this.menu.element.appendTo(this._appendTo()),"disabled"===t&&e&&this.xhr&&this.xhr.abort()},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(".ui-front")),e.length||(e=this.document[0].body),e},_initSource:function(){var e,i,n=this;t.isArray(this.options.source)?(e=this.options.source,this.source=function(i,n){n(t.ui.autocomplete.filter(e,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(e,s){n.xhr&&n.xhr.abort(),n.xhr=t.ajax({url:i,data:e,dataType:"json",success:function(t){s(t)},error:function(){s([])}})}):this.source=this.options.source},_searchTimeout:function(t){clearTimeout(this.searching),this.searching=this._delay(function(){var e=this.term===this._value(),i=this.menu.element.is(":visible"),n=t.altKey||t.ctrlKey||t.metaKey||t.shiftKey;(!e||e&&!i&&!n)&&(this.selectedItem=null,this.search(null,t))},this.options.delay)},search:function(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length<this.options.minLength?this.close(e):this._trigger("search",e)!==!1?this._search(t):void 0},_search:function(t){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:t},this._response())},_response:function(){var e=++this.requestIndex;return t.proxy(function(t){e===this.requestIndex&&this.__response(t),this.pending--,this.pending||this.element.removeClass("ui-autocomplete-loading")},this)},__response:function(t){t&&(t=this._normalize(t)),this._trigger("response",null,{content:t}),!this.options.disabled&&t&&t.length&&!this.cancelSearch?(this._suggest(t),this._trigger("open")):this._close()},close:function(t){this.cancelSearch=!0,this._close(t)},_close:function(t){this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",t))},_change:function(t){this.previous!==this._value()&&this._trigger("change",t,{item:this.selectedItem})},_normalize:function(e){return e.length&&e[0].label&&e[0].value?e:t.map(e,function(e){return"string"==typeof e?{label:e,value:e}:t.extend({},e,{label:e.label||e.value,value:e.value||e.label})})},_suggest:function(e){var i=this.menu.element.empty();this._renderMenu(i,e),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(t.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var t=this.menu.element;t.outerWidth(Math.max(t.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(e,i){var n=this;t.each(i,function(t,i){n._renderItemData(e,i)})},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-autocomplete-item",e)},_renderItem:function(e,i){return t("<li>").text(i.label).appendTo(e)},_move:function(t,e){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(t)||this.menu.isLastItem()&&/^next/.test(t)?(this.isMultiLine||this._value(this.term),void this.menu.blur()):void this.menu[t](e):void this.search(null,e)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(t,e){(!this.isMultiLine||this.menu.element.is(":visible"))&&(this._move(t,e),e.preventDefault())}}),t.extend(t.ui.autocomplete,{escapeRegex:function(t){return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(e,i){var n=new RegExp(t.ui.autocomplete.escapeRegex(i),"i");return t.grep(e,function(t){return n.test(t.label||t.value||t)})}}),t.widget("ui.autocomplete",t.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(t){return t+(t>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var i;this._superApply(arguments),this.options.disabled||this.cancelSearch||(i=e&&e.length?this.options.messages.results(e.length):this.options.messages.noResults,this.liveRegion.children().hide(),t("<div>").text(i).appendTo(this.liveRegion))}});var d,f=(t.ui.autocomplete,"ui-button ui-widget ui-state-default ui-corner-all"),p="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",m=function(){var e=t(this);setTimeout(function(){e.find(":ui-button").button("refresh")},1)},g=function(e){var i=e.name,n=e.form,s=t([]);return i&&(i=i.replace(/'/g,"\\'"),s=n?t(n).find("[name='"+i+"'][type=radio]"):t("[name='"+i+"'][type=radio]",e.ownerDocument).filter(function(){return!this.form})),s};t.widget("ui.button",{version:"1.11.4",defaultElement:"<button>",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset"+this.eventNamespace).bind("reset"+this.eventNamespace,m),"boolean"!=typeof this.options.disabled?this.options.disabled=!!this.element.prop("disabled"):this.element.prop("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var e=this,i=this.options,n="checkbox"===this.type||"radio"===this.type,s=n?"":"ui-state-active";null===i.label&&(i.label="input"===this.type?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(f).attr("role","button").bind("mouseenter"+this.eventNamespace,function(){i.disabled||this===d&&t(this).addClass("ui-state-active")}).bind("mouseleave"+this.eventNamespace,function(){i.disabled||t(this).removeClass(s)}).bind("click"+this.eventNamespace,function(t){i.disabled&&(t.preventDefault(),t.stopImmediatePropagation())}),this._on({focus:function(){this.buttonElement.addClass("ui-state-focus")},blur:function(){this.buttonElement.removeClass("ui-state-focus")}}),n&&this.element.bind("change"+this.eventNamespace,function(){e.refresh()}),"checkbox"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){return i.disabled?!1:void 0}):"radio"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){if(i.disabled)return!1;t(this).addClass("ui-state-active"),e.buttonElement.attr("aria-pressed","true");var n=e.element[0];g(n).not(n).map(function(){return t(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown"+this.eventNamespace,function(){return i.disabled?!1:(t(this).addClass("ui-state-active"),d=this,void e.document.one("mouseup",function(){d=null}))}).bind("mouseup"+this.eventNamespace,function(){return i.disabled?!1:void t(this).removeClass("ui-state-active")}).bind("keydown"+this.eventNamespace,function(e){return i.disabled?!1:void((e.keyCode===t.ui.keyCode.SPACE||e.keyCode===t.ui.keyCode.ENTER)&&t(this).addClass("ui-state-active"))}).bind("keyup"+this.eventNamespace+" blur"+this.eventNamespace,function(){t(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(e){e.keyCode===t.ui.keyCode.SPACE&&t(this).click()})),this._setOption("disabled",i.disabled),this._resetButton()},_determineButtonType:function(){var t,e,i;this.element.is("[type=checkbox]")?this.type="checkbox":this.element.is("[type=radio]")?this.type="radio":this.element.is("input")?this.type="input":this.type="button","checkbox"===this.type||"radio"===this.type?(t=this.element.parents().last(),e="label[for='"+this.element.attr("id")+"']",this.buttonElement=t.find(e),this.buttonElement.length||(t=t.length?t.siblings():this.element.siblings(),this.buttonElement=t.filter(e),this.buttonElement.length||(this.buttonElement=t.find(e))),this.element.addClass("ui-helper-hidden-accessible"),i=this.element.is(":checked"),i&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.prop("aria-pressed",i)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(f+" ui-state-active "+p).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title")},_setOption:function(t,e){return this._super(t,e),"disabled"===t?(this.widget().toggleClass("ui-state-disabled",!!e),this.element.prop("disabled",!!e),void(e&&("checkbox"===this.type||"radio"===this.type?this.buttonElement.removeClass("ui-state-focus"):this.buttonElement.removeClass("ui-state-focus ui-state-active")))):void this._resetButton()},refresh:function(){var e=this.element.is("input, button")?this.element.is(":disabled"):this.element.hasClass("ui-button-disabled");e!==this.options.disabled&&this._setOption("disabled",e),"radio"===this.type?g(this.element[0]).each(function(){t(this).is(":checked")?t(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):t(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):"checkbox"===this.type&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if("input"===this.type)return void(this.options.label&&this.element.val(this.options.label));var e=this.buttonElement.removeClass(p),i=t("<span></span>",this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(e.empty()).text(),n=this.options.icons,s=n.primary&&n.secondary,r=[];n.primary||n.secondary?(this.options.text&&r.push("ui-button-text-icon"+(s?"s":n.primary?"-primary":"-secondary")),n.primary&&e.prepend("<span class='ui-button-icon-primary ui-icon "+n.primary+"'></span>"),n.secondary&&e.append("<span class='ui-button-icon-secondary ui-icon "+n.secondary+"'></span>"),this.options.text||(r.push(s?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||e.attr("title",t.trim(i)))):r.push("ui-button-text-only"),e.addClass(r.join(" "))}}),t.widget("ui.buttonset",{version:"1.11.4",
options:{items:"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(t,e){"disabled"===t&&this.buttons.button("option",t,e),this._super(t,e)},refresh:function(){var e="rtl"===this.element.css("direction"),i=this.element.find(this.options.items),n=i.filter(":ui-button");i.not(":ui-button").button(),n.button("refresh"),this.buttons=i.map(function(){return t(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(e?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(e?"ui-corner-left":"ui-corner-right").end().end()},_destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return t(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")}});t.ui.button;t.extend(t.ui,{datepicker:{version:"1.11.4"}});var v;t.extend(s.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(t){return a(this._defaults,t||{}),this},_attachDatepicker:function(e,i){var n,s,r;n=e.nodeName.toLowerCase(),s="div"===n||"span"===n,e.id||(this.uuid+=1,e.id="dp"+this.uuid),r=this._newInst(t(e),s),r.settings=t.extend({},i||{}),"input"===n?this._connectDatepicker(e,r):s&&this._inlineDatepicker(e,r)},_newInst:function(e,i){var n=e[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1");return{id:n,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?r(t("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv}},_connectDatepicker:function(e,i){var n=t(e);i.append=t([]),i.trigger=t([]),n.hasClass(this.markerClassName)||(this._attachments(n,i),n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp),this._autoSize(i),t.data(e,"datepicker",i),i.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,i){var n,s,r,o=this._get(i,"appendText"),a=this._get(i,"isRTL");i.append&&i.append.remove(),o&&(i.append=t("<span class='"+this._appendClass+"'>"+o+"</span>"),e[a?"before":"after"](i.append)),e.unbind("focus",this._showDatepicker),i.trigger&&i.trigger.remove(),n=this._get(i,"showOn"),("focus"===n||"both"===n)&&e.focus(this._showDatepicker),("button"===n||"both"===n)&&(s=this._get(i,"buttonText"),r=this._get(i,"buttonImage"),i.trigger=t(this._get(i,"buttonImageOnly")?t("<img/>").addClass(this._triggerClass).attr({src:r,alt:s,title:s}):t("<button type='button'></button>").addClass(this._triggerClass).html(r?t("<img/>").attr({src:r,alt:s,title:s}):s)),e[a?"before":"after"](i.trigger),i.trigger.click(function(){return t.datepicker._datepickerShowing&&t.datepicker._lastInput===e[0]?t.datepicker._hideDatepicker():t.datepicker._datepickerShowing&&t.datepicker._lastInput!==e[0]?(t.datepicker._hideDatepicker(),t.datepicker._showDatepicker(e[0])):t.datepicker._showDatepicker(e[0]),!1}))},_autoSize:function(t){if(this._get(t,"autoSize")&&!t.inline){var e,i,n,s,r=new Date(2009,11,20),o=this._get(t,"dateFormat");o.match(/[DM]/)&&(e=function(t){for(i=0,n=0,s=0;s<t.length;s++)t[s].length>i&&(i=t[s].length,n=s);return n},r.setMonth(e(this._get(t,o.match(/MM/)?"monthNames":"monthNamesShort"))),r.setDate(e(this._get(t,o.match(/DD/)?"dayNames":"dayNamesShort"))+20-r.getDay())),t.input.attr("size",this._formatDate(t,r).length)}},_inlineDatepicker:function(e,i){var n=t(e);n.hasClass(this.markerClassName)||(n.addClass(this.markerClassName).append(i.dpDiv),t.data(e,"datepicker",i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(e),i.dpDiv.css("display","block"))},_dialogDatepicker:function(e,i,n,s,r){var o,l,u,h,c,d=this._dialogInst;return d||(this.uuid+=1,o="dp"+this.uuid,this._dialogInput=t("<input type='text' id='"+o+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.keydown(this._doKeyDown),t("body").append(this._dialogInput),d=this._dialogInst=this._newInst(this._dialogInput,!1),d.settings={},t.data(this._dialogInput[0],"datepicker",d)),a(d.settings,s||{}),i=i&&i.constructor===Date?this._formatDate(d,i):i,this._dialogInput.val(i),this._pos=r?r.length?r:[r.pageX,r.pageY]:null,this._pos||(l=document.documentElement.clientWidth,u=document.documentElement.clientHeight,h=document.documentElement.scrollLeft||document.body.scrollLeft,c=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[l/2-100+h,u/2-150+c]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),d.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),t.blockUI&&t.blockUI(this.dpDiv),t.data(this._dialogInput[0],"datepicker",d),this},_destroyDatepicker:function(e){var i,n=t(e),s=t.data(e,"datepicker");n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),t.removeData(e,"datepicker"),"input"===i?(s.append.remove(),s.trigger.remove(),n.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):("div"===i||"span"===i)&&n.removeClass(this.markerClassName).empty(),v===s&&(v=null))},_enableDatepicker:function(e){var i,n,s=t(e),r=t.data(e,"datepicker");s.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!1,r.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""})):("div"===i||"span"===i)&&(n=s.children("."+this._inlineClass),n.children().removeClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}))},_disableDatepicker:function(e){var i,n,s=t(e),r=t.data(e,"datepicker");s.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!0,r.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"})):("div"===i||"span"===i)&&(n=s.children("."+this._inlineClass),n.children().addClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}),this._disabledInputs[this._disabledInputs.length]=e)},_isDisabledDatepicker:function(t){if(!t)return!1;for(var e=0;e<this._disabledInputs.length;e++)if(this._disabledInputs[e]===t)return!0;return!1},_getInst:function(e){try{return t.data(e,"datepicker")}catch(i){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,i,n){var s,r,o,l,u=this._getInst(e);return 2===arguments.length&&"string"==typeof i?"defaults"===i?t.extend({},t.datepicker._defaults):u?"all"===i?t.extend({},u.settings):this._get(u,i):null:(s=i||{},"string"==typeof i&&(s={},s[i]=n),void(u&&(this._curInst===u&&this._hideDatepicker(),r=this._getDateDatepicker(e,!0),o=this._getMinMaxDate(u,"min"),l=this._getMinMaxDate(u,"max"),a(u.settings,s),null!==o&&void 0!==s.dateFormat&&void 0===s.minDate&&(u.settings.minDate=this._formatDate(u,o)),null!==l&&void 0!==s.dateFormat&&void 0===s.maxDate&&(u.settings.maxDate=this._formatDate(u,l)),"disabled"in s&&(s.disabled?this._disableDatepicker(e):this._enableDatepicker(e)),this._attachments(t(e),u),this._autoSize(u),this._setDate(u,r),this._updateAlternate(u),this._updateDatepicker(u))))},_changeDatepicker:function(t,e,i){this._optionDatepicker(t,e,i)},_refreshDatepicker:function(t){var e=this._getInst(t);e&&this._updateDatepicker(e)},_setDateDatepicker:function(t,e){var i=this._getInst(t);i&&(this._setDate(i,e),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(t,e){var i=this._getInst(t);return i&&!i.inline&&this._setDateFromField(i,e),i?this._getDate(i):null},_doKeyDown:function(e){var i,n,s,r=t.datepicker._getInst(e.target),o=!0,a=r.dpDiv.is(".ui-datepicker-rtl");if(r._keyEvent=!0,t.datepicker._datepickerShowing)switch(e.keyCode){case 9:t.datepicker._hideDatepicker(),o=!1;break;case 13:return s=t("td."+t.datepicker._dayOverClass+":not(."+t.datepicker._currentClass+")",r.dpDiv),s[0]&&t.datepicker._selectDay(e.target,r.selectedMonth,r.selectedYear,s[0]),i=t.datepicker._get(r,"onSelect"),i?(n=t.datepicker._formatDate(r),i.apply(r.input?r.input[0]:null,[n,r])):t.datepicker._hideDatepicker(),!1;case 27:t.datepicker._hideDatepicker();break;case 33:t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(r,"stepBigMonths"):-t.datepicker._get(r,"stepMonths"),"M");break;case 34:t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(r,"stepBigMonths"):+t.datepicker._get(r,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&t.datepicker._clearDate(e.target),o=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&t.datepicker._gotoToday(e.target),o=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,a?1:-1,"D"),o=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(r,"stepBigMonths"):-t.datepicker._get(r,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,-7,"D"),o=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,a?-1:1,"D"),o=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(r,"stepBigMonths"):+t.datepicker._get(r,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,7,"D"),o=e.ctrlKey||e.metaKey;break;default:o=!1}else 36===e.keyCode&&e.ctrlKey?t.datepicker._showDatepicker(this):o=!1;o&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var i,n,s=t.datepicker._getInst(e.target);return t.datepicker._get(s,"constrainInput")?(i=t.datepicker._possibleChars(t.datepicker._get(s,"dateFormat")),n=String.fromCharCode(null==e.charCode?e.keyCode:e.charCode),e.ctrlKey||e.metaKey||" ">n||!i||i.indexOf(n)>-1):void 0},_doKeyUp:function(e){var i,n=t.datepicker._getInst(e.target);if(n.input.val()!==n.lastVal)try{i=t.datepicker.parseDate(t.datepicker._get(n,"dateFormat"),n.input?n.input.val():null,t.datepicker._getFormatConfig(n)),i&&(t.datepicker._setDateFromField(n),t.datepicker._updateAlternate(n),t.datepicker._updateDatepicker(n))}catch(s){}return!0},_showDatepicker:function(e){if(e=e.target||e,"input"!==e.nodeName.toLowerCase()&&(e=t("input",e.parentNode)[0]),!t.datepicker._isDisabledDatepicker(e)&&t.datepicker._lastInput!==e){var i,s,r,o,l,u,h;i=t.datepicker._getInst(e),t.datepicker._curInst&&t.datepicker._curInst!==i&&(t.datepicker._curInst.dpDiv.stop(!0,!0),i&&t.datepicker._datepickerShowing&&t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])),s=t.datepicker._get(i,"beforeShow"),r=s?s.apply(e,[e,i]):{},r!==!1&&(a(i.settings,r),i.lastVal=null,t.datepicker._lastInput=e,t.datepicker._setDateFromField(i),t.datepicker._inDialog&&(e.value=""),t.datepicker._pos||(t.datepicker._pos=t.datepicker._findPos(e),t.datepicker._pos[1]+=e.offsetHeight),o=!1,t(e).parents().each(function(){return o|="fixed"===t(this).css("position"),!o}),l={left:t.datepicker._pos[0],top:t.datepicker._pos[1]},t.datepicker._pos=null,i.dpDiv.empty(),i.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),t.datepicker._updateDatepicker(i),l=t.datepicker._checkOffset(i,l,o),i.dpDiv.css({position:t.datepicker._inDialog&&t.blockUI?"static":o?"fixed":"absolute",display:"none",left:l.left+"px",top:l.top+"px"}),i.inline||(u=t.datepicker._get(i,"showAnim"),h=t.datepicker._get(i,"duration"),i.dpDiv.css("z-index",n(t(e))+1),t.datepicker._datepickerShowing=!0,t.effects&&t.effects.effect[u]?i.dpDiv.show(u,t.datepicker._get(i,"showOptions"),h):i.dpDiv[u||"show"](u?h:null),t.datepicker._shouldFocusInput(i)&&i.input.focus(),t.datepicker._curInst=i))}},_updateDatepicker:function(e){this.maxRows=4,v=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i,n=this._getNumberOfMonths(e),s=n[1],r=17,a=e.dpDiv.find("."+this._dayOverClass+" a");a.length>0&&o.apply(a.get(0)),e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),s>1&&e.dpDiv.addClass("ui-datepicker-multi-"+s).css("width",r*s+"em"),e.dpDiv[(1!==n[0]||1!==n[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e===t.datepicker._curInst&&t.datepicker._datepickerShowing&&t.datepicker._shouldFocusInput(e)&&e.input.focus(),e.yearshtml&&(i=e.yearshtml,setTimeout(function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),i=e.yearshtml=null},0))},_shouldFocusInput:function(t){return t.input&&t.input.is(":visible")&&!t.input.is(":disabled")&&!t.input.is(":focus")},_checkOffset:function(e,i,n){var s=e.dpDiv.outerWidth(),r=e.dpDiv.outerHeight(),o=e.input?e.input.outerWidth():0,a=e.input?e.input.outerHeight():0,l=document.documentElement.clientWidth+(n?0:t(document).scrollLeft()),u=document.documentElement.clientHeight+(n?0:t(document).scrollTop());return i.left-=this._get(e,"isRTL")?s-o:0,i.left-=n&&i.left===e.input.offset().left?t(document).scrollLeft():0,i.top-=n&&i.top===e.input.offset().top+a?t(document).scrollTop():0,i.left-=Math.min(i.left,i.left+s>l&&l>s?Math.abs(i.left+s-l):0),i.top-=Math.min(i.top,i.top+r>u&&u>r?Math.abs(r+a):0),i},_findPos:function(e){for(var i,n=this._getInst(e),s=this._get(n,"isRTL");e&&("hidden"===e.type||1!==e.nodeType||t.expr.filters.hidden(e));)e=e[s?"previousSibling":"nextSibling"];return i=t(e).offset(),[i.left,i.top]},_hideDatepicker:function(e){var i,n,s,r,o=this._curInst;!o||e&&o!==t.data(e,"datepicker")||this._datepickerShowing&&(i=this._get(o,"showAnim"),n=this._get(o,"duration"),s=function(){t.datepicker._tidyDialog(o)},t.effects&&(t.effects.effect[i]||t.effects[i])?o.dpDiv.hide(i,t.datepicker._get(o,"showOptions"),n,s):o.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?n:null,s),i||s(),this._datepickerShowing=!1,r=this._get(o,"onClose"),r&&r.apply(o.input?o.input[0]:null,[o.input?o.input.val():"",o]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),t.blockUI&&(t.unblockUI(),t("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(t){t.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(t.datepicker._curInst){var i=t(e.target),n=t.datepicker._getInst(i[0]);(i[0].id!==t.datepicker._mainDivId&&0===i.parents("#"+t.datepicker._mainDivId).length&&!i.hasClass(t.datepicker.markerClassName)&&!i.closest("."+t.datepicker._triggerClass).length&&t.datepicker._datepickerShowing&&(!t.datepicker._inDialog||!t.blockUI)||i.hasClass(t.datepicker.markerClassName)&&t.datepicker._curInst!==n)&&t.datepicker._hideDatepicker()}},_adjustDate:function(e,i,n){var s=t(e),r=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(r,i+("M"===n?this._get(r,"showCurrentAtPos"):0),n),this._updateDatepicker(r))},_gotoToday:function(e){var i,n=t(e),s=this._getInst(n[0]);this._get(s,"gotoCurrent")&&s.currentDay?(s.selectedDay=s.currentDay,s.drawMonth=s.selectedMonth=s.currentMonth,s.drawYear=s.selectedYear=s.currentYear):(i=new Date,s.selectedDay=i.getDate(),s.drawMonth=s.selectedMonth=i.getMonth(),s.drawYear=s.selectedYear=i.getFullYear()),this._notifyChange(s),this._adjustDate(n)},_selectMonthYear:function(e,i,n){var s=t(e),r=this._getInst(s[0]);r["selected"+("M"===n?"Month":"Year")]=r["draw"+("M"===n?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(r),this._adjustDate(s)},_selectDay:function(e,i,n,s){var r,o=t(e);t(s).hasClass(this._unselectableClass)||this._isDisabledDatepicker(o[0])||(r=this._getInst(o[0]),r.selectedDay=r.currentDay=t("a",s).html(),r.selectedMonth=r.currentMonth=i,r.selectedYear=r.currentYear=n,this._selectDate(e,this._formatDate(r,r.currentDay,r.currentMonth,r.currentYear)))},_clearDate:function(e){var i=t(e);this._selectDate(i,"")},_selectDate:function(e,i){var n,s=t(e),r=this._getInst(s[0]);i=null!=i?i:this._formatDate(r),r.input&&r.input.val(i),this._updateAlternate(r),n=this._get(r,"onSelect"),n?n.apply(r.input?r.input[0]:null,[i,r]):r.input&&r.input.trigger("change"),r.inline?this._updateDatepicker(r):(this._hideDatepicker(),this._lastInput=r.input[0],"object"!=typeof r.input[0]&&r.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var i,n,s,r=this._get(e,"altField");r&&(i=this._get(e,"altFormat")||this._get(e,"dateFormat"),n=this._getDate(e),s=this.formatDate(i,n,this._getFormatConfig(e)),t(r).each(function(){t(this).val(s)}))},noWeekends:function(t){var e=t.getDay();return[e>0&&6>e,""]},iso8601Week:function(t){var e,i=new Date(t.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),e=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((e-i)/864e5)/7)+1},parseDate:function(e,i,n){if(null==e||null==i)throw"Invalid arguments";if(i="object"==typeof i?i.toString():i+"",""===i)return null;var s,r,o,a,l=0,u=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff,h="string"!=typeof u?u:(new Date).getFullYear()%100+parseInt(u,10),c=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,d=(n?n.dayNames:null)||this._defaults.dayNames,f=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,p=(n?n.monthNames:null)||this._defaults.monthNames,m=-1,g=-1,v=-1,y=-1,_=!1,b=function(t){var i=s+1<e.length&&e.charAt(s+1)===t;return i&&s++,i},x=function(t){var e=b(t),n="@"===t?14:"!"===t?20:"y"===t&&e?4:"o"===t?3:2,s="y"===t?n:1,r=new RegExp("^\\d{"+s+","+n+"}"),o=i.substring(l).match(r);if(!o)throw"Missing number at position "+l;return l+=o[0].length,parseInt(o[0],10)},w=function(e,n,s){var r=-1,o=t.map(b(e)?s:n,function(t,e){return[[e,t]]}).sort(function(t,e){return-(t[1].length-e[1].length)});if(t.each(o,function(t,e){var n=e[1];return i.substr(l,n.length).toLowerCase()===n.toLowerCase()?(r=e[0],l+=n.length,!1):void 0}),-1!==r)return r+1;throw"Unknown name at position "+l},M=function(){if(i.charAt(l)!==e.charAt(s))throw"Unexpected literal at position "+l;l++};for(s=0;s<e.length;s++)if(_)"'"!==e.charAt(s)||b("'")?M():_=!1;else switch(e.charAt(s)){case"d":v=x("d");break;case"D":w("D",c,d);break;case"o":y=x("o");break;case"m":g=x("m");break;case"M":g=w("M",f,p);break;case"y":m=x("y");break;case"@":a=new Date(x("@")),m=a.getFullYear(),g=a.getMonth()+1,v=a.getDate();break;case"!":a=new Date((x("!")-this._ticksTo1970)/1e4),m=a.getFullYear(),g=a.getMonth()+1,v=a.getDate();break;case"'":b("'")?M():_=!0;break;default:M()}if(l<i.length&&(o=i.substr(l),!/^\s+/.test(o)))throw"Extra/unparsed characters found in date: "+o;if(-1===m?m=(new Date).getFullYear():100>m&&(m+=(new Date).getFullYear()-(new Date).getFullYear()%100+(h>=m?0:-100)),y>-1)for(g=1,v=y;;){if(r=this._getDaysInMonth(m,g-1),r>=v)break;g++,v-=r}if(a=this._daylightSavingAdjust(new Date(m,g-1,v)),a.getFullYear()!==m||a.getMonth()+1!==g||a.getDate()!==v)throw"Invalid date";return a},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*60*60*1e7,formatDate:function(t,e,i){if(!e)return"";var n,s=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,r=(i?i.dayNames:null)||this._defaults.dayNames,o=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,a=(i?i.monthNames:null)||this._defaults.monthNames,l=function(e){var i=n+1<t.length&&t.charAt(n+1)===e;return i&&n++,i},u=function(t,e,i){var n=""+e;if(l(t))for(;n.length<i;)n="0"+n;return n},h=function(t,e,i,n){return l(t)?n[e]:i[e]},c="",d=!1;if(e)for(n=0;n<t.length;n++)if(d)"'"!==t.charAt(n)||l("'")?c+=t.charAt(n):d=!1;else switch(t.charAt(n)){case"d":c+=u("d",e.getDate(),2);break;case"D":c+=h("D",e.getDay(),s,r);break;case"o":c+=u("o",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case"m":c+=u("m",e.getMonth()+1,2);break;case"M":c+=h("M",e.getMonth(),o,a);break;case"y":c+=l("y")?e.getFullYear():(e.getYear()%100<10?"0":"")+e.getYear()%100;break;case"@":c+=e.getTime();break;case"!":c+=1e4*e.getTime()+this._ticksTo1970;break;case"'":l("'")?c+="'":d=!0;break;default:c+=t.charAt(n)}return c},_possibleChars:function(t){var e,i="",n=!1,s=function(i){var n=e+1<t.length&&t.charAt(e+1)===i;return n&&e++,n};for(e=0;e<t.length;e++)if(n)"'"!==t.charAt(e)||s("'")?i+=t.charAt(e):n=!1;else switch(t.charAt(e)){case"d":case"m":case"y":case"@":i+="0123456789";break;case"D":case"M":return null;case"'":s("'")?i+="'":n=!0;break;default:i+=t.charAt(e)}return i},_get:function(t,e){return void 0!==t.settings[e]?t.settings[e]:this._defaults[e]},_setDateFromField:function(t,e){if(t.input.val()!==t.lastVal){var i=this._get(t,"dateFormat"),n=t.lastVal=t.input?t.input.val():null,s=this._getDefaultDate(t),r=s,o=this._getFormatConfig(t);try{r=this.parseDate(i,n,o)||s}catch(a){n=e?"":n}t.selectedDay=r.getDate(),t.drawMonth=t.selectedMonth=r.getMonth(),t.drawYear=t.selectedYear=r.getFullYear(),t.currentDay=n?r.getDate():0,t.currentMonth=n?r.getMonth():0,t.currentYear=n?r.getFullYear():0,this._adjustInstDate(t)}},_getDefaultDate:function(t){return this._restrictMinMax(t,this._determineDate(t,this._get(t,"defaultDate"),new Date))},_determineDate:function(e,i,n){var s=function(t){var e=new Date;return e.setDate(e.getDate()+t),e},r=function(i){try{return t.datepicker.parseDate(t.datepicker._get(e,"dateFormat"),i,t.datepicker._getFormatConfig(e))}catch(n){}for(var s=(i.toLowerCase().match(/^c/)?t.datepicker._getDate(e):null)||new Date,r=s.getFullYear(),o=s.getMonth(),a=s.getDate(),l=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,u=l.exec(i);u;){switch(u[2]||"d"){case"d":case"D":a+=parseInt(u[1],10);break;case"w":case"W":a+=7*parseInt(u[1],10);break;case"m":case"M":o+=parseInt(u[1],10),a=Math.min(a,t.datepicker._getDaysInMonth(r,o));break;case"y":case"Y":r+=parseInt(u[1],10),a=Math.min(a,t.datepicker._getDaysInMonth(r,o))}u=l.exec(i)}return new Date(r,o,a)},o=null==i||""===i?n:"string"==typeof i?r(i):"number"==typeof i?isNaN(i)?n:s(i):new Date(i.getTime());return o=o&&"Invalid Date"===o.toString()?n:o,o&&(o.setHours(0),o.setMinutes(0),o.setSeconds(0),o.setMilliseconds(0)),this._daylightSavingAdjust(o)},_daylightSavingAdjust:function(t){return t?(t.setHours(t.getHours()>12?t.getHours()+2:0),t):null},_setDate:function(t,e,i){var n=!e,s=t.selectedMonth,r=t.selectedYear,o=this._restrictMinMax(t,this._determineDate(t,e,new Date));t.selectedDay=t.currentDay=o.getDate(),t.drawMonth=t.selectedMonth=t.currentMonth=o.getMonth(),t.drawYear=t.selectedYear=t.currentYear=o.getFullYear(),s===t.selectedMonth&&r===t.selectedYear||i||this._notifyChange(t),this._adjustInstDate(t),t.input&&t.input.val(n?"":this._formatDate(t))},_getDate:function(t){var e=!t.currentYear||t.input&&""===t.input.val()?null:this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return e},_attachHandlers:function(e){var i=this._get(e,"stepMonths"),n="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){t.datepicker._adjustDate(n,-i,"M")},next:function(){t.datepicker._adjustDate(n,+i,"M")},hide:function(){t.datepicker._hideDatepicker()},today:function(){t.datepicker._gotoToday(n)},selectDay:function(){return t.datepicker._selectDay(n,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return t.datepicker._selectMonthYear(n,this,"M"),!1},selectYear:function(){return t.datepicker._selectMonthYear(n,this,"Y"),!1}};t(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(t){var e,i,n,s,r,o,a,l,u,h,c,d,f,p,m,g,v,y,_,b,x,w,M,D,k,S,C,I,T,E,A,F,P,N,O,z,R,L,H,j=new Date,q=this._daylightSavingAdjust(new Date(j.getFullYear(),j.getMonth(),j.getDate())),W=this._get(t,"isRTL"),B=this._get(t,"showButtonPanel"),Y=this._get(t,"hideIfNoPrevNext"),U=this._get(t,"navigationAsDateFormat"),V=this._getNumberOfMonths(t),X=this._get(t,"showCurrentAtPos"),K=this._get(t,"stepMonths"),$=1!==V[0]||1!==V[1],G=this._daylightSavingAdjust(t.currentDay?new Date(t.currentYear,t.currentMonth,t.currentDay):new Date(9999,9,9)),Z=this._getMinMaxDate(t,"min"),Q=this._getMinMaxDate(t,"max"),J=t.drawMonth-X,tt=t.drawYear;if(0>J&&(J+=12,tt--),Q)for(e=this._daylightSavingAdjust(new Date(Q.getFullYear(),Q.getMonth()-V[0]*V[1]+1,Q.getDate())),e=Z&&Z>e?Z:e;this._daylightSavingAdjust(new Date(tt,J,1))>e;)J--,0>J&&(J=11,tt--);for(t.drawMonth=J,t.drawYear=tt,i=this._get(t,"prevText"),i=U?this.formatDate(i,this._daylightSavingAdjust(new Date(tt,J-K,1)),this._getFormatConfig(t)):i,n=this._canAdjustMonth(t,-1,tt,J)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"e":"w")+"'>"+i+"</span></a>":Y?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"e":"w")+"'>"+i+"</span></a>",s=this._get(t,"nextText"),s=U?this.formatDate(s,this._daylightSavingAdjust(new Date(tt,J+K,1)),this._getFormatConfig(t)):s,r=this._canAdjustMonth(t,1,tt,J)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"w":"e")+"'>"+s+"</span></a>":Y?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"w":"e")+"'>"+s+"</span></a>",o=this._get(t,"currentText"),a=this._get(t,"gotoCurrent")&&t.currentDay?G:q,o=U?this.formatDate(o,a,this._getFormatConfig(t)):o,l=t.inline?"":"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(t,"closeText")+"</button>",u=B?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(W?l:"")+(this._isInRange(t,a)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+o+"</button>":"")+(W?"":l)+"</div>":"",h=parseInt(this._get(t,"firstDay"),10),h=isNaN(h)?0:h,c=this._get(t,"showWeek"),d=this._get(t,"dayNames"),f=this._get(t,"dayNamesMin"),p=this._get(t,"monthNames"),m=this._get(t,"monthNamesShort"),g=this._get(t,"beforeShowDay"),v=this._get(t,"showOtherMonths"),y=this._get(t,"selectOtherMonths"),_=this._getDefaultDate(t),b="",w=0;w<V[0];w++){for(M="",this.maxRows=4,D=0;D<V[1];D++){if(k=this._daylightSavingAdjust(new Date(tt,J,t.selectedDay)),S=" ui-corner-all",C="",$){if(C+="<div class='ui-datepicker-group",V[1]>1)switch(D){case 0:C+=" ui-datepicker-group-first",S=" ui-corner-"+(W?"right":"left");break;case V[1]-1:C+=" ui-datepicker-group-last",S=" ui-corner-"+(W?"left":"right");break;default:C+=" ui-datepicker-group-middle",S=""}C+="'>"}for(C+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+S+"'>"+(/all|left/.test(S)&&0===w?W?r:n:"")+(/all|right/.test(S)&&0===w?W?n:r:"")+this._generateMonthYearHeader(t,J,tt,Z,Q,w>0||D>0,p,m)+"</div><table class='ui-datepicker-calendar'><thead><tr>",I=c?"<th class='ui-datepicker-week-col'>"+this._get(t,"weekHeader")+"</th>":"",x=0;7>x;x++)T=(x+h)%7,I+="<th scope='col'"+((x+h+6)%7>=5?" class='ui-datepicker-week-end'":"")+"><span title='"+d[T]+"'>"+f[T]+"</span></th>";for(C+=I+"</tr></thead><tbody>",E=this._getDaysInMonth(tt,J),tt===t.selectedYear&&J===t.selectedMonth&&(t.selectedDay=Math.min(t.selectedDay,E)),A=(this._getFirstDayOfMonth(tt,J)-h+7)%7,F=Math.ceil((A+E)/7),P=$&&this.maxRows>F?this.maxRows:F,this.maxRows=P,N=this._daylightSavingAdjust(new Date(tt,J,1-A)),O=0;P>O;O++){for(C+="<tr>",z=c?"<td class='ui-datepicker-week-col'>"+this._get(t,"calculateWeek")(N)+"</td>":"",x=0;7>x;x++)R=g?g.apply(t.input?t.input[0]:null,[N]):[!0,""],L=N.getMonth()!==J,H=L&&!y||!R[0]||Z&&Z>N||Q&&N>Q,z+="<td class='"+((x+h+6)%7>=5?" ui-datepicker-week-end":"")+(L?" ui-datepicker-other-month":"")+(N.getTime()===k.getTime()&&J===t.selectedMonth&&t._keyEvent||_.getTime()===N.getTime()&&_.getTime()===k.getTime()?" "+this._dayOverClass:"")+(H?" "+this._unselectableClass+" ui-state-disabled":"")+(L&&!v?"":" "+R[1]+(N.getTime()===G.getTime()?" "+this._currentClass:"")+(N.getTime()===q.getTime()?" ui-datepicker-today":""))+"'"+(L&&!v||!R[2]?"":" title='"+R[2].replace(/'/g,"&#39;")+"'")+(H?"":" data-handler='selectDay' data-event='click' data-month='"+N.getMonth()+"' data-year='"+N.getFullYear()+"'")+">"+(L&&!v?"&#xa0;":H?"<span class='ui-state-default'>"+N.getDate()+"</span>":"<a class='ui-state-default"+(N.getTime()===q.getTime()?" ui-state-highlight":"")+(N.getTime()===G.getTime()?" ui-state-active":"")+(L?" ui-priority-secondary":"")+"' href='#'>"+N.getDate()+"</a>")+"</td>",N.setDate(N.getDate()+1),N=this._daylightSavingAdjust(N);C+=z+"</tr>"}J++,J>11&&(J=0,tt++),C+="</tbody></table>"+($?"</div>"+(V[0]>0&&D===V[1]-1?"<div class='ui-datepicker-row-break'></div>":""):""),M+=C}b+=M}return b+=u,t._keyEvent=!1,b},_generateMonthYearHeader:function(t,e,i,n,s,r,o,a){var l,u,h,c,d,f,p,m,g=this._get(t,"changeMonth"),v=this._get(t,"changeYear"),y=this._get(t,"showMonthAfterYear"),_="<div class='ui-datepicker-title'>",b="";if(r||!g)b+="<span class='ui-datepicker-month'>"+o[e]+"</span>";else{for(l=n&&n.getFullYear()===i,u=s&&s.getFullYear()===i,b+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",h=0;12>h;h++)(!l||h>=n.getMonth())&&(!u||h<=s.getMonth())&&(b+="<option value='"+h+"'"+(h===e?" selected='selected'":"")+">"+a[h]+"</option>");b+="</select>"}if(y||(_+=b+(!r&&g&&v?"":"&#xa0;")),!t.yearshtml)if(t.yearshtml="",r||!v)_+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(c=this._get(t,"yearRange").split(":"),d=(new Date).getFullYear(),f=function(t){var e=t.match(/c[+\-].*/)?i+parseInt(t.substring(1),10):t.match(/[+\-].*/)?d+parseInt(t,10):parseInt(t,10);return isNaN(e)?d:e},p=f(c[0]),m=Math.max(p,f(c[1]||"")),p=n?Math.max(p,n.getFullYear()):p,m=s?Math.min(m,s.getFullYear()):m,t.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";m>=p;p++)t.yearshtml+="<option value='"+p+"'"+(p===i?" selected='selected'":"")+">"+p+"</option>";t.yearshtml+="</select>",_+=t.yearshtml,t.yearshtml=null}return _+=this._get(t,"yearSuffix"),y&&(_+=(!r&&g&&v?"":"&#xa0;")+b),_+="</div>"},_adjustInstDate:function(t,e,i){var n=t.drawYear+("Y"===i?e:0),s=t.drawMonth+("M"===i?e:0),r=Math.min(t.selectedDay,this._getDaysInMonth(n,s))+("D"===i?e:0),o=this._restrictMinMax(t,this._daylightSavingAdjust(new Date(n,s,r)));t.selectedDay=o.getDate(),t.drawMonth=t.selectedMonth=o.getMonth(),t.drawYear=t.selectedYear=o.getFullYear(),("M"===i||"Y"===i)&&this._notifyChange(t)},_restrictMinMax:function(t,e){var i=this._getMinMaxDate(t,"min"),n=this._getMinMaxDate(t,"max"),s=i&&i>e?i:e;return n&&s>n?n:s},_notifyChange:function(t){var e=this._get(t,"onChangeMonthYear");e&&e.apply(t.input?t.input[0]:null,[t.selectedYear,t.selectedMonth+1,t])},_getNumberOfMonths:function(t){var e=this._get(t,"numberOfMonths");return null==e?[1,1]:"number"==typeof e?[1,e]:e},_getMinMaxDate:function(t,e){return this._determineDate(t,this._get(t,e+"Date"),null)},_getDaysInMonth:function(t,e){return 32-this._daylightSavingAdjust(new Date(t,e,32)).getDate()},_getFirstDayOfMonth:function(t,e){return new Date(t,e,1).getDay()},_canAdjustMonth:function(t,e,i,n){var s=this._getNumberOfMonths(t),r=this._daylightSavingAdjust(new Date(i,n+(0>e?e:s[0]*s[1]),1));
return 0>e&&r.setDate(this._getDaysInMonth(r.getFullYear(),r.getMonth())),this._isInRange(t,r)},_isInRange:function(t,e){var i,n,s=this._getMinMaxDate(t,"min"),r=this._getMinMaxDate(t,"max"),o=null,a=null,l=this._get(t,"yearRange");return l&&(i=l.split(":"),n=(new Date).getFullYear(),o=parseInt(i[0],10),a=parseInt(i[1],10),i[0].match(/[+\-].*/)&&(o+=n),i[1].match(/[+\-].*/)&&(a+=n)),(!s||e.getTime()>=s.getTime())&&(!r||e.getTime()<=r.getTime())&&(!o||e.getFullYear()>=o)&&(!a||e.getFullYear()<=a)},_getFormatConfig:function(t){var e=this._get(t,"shortYearCutoff");return e="string"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),{shortYearCutoff:e,dayNamesShort:this._get(t,"dayNamesShort"),dayNames:this._get(t,"dayNames"),monthNamesShort:this._get(t,"monthNamesShort"),monthNames:this._get(t,"monthNames")}},_formatDate:function(t,e,i,n){e||(t.currentDay=t.selectedDay,t.currentMonth=t.selectedMonth,t.currentYear=t.selectedYear);var s=e?"object"==typeof e?e:this._daylightSavingAdjust(new Date(n,i,e)):this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return this.formatDate(this._get(t,"dateFormat"),s,this._getFormatConfig(t))}}),t.fn.datepicker=function(e){if(!this.length)return this;t.datepicker.initialized||(t(document).mousedown(t.datepicker._checkExternalClick),t.datepicker.initialized=!0),0===t("#"+t.datepicker._mainDivId).length&&t("body").append(t.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"!=typeof e||"isDisabled"!==e&&"getDate"!==e&&"widget"!==e?"option"===e&&2===arguments.length&&"string"==typeof arguments[1]?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i)):this.each(function(){"string"==typeof e?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this].concat(i)):t.datepicker._attachDatepicker(this,e)}):t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i))},t.datepicker=new s,t.datepicker.initialized=!1,t.datepicker.uuid=(new Date).getTime(),t.datepicker.version="1.11.4";t.datepicker;t.widget("ui.draggable",t.ui.mouse,{version:"1.11.4",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._setHandleClassName(),this._mouseInit()},_setOption:function(t,e){this._super(t,e),"handle"===t&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){return(this.helper||this.element).is(".ui-draggable-dragging")?void(this.destroyOnClear=!0):(this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._removeHandleClassName(),void this._mouseDestroy())},_mouseCapture:function(e){var i=this.options;return this._blurActiveElement(e),this.helper||i.disabled||t(e.target).closest(".ui-resizable-handle").length>0?!1:(this.handle=this._getHandle(e),this.handle?(this._blockFrames(i.iframeFix===!0?"iframe":i.iframeFix),!0):!1)},_blockFrames:function(e){this.iframeBlocks=this.document.find(e).map(function(){var e=t(this);return t("<div>").css("position","absolute").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(e){var i=this.document[0];if(this.handleElement.is(e.target))try{i.activeElement&&"body"!==i.activeElement.nodeName.toLowerCase()&&t(i.activeElement).blur()}catch(n){}},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter(function(){return"fixed"===t(this).css("position")}).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(e),this.originalPosition=this.position=this._generatePosition(e,!1),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger("start",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._normalizeRightBottom(),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_refreshOffsets:function(t){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:t.pageX-this.offset.left,top:t.pageY-this.offset.top}},_mouseDrag:function(e,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e,!0),this.positionAbs=this._convertPositionTo("absolute"),!i){var n=this._uiHash();if(this._trigger("drag",e,n)===!1)return this._mouseUp({}),!1;this.position=n.position}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,n=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(n=t.ui.ddmanager.drop(this,e)),this.dropped&&(n=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!n||"valid"===this.options.revert&&n||this.options.revert===!0||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger("stop",e)!==!1&&i._clear()}):this._trigger("stop",e)!==!1&&this._clear(),!1},_mouseUp:function(e){return this._unblockFrames(),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),this.handleElement.is(e.target)&&this.element.focus(),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(e){return this.options.handle?!!t(e.target).closest(this.element.find(this.options.handle)).length:!0},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this.handleElement.addClass("ui-draggable-handle")},_removeHandleClassName:function(){this.handleElement.removeClass("ui-draggable-handle")},_createHelper:function(e){var i=this.options,n=t.isFunction(i.helper),s=n?t(i.helper.apply(this.element[0],[e])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),n&&s[0]===this.element[0]&&this._setPositionRelative(),s[0]===this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative")},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_isRootNode:function(t){return/(html|body)/i.test(t.tagName)||t===this.document[0]},_getParentOffset:function(){var e=this.offsetParent.offset(),i=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==i&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var t=this.element.position(),e=this._isRootNode(this.scrollParent[0]);return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+(e?0:this.scrollParent.scrollTop()),left:t.left-(parseInt(this.helper.css("left"),10)||0)+(e?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,n,s=this.options,r=this.document[0];return this.relativeContainer=null,s.containment?"window"===s.containment?void(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||r.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):"document"===s.containment?void(this.containment=[0,0,t(r).width()-this.helperProportions.width-this.margins.left,(t(r).height()||r.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):s.containment.constructor===Array?void(this.containment=s.containment):("parent"===s.containment&&(s.containment=this.helper[0].parentNode),i=t(s.containment),n=i[0],void(n&&(e=/(scroll|auto)/.test(i.css("overflow")),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(e?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i))):void(this.containment=null)},_convertPositionTo:function(t,e){e||(e=this.position);var i="absolute"===t?1:-1,n=this._isRootNode(this.scrollParent[0]);return{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:n?0:this.offset.scroll.top)*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:n?0:this.offset.scroll.left)*i}},_generatePosition:function(t,e){var i,n,s,r,o=this.options,a=this._isRootNode(this.scrollParent[0]),l=t.pageX,u=t.pageY;return a&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),e&&(this.containment&&(this.relativeContainer?(n=this.relativeContainer.offset(),i=[this.containment[0]+n.left,this.containment[1]+n.top,this.containment[2]+n.left,this.containment[3]+n.top]):i=this.containment,t.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(u=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(u=i[3]+this.offset.click.top)),o.grid&&(s=o.grid[1]?this.originalPageY+Math.round((u-this.originalPageY)/o.grid[1])*o.grid[1]:this.originalPageY,u=i?s-this.offset.click.top>=i[1]||s-this.offset.click.top>i[3]?s:s-this.offset.click.top>=i[1]?s-o.grid[1]:s+o.grid[1]:s,r=o.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/o.grid[0])*o.grid[0]:this.originalPageX,l=i?r-this.offset.click.left>=i[0]||r-this.offset.click.left>i[2]?r:r-this.offset.click.left>=i[0]?r-o.grid[0]:r+o.grid[0]:r),"y"===o.axis&&(l=this.originalPageX),"x"===o.axis&&(u=this.originalPageY)),{top:u-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:a?0:this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:a?0:this.offset.scroll.left)}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_normalizeRightBottom:function(){"y"!==this.options.axis&&"auto"!==this.helper.css("right")&&(this.helper.width(this.helper.width()),this.helper.css("right","auto")),"x"!==this.options.axis&&"auto"!==this.helper.css("bottom")&&(this.helper.height(this.helper.height()),this.helper.css("bottom","auto"))},_trigger:function(e,i,n){return n=n||this._uiHash(),t.ui.plugin.call(this,e,[i,n,this],!0),/^(drag|start|stop)/.test(e)&&(this.positionAbs=this._convertPositionTo("absolute"),n.offset=this.positionAbs),t.Widget.prototype._trigger.call(this,e,i,n)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add("draggable","connectToSortable",{start:function(e,i,n){var s=t.extend({},i,{item:n.element});n.sortables=[],t(n.options.connectToSortable).each(function(){var i=t(this).sortable("instance");i&&!i.options.disabled&&(n.sortables.push(i),i.refreshPositions(),i._trigger("activate",e,s))})},stop:function(e,i,n){var s=t.extend({},i,{item:n.element});n.cancelHelperRemoval=!1,t.each(n.sortables,function(){var t=this;t.isOver?(t.isOver=0,n.cancelHelperRemoval=!0,t.cancelHelperRemoval=!1,t._storedCSS={position:t.placeholder.css("position"),top:t.placeholder.css("top"),left:t.placeholder.css("left")},t._mouseStop(e),t.options.helper=t.options._helper):(t.cancelHelperRemoval=!0,t._trigger("deactivate",e,s))})},drag:function(e,i,n){t.each(n.sortables,function(){var s=!1,r=this;r.positionAbs=n.positionAbs,r.helperProportions=n.helperProportions,r.offset.click=n.offset.click,r._intersectsWith(r.containerCache)&&(s=!0,t.each(n.sortables,function(){return this.positionAbs=n.positionAbs,this.helperProportions=n.helperProportions,this.offset.click=n.offset.click,this!==r&&this._intersectsWith(this.containerCache)&&t.contains(r.element[0],this.element[0])&&(s=!1),s})),s?(r.isOver||(r.isOver=1,n._parent=i.helper.parent(),r.currentItem=i.helper.appendTo(r.element).data("ui-sortable-item",!0),r.options._helper=r.options.helper,r.options.helper=function(){return i.helper[0]},e.target=r.currentItem[0],r._mouseCapture(e,!0),r._mouseStart(e,!0,!0),r.offset.click.top=n.offset.click.top,r.offset.click.left=n.offset.click.left,r.offset.parent.left-=n.offset.parent.left-r.offset.parent.left,r.offset.parent.top-=n.offset.parent.top-r.offset.parent.top,n._trigger("toSortable",e),n.dropped=r.element,t.each(n.sortables,function(){this.refreshPositions()}),n.currentItem=n.element,r.fromOutside=n),r.currentItem&&(r._mouseDrag(e),i.position=r.position)):r.isOver&&(r.isOver=0,r.cancelHelperRemoval=!0,r.options._revert=r.options.revert,r.options.revert=!1,r._trigger("out",e,r._uiHash(r)),r._mouseStop(e,!0),r.options.revert=r.options._revert,r.options.helper=r.options._helper,r.placeholder&&r.placeholder.remove(),i.helper.appendTo(n._parent),n._refreshOffsets(e),i.position=n._generatePosition(e,!0),n._trigger("fromSortable",e),n.dropped=!1,t.each(n.sortables,function(){this.refreshPositions()}))})}}),t.ui.plugin.add("draggable","cursor",{start:function(e,i,n){var s=t("body"),r=n.options;s.css("cursor")&&(r._cursor=s.css("cursor")),s.css("cursor",r.cursor)},stop:function(e,i,n){var s=n.options;s._cursor&&t("body").css("cursor",s._cursor)}}),t.ui.plugin.add("draggable","opacity",{start:function(e,i,n){var s=t(i.helper),r=n.options;s.css("opacity")&&(r._opacity=s.css("opacity")),s.css("opacity",r.opacity)},stop:function(e,i,n){var s=n.options;s._opacity&&t(i.helper).css("opacity",s._opacity)}}),t.ui.plugin.add("draggable","scroll",{start:function(t,e,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&"HTML"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(e,i,n){var s=n.options,r=!1,o=n.scrollParentNotHidden[0],a=n.document[0];o!==a&&"HTML"!==o.tagName?(s.axis&&"x"===s.axis||(n.overflowOffset.top+o.offsetHeight-e.pageY<s.scrollSensitivity?o.scrollTop=r=o.scrollTop+s.scrollSpeed:e.pageY-n.overflowOffset.top<s.scrollSensitivity&&(o.scrollTop=r=o.scrollTop-s.scrollSpeed)),s.axis&&"y"===s.axis||(n.overflowOffset.left+o.offsetWidth-e.pageX<s.scrollSensitivity?o.scrollLeft=r=o.scrollLeft+s.scrollSpeed:e.pageX-n.overflowOffset.left<s.scrollSensitivity&&(o.scrollLeft=r=o.scrollLeft-s.scrollSpeed))):(s.axis&&"x"===s.axis||(e.pageY-t(a).scrollTop()<s.scrollSensitivity?r=t(a).scrollTop(t(a).scrollTop()-s.scrollSpeed):t(window).height()-(e.pageY-t(a).scrollTop())<s.scrollSensitivity&&(r=t(a).scrollTop(t(a).scrollTop()+s.scrollSpeed))),s.axis&&"y"===s.axis||(e.pageX-t(a).scrollLeft()<s.scrollSensitivity?r=t(a).scrollLeft(t(a).scrollLeft()-s.scrollSpeed):t(window).width()-(e.pageX-t(a).scrollLeft())<s.scrollSensitivity&&(r=t(a).scrollLeft(t(a).scrollLeft()+s.scrollSpeed)))),r!==!1&&t.ui.ddmanager&&!s.dropBehaviour&&t.ui.ddmanager.prepareOffsets(n,e)}}),t.ui.plugin.add("draggable","snap",{start:function(e,i,n){var s=n.options;n.snapElements=[],t(s.snap.constructor!==String?s.snap.items||":data(ui-draggable)":s.snap).each(function(){var e=t(this),i=e.offset();this!==n.element[0]&&n.snapElements.push({item:this,width:e.outerWidth(),height:e.outerHeight(),top:i.top,left:i.left})})},drag:function(e,i,n){var s,r,o,a,l,u,h,c,d,f,p=n.options,m=p.snapTolerance,g=i.offset.left,v=g+n.helperProportions.width,y=i.offset.top,_=y+n.helperProportions.height;for(d=n.snapElements.length-1;d>=0;d--)l=n.snapElements[d].left-n.margins.left,u=l+n.snapElements[d].width,h=n.snapElements[d].top-n.margins.top,c=h+n.snapElements[d].height,l-m>v||g>u+m||h-m>_||y>c+m||!t.contains(n.snapElements[d].item.ownerDocument,n.snapElements[d].item)?(n.snapElements[d].snapping&&n.options.snap.release&&n.options.snap.release.call(n.element,e,t.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=!1):("inner"!==p.snapMode&&(s=Math.abs(h-_)<=m,r=Math.abs(c-y)<=m,o=Math.abs(l-v)<=m,a=Math.abs(u-g)<=m,s&&(i.position.top=n._convertPositionTo("relative",{top:h-n.helperProportions.height,left:0}).top),r&&(i.position.top=n._convertPositionTo("relative",{top:c,left:0}).top),o&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l-n.helperProportions.width}).left),a&&(i.position.left=n._convertPositionTo("relative",{top:0,left:u}).left)),f=s||r||o||a,"outer"!==p.snapMode&&(s=Math.abs(h-y)<=m,r=Math.abs(c-_)<=m,o=Math.abs(l-g)<=m,a=Math.abs(u-v)<=m,s&&(i.position.top=n._convertPositionTo("relative",{top:h,left:0}).top),r&&(i.position.top=n._convertPositionTo("relative",{top:c-n.helperProportions.height,left:0}).top),o&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l}).left),a&&(i.position.left=n._convertPositionTo("relative",{top:0,left:u-n.helperProportions.width}).left)),!n.snapElements[d].snapping&&(s||r||o||a||f)&&n.options.snap.snap&&n.options.snap.snap.call(n.element,e,t.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=s||r||o||a||f)}}),t.ui.plugin.add("draggable","stack",{start:function(e,i,n){var s,r=n.options,o=t.makeArray(t(r.stack)).sort(function(e,i){return(parseInt(t(e).css("zIndex"),10)||0)-(parseInt(t(i).css("zIndex"),10)||0)});o.length&&(s=parseInt(t(o[0]).css("zIndex"),10)||0,t(o).each(function(e){t(this).css("zIndex",s+e)}),this.css("zIndex",s+o.length))}}),t.ui.plugin.add("draggable","zIndex",{start:function(e,i,n){var s=t(i.helper),r=n.options;s.css("zIndex")&&(r._zIndex=s.css("zIndex")),s.css("zIndex",r.zIndex)},stop:function(e,i,n){var s=n.options;s._zIndex&&t(i.helper).css("zIndex",s._zIndex)}});t.ui.draggable;t.widget("ui.resizable",t.ui.mouse,{version:"1.11.4",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(t){return parseInt(t,10)||0},_isNumber:function(t){return!isNaN(parseInt(t,10))},_hasScroll:function(e,i){if("hidden"===t(e).css("overflow"))return!1;var n=i&&"left"===i?"scrollLeft":"scrollTop",s=!1;return e[n]>0?!0:(e[n]=1,s=e[n]>0,e[n]=0,s)},_create:function(){var e,i,n,s,r,o=this,a=this.options;if(this.element.addClass("ui-resizable"),t.extend(this,{_aspectRatio:!!a.aspectRatio,aspectRatio:a.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:a.helper||a.ghost||a.animate?a.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.resizable("instance")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=a.handles||(t(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this._handles=t(),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),e=this.handles.split(","),this.handles={},i=0;i<e.length;i++)n=t.trim(e[i]),r="ui-resizable-"+n,s=t("<div class='ui-resizable-handle "+r+"'></div>"),s.css({zIndex:a.zIndex}),"se"===n&&s.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[n]=".ui-resizable-"+n,this.element.append(s);this._renderAxis=function(e){var i,n,s,r;e=e||this.element;for(i in this.handles)this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=t(this.handles[i]),this._on(this.handles[i],{mousedown:o._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(n=t(this.handles[i],this.element),r=/sw|ne|nw|se|n|s/.test(i)?n.outerHeight():n.outerWidth(),s=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),e.css(s,r),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(".ui-resizable-handle")),this._handles.disableSelection(),this._handles.mouseover(function(){o.resizing||(this.className&&(s=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),o.axis=s&&s[1]?s[1]:"se")}),a.autoHide&&(this._handles.hide(),t(this.element).addClass("ui-resizable-autohide").mouseenter(function(){a.disabled||(t(this).removeClass("ui-resizable-autohide"),o._handles.show())}).mouseleave(function(){a.disabled||o.resizing||(t(this).addClass("ui-resizable-autohide"),o._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,i=function(e){t(e).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&&(i(this.element),e=this.element,this.originalElement.css({position:e.css("position"),width:e.outerWidth(),height:e.outerHeight(),top:e.css("top"),left:e.css("left")}).insertAfter(e),e.remove()),this.originalElement.css("resize",this.originalResizeStyle),i(this.originalElement),this},_mouseCapture:function(e){var i,n,s=!1;for(i in this.handles)n=t(this.handles[i])[0],(n===e.target||t.contains(n,e.target))&&(s=!0);return!this.options.disabled&&s},_mouseStart:function(e){var i,n,s,r=this.options,o=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css("left")),n=this._num(this.helper.css("top")),r.containment&&(i+=t(r.containment).scrollLeft()||0,n+=t(r.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:n},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:o.width(),height:o.height()},this.originalSize=this._helper?{width:o.outerWidth(),height:o.outerHeight()}:{width:o.width(),height:o.height()},this.sizeDiff={width:o.outerWidth()-o.width(),height:o.outerHeight()-o.height()},this.originalPosition={left:i,top:n},this.originalMousePosition={left:e.pageX,top:e.pageY},this.aspectRatio="number"==typeof r.aspectRatio?r.aspectRatio:this.originalSize.width/this.originalSize.height||1,s=t(".ui-resizable-"+this.axis).css("cursor"),t("body").css("cursor","auto"===s?this.axis+"-resize":s),o.addClass("ui-resizable-resizing"),this._propagate("start",e),!0},_mouseDrag:function(e){var i,n,s=this.originalMousePosition,r=this.axis,o=e.pageX-s.left||0,a=e.pageY-s.top||0,l=this._change[r];return this._updatePrevProperties(),l?(i=l.apply(this,[e,o,a]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate("resize",e),n=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(n)||(this._updatePrevProperties(),this._trigger("resize",e,this.ui()),this._applyChanges()),!1):!1},_mouseStop:function(e){this.resizing=!1;var i,n,s,r,o,a,l,u=this.options,h=this;return this._helper&&(i=this._proportionallyResizeElements,n=i.length&&/textarea/i.test(i[0].nodeName),s=n&&this._hasScroll(i[0],"left")?0:h.sizeDiff.height,r=n?0:h.sizeDiff.width,o={width:h.helper.width()-r,height:h.helper.height()-s},a=parseInt(h.element.css("left"),10)+(h.position.left-h.originalPosition.left)||null,l=parseInt(h.element.css("top"),10)+(h.position.top-h.originalPosition.top)||null,u.animate||this.element.css(t.extend(o,{top:l,left:a})),h.helper.height(h.size.height),h.helper.width(h.size.width),this._helper&&!u.animate&&this._proportionallyResize()),t("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",e),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var t={};return this.position.top!==this.prevPosition.top&&(t.top=this.position.top+"px"),this.position.left!==this.prevPosition.left&&(t.left=this.position.left+"px"),this.size.width!==this.prevSize.width&&(t.width=this.size.width+"px"),this.size.height!==this.prevSize.height&&(t.height=this.size.height+"px"),this.helper.css(t),t},_updateVirtualBoundaries:function(t){var e,i,n,s,r,o=this.options;r={minWidth:this._isNumber(o.minWidth)?o.minWidth:0,maxWidth:this._isNumber(o.maxWidth)?o.maxWidth:1/0,minHeight:this._isNumber(o.minHeight)?o.minHeight:0,maxHeight:this._isNumber(o.maxHeight)?o.maxHeight:1/0},(this._aspectRatio||t)&&(e=r.minHeight*this.aspectRatio,n=r.minWidth/this.aspectRatio,i=r.maxHeight*this.aspectRatio,s=r.maxWidth/this.aspectRatio,e>r.minWidth&&(r.minWidth=e),n>r.minHeight&&(r.minHeight=n),i<r.maxWidth&&(r.maxWidth=i),s<r.maxHeight&&(r.maxHeight=s)),this._vBoundaries=r},_updateCache:function(t){this.offset=this.helper.offset(),this._isNumber(t.left)&&(this.position.left=t.left),this._isNumber(t.top)&&(this.position.top=t.top),this._isNumber(t.height)&&(this.size.height=t.height),this._isNumber(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,i=this.size,n=this.axis;return this._isNumber(t.height)?t.width=t.height*this.aspectRatio:this._isNumber(t.width)&&(t.height=t.width/this.aspectRatio),"sw"===n&&(t.left=e.left+(i.width-t.width),t.top=null),"nw"===n&&(t.top=e.top+(i.height-t.height),t.left=e.left+(i.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,i=this.axis,n=this._isNumber(t.width)&&e.maxWidth&&e.maxWidth<t.width,s=this._isNumber(t.height)&&e.maxHeight&&e.maxHeight<t.height,r=this._isNumber(t.width)&&e.minWidth&&e.minWidth>t.width,o=this._isNumber(t.height)&&e.minHeight&&e.minHeight>t.height,a=this.originalPosition.left+this.originalSize.width,l=this.position.top+this.size.height,u=/sw|nw|w/.test(i),h=/nw|ne|n/.test(i);return r&&(t.width=e.minWidth),o&&(t.height=e.minHeight),n&&(t.width=e.maxWidth),s&&(t.height=e.maxHeight),r&&u&&(t.left=a-e.minWidth),n&&u&&(t.left=a-e.maxWidth),o&&h&&(t.top=l-e.minHeight),s&&h&&(t.top=l-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_getPaddingPlusBorderDimensions:function(t){for(var e=0,i=[],n=[t.css("borderTopWidth"),t.css("borderRightWidth"),t.css("borderBottomWidth"),t.css("borderLeftWidth")],s=[t.css("paddingTop"),t.css("paddingRight"),t.css("paddingBottom"),t.css("paddingLeft")];4>e;e++)i[e]=parseInt(n[e],10)||0,i[e]+=parseInt(s[e],10)||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var t,e=0,i=this.helper||this.element;e<this._proportionallyResizeElements.length;e++)t=this._proportionallyResizeElements[e],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(t)),t.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t("<div style='overflow:hidden;'></div>"),this.helper.addClass(this._helper).css({width:this.element.outerWidth()-1,height:this.element.outerHeight()-1,position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize,n=this.originalPosition;return{left:n.left+e,width:i.width-e}},n:function(t,e,i){var n=this.originalSize,s=this.originalPosition;return{top:s.top+i,height:n.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,n){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,n]))},sw:function(e,i,n){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,n]))},ne:function(e,i,n){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,n]))},nw:function(e,i,n){
return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,n]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),"resize"!==e&&this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add("resizable","animate",{stop:function(e){var i=t(this).resizable("instance"),n=i.options,s=i._proportionallyResizeElements,r=s.length&&/textarea/i.test(s[0].nodeName),o=r&&i._hasScroll(s[0],"left")?0:i.sizeDiff.height,a=r?0:i.sizeDiff.width,l={width:i.size.width-a,height:i.size.height-o},u=parseInt(i.element.css("left"),10)+(i.position.left-i.originalPosition.left)||null,h=parseInt(i.element.css("top"),10)+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(l,h&&u?{top:h,left:u}:{}),{duration:n.animateDuration,easing:n.animateEasing,step:function(){var n={width:parseInt(i.element.css("width"),10),height:parseInt(i.element.css("height"),10),top:parseInt(i.element.css("top"),10),left:parseInt(i.element.css("left"),10)};s&&s.length&&t(s[0]).css({width:n.width,height:n.height}),i._updateCache(n),i._propagate("resize",e)}})}}),t.ui.plugin.add("resizable","containment",{start:function(){var e,i,n,s,r,o,a,l=t(this).resizable("instance"),u=l.options,h=l.element,c=u.containment,d=c instanceof t?c.get(0):/parent/.test(c)?h.parent().get(0):c;d&&(l.containerElement=t(d),/document/.test(c)||c===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(e=t(d),i=[],t(["Top","Right","Left","Bottom"]).each(function(t,n){i[t]=l._num(e.css("padding"+n))}),l.containerOffset=e.offset(),l.containerPosition=e.position(),l.containerSize={height:e.innerHeight()-i[3],width:e.innerWidth()-i[1]},n=l.containerOffset,s=l.containerSize.height,r=l.containerSize.width,o=l._hasScroll(d,"left")?d.scrollWidth:r,a=l._hasScroll(d)?d.scrollHeight:s,l.parentData={element:d,left:n.left,top:n.top,width:o,height:a}))},resize:function(e){var i,n,s,r,o=t(this).resizable("instance"),a=o.options,l=o.containerOffset,u=o.position,h=o._aspectRatio||e.shiftKey,c={top:0,left:0},d=o.containerElement,f=!0;d[0]!==document&&/static/.test(d.css("position"))&&(c=l),u.left<(o._helper?l.left:0)&&(o.size.width=o.size.width+(o._helper?o.position.left-l.left:o.position.left-c.left),h&&(o.size.height=o.size.width/o.aspectRatio,f=!1),o.position.left=a.helper?l.left:0),u.top<(o._helper?l.top:0)&&(o.size.height=o.size.height+(o._helper?o.position.top-l.top:o.position.top),h&&(o.size.width=o.size.height*o.aspectRatio,f=!1),o.position.top=o._helper?l.top:0),s=o.containerElement.get(0)===o.element.parent().get(0),r=/relative|absolute/.test(o.containerElement.css("position")),s&&r?(o.offset.left=o.parentData.left+o.position.left,o.offset.top=o.parentData.top+o.position.top):(o.offset.left=o.element.offset().left,o.offset.top=o.element.offset().top),i=Math.abs(o.sizeDiff.width+(o._helper?o.offset.left-c.left:o.offset.left-l.left)),n=Math.abs(o.sizeDiff.height+(o._helper?o.offset.top-c.top:o.offset.top-l.top)),i+o.size.width>=o.parentData.width&&(o.size.width=o.parentData.width-i,h&&(o.size.height=o.size.width/o.aspectRatio,f=!1)),n+o.size.height>=o.parentData.height&&(o.size.height=o.parentData.height-n,h&&(o.size.width=o.size.height*o.aspectRatio,f=!1)),f||(o.position.left=o.prevPosition.left,o.position.top=o.prevPosition.top,o.size.width=o.prevSize.width,o.size.height=o.prevSize.height)},stop:function(){var e=t(this).resizable("instance"),i=e.options,n=e.containerOffset,s=e.containerPosition,r=e.containerElement,o=t(e.helper),a=o.offset(),l=o.outerWidth()-e.sizeDiff.width,u=o.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(r.css("position"))&&t(this).css({left:a.left-s.left-n.left,width:l,height:u}),e._helper&&!i.animate&&/static/.test(r.css("position"))&&t(this).css({left:a.left-s.left-n.left,width:l,height:u})}}),t.ui.plugin.add("resizable","alsoResize",{start:function(){var e=t(this).resizable("instance"),i=e.options;t(i.alsoResize).each(function(){var e=t(this);e.data("ui-resizable-alsoresize",{width:parseInt(e.width(),10),height:parseInt(e.height(),10),left:parseInt(e.css("left"),10),top:parseInt(e.css("top"),10)})})},resize:function(e,i){var n=t(this).resizable("instance"),s=n.options,r=n.originalSize,o=n.originalPosition,a={height:n.size.height-r.height||0,width:n.size.width-r.width||0,top:n.position.top-o.top||0,left:n.position.left-o.left||0};t(s.alsoResize).each(function(){var e=t(this),n=t(this).data("ui-resizable-alsoresize"),s={},r=e.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];t.each(r,function(t,e){var i=(n[e]||0)+(a[e]||0);i&&i>=0&&(s[e]=i||null)}),e.css(s)})},stop:function(){t(this).removeData("resizable-alsoresize")}}),t.ui.plugin.add("resizable","ghost",{start:function(){var e=t(this).resizable("instance"),i=e.options,n=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:"block",position:"relative",height:n.height,width:n.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass("string"==typeof i.ghost?i.ghost:""),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).resizable("instance");e.ghost&&e.ghost.css({position:"relative",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).resizable("instance");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add("resizable","grid",{resize:function(){var e,i=t(this).resizable("instance"),n=i.options,s=i.size,r=i.originalSize,o=i.originalPosition,a=i.axis,l="number"==typeof n.grid?[n.grid,n.grid]:n.grid,u=l[0]||1,h=l[1]||1,c=Math.round((s.width-r.width)/u)*u,d=Math.round((s.height-r.height)/h)*h,f=r.width+c,p=r.height+d,m=n.maxWidth&&n.maxWidth<f,g=n.maxHeight&&n.maxHeight<p,v=n.minWidth&&n.minWidth>f,y=n.minHeight&&n.minHeight>p;n.grid=l,v&&(f+=u),y&&(p+=h),m&&(f-=u),g&&(p-=h),/^(se|s|e)$/.test(a)?(i.size.width=f,i.size.height=p):/^(ne)$/.test(a)?(i.size.width=f,i.size.height=p,i.position.top=o.top-d):/^(sw)$/.test(a)?(i.size.width=f,i.size.height=p,i.position.left=o.left-c):((0>=p-h||0>=f-u)&&(e=i._getPaddingPlusBorderDimensions(this)),p-h>0?(i.size.height=p,i.position.top=o.top-d):(p=h-e.height,i.size.height=p,i.position.top=o.top+r.height-p),f-u>0?(i.size.width=f,i.position.left=o.left-c):(f=u-e.width,i.size.width=f,i.position.left=o.left+r.width-f))}});t.ui.resizable,t.widget("ui.dialog",{version:"1.11.4",options:{appendTo:"body",autoOpen:!0,buttons:[],closeOnEscape:!0,closeText:"Close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(e){var i=t(this).css(e).offset().top;0>i&&t(this).css("top",e.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},sizeRelatedOptions:{buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},resizableRelatedOptions:{maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr("title"),this.options.title=this.options.title||this.originalTitle,this._createWrapper(),this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&t.fn.draggable&&this._makeDraggable(),this.options.resizable&&t.fn.resizable&&this._makeResizable(),this._isOpen=!1,this._trackFocus()},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var e=this.options.appendTo;return e&&(e.jquery||e.nodeType)?t(e):this.document.find(e||"body").eq(0)},_destroy:function(){var t,e=this.originalPosition;this._untrackInstance(),this._destroyOverlay(),this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach(),this.uiDialog.stop(!0,!0).remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),t=e.parent.children().eq(e.index),t.length&&t[0]!==this.element[0]?t.before(this.element):e.parent.append(this.element)},widget:function(){return this.uiDialog},disable:t.noop,enable:t.noop,close:function(e){var i,n=this;if(this._isOpen&&this._trigger("beforeClose",e)!==!1){if(this._isOpen=!1,this._focusedElement=null,this._destroyOverlay(),this._untrackInstance(),!this.opener.filter(":focusable").focus().length)try{i=this.document[0].activeElement,i&&"body"!==i.nodeName.toLowerCase()&&t(i).blur()}catch(s){}this._hide(this.uiDialog,this.options.hide,function(){n._trigger("close",e)})}},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(e,i){var n=!1,s=this.uiDialog.siblings(".ui-front:visible").map(function(){return+t(this).css("z-index")}).get(),r=Math.max.apply(null,s);return r>=+this.uiDialog.css("z-index")&&(this.uiDialog.css("z-index",r+1),n=!0),n&&!i&&this._trigger("focus",e),n},open:function(){var e=this;return this._isOpen?void(this._moveToTop()&&this._focusTabbable()):(this._isOpen=!0,this.opener=t(this.document[0].activeElement),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this.overlay&&this.overlay.css("z-index",this.uiDialog.css("z-index")-1),this._show(this.uiDialog,this.options.show,function(){e._focusTabbable(),e._trigger("focus")}),this._makeFocusTarget(),void this._trigger("open"))},_focusTabbable:function(){var t=this._focusedElement;t||(t=this.element.find("[autofocus]")),t.length||(t=this.element.find(":tabbable")),t.length||(t=this.uiDialogButtonPane.find(":tabbable")),t.length||(t=this.uiDialogTitlebarClose.filter(":tabbable")),t.length||(t=this.uiDialog),t.eq(0).focus()},_keepFocus:function(e){function i(){var e=this.document[0].activeElement,i=this.uiDialog[0]===e||t.contains(this.uiDialog[0],e);i||this._focusTabbable()}e.preventDefault(),i.call(this),this._delay(i)},_createWrapper:function(){this.uiDialog=t("<div>").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front "+this.options.dialogClass).hide().attr({tabIndex:-1,role:"dialog"}).appendTo(this._appendTo()),this._on(this.uiDialog,{keydown:function(e){if(this.options.closeOnEscape&&!e.isDefaultPrevented()&&e.keyCode&&e.keyCode===t.ui.keyCode.ESCAPE)return e.preventDefault(),void this.close(e);if(e.keyCode===t.ui.keyCode.TAB&&!e.isDefaultPrevented()){var i=this.uiDialog.find(":tabbable"),n=i.filter(":first"),s=i.filter(":last");e.target!==s[0]&&e.target!==this.uiDialog[0]||e.shiftKey?e.target!==n[0]&&e.target!==this.uiDialog[0]||!e.shiftKey||(this._delay(function(){s.focus()}),e.preventDefault()):(this._delay(function(){n.focus()}),e.preventDefault())}},mousedown:function(t){this._moveToTop(t)&&this._focusTabbable()}}),this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")})},_createTitlebar:function(){var e;this.uiDialogTitlebar=t("<div>").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog),this._on(this.uiDialogTitlebar,{mousedown:function(e){t(e.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.focus()}}),this.uiDialogTitlebarClose=t("<button type='button'></button>").button({label:this.options.closeText,icons:{primary:"ui-icon-closethick"},text:!1}).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar),this._on(this.uiDialogTitlebarClose,{click:function(t){t.preventDefault(),this.close(t)}}),e=t("<span>").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar),this._title(e),this.uiDialog.attr({"aria-labelledby":e.attr("id")})},_title:function(t){this.options.title||t.html("&#160;"),t.text(this.options.title)},_createButtonPane:function(){this.uiDialogButtonPane=t("<div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),this.uiButtonSet=t("<div>").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane),this._createButtons()},_createButtons:function(){var e=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),t.isEmptyObject(i)||t.isArray(i)&&!i.length?void this.uiDialog.removeClass("ui-dialog-buttons"):(t.each(i,function(i,n){var s,r;n=t.isFunction(n)?{click:n,text:i}:n,n=t.extend({type:"button"},n),s=n.click,n.click=function(){s.apply(e.element[0],arguments)},r={icons:n.icons,text:n.showText},delete n.icons,delete n.showText,t("<button></button>",n).button(r).appendTo(e.uiButtonSet)}),this.uiDialog.addClass("ui-dialog-buttons"),void this.uiDialogButtonPane.appendTo(this.uiDialog))},_makeDraggable:function(){function e(t){return{position:t.position,offset:t.offset}}var i=this,n=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(n,s){t(this).addClass("ui-dialog-dragging"),i._blockFrames(),i._trigger("dragStart",n,e(s))},drag:function(t,n){i._trigger("drag",t,e(n))},stop:function(s,r){var o=r.offset.left-i.document.scrollLeft(),a=r.offset.top-i.document.scrollTop();n.position={my:"left top",at:"left"+(o>=0?"+":"")+o+" top"+(a>=0?"+":"")+a,of:i.window},t(this).removeClass("ui-dialog-dragging"),i._unblockFrames(),i._trigger("dragStop",s,e(r))}})},_makeResizable:function(){function e(t){return{originalPosition:t.originalPosition,originalSize:t.originalSize,position:t.position,size:t.size}}var i=this,n=this.options,s=n.resizable,r=this.uiDialog.css("position"),o="string"==typeof s?s:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:n.maxWidth,maxHeight:n.maxHeight,minWidth:n.minWidth,minHeight:this._minHeight(),handles:o,start:function(n,s){t(this).addClass("ui-dialog-resizing"),i._blockFrames(),i._trigger("resizeStart",n,e(s))},resize:function(t,n){i._trigger("resize",t,e(n))},stop:function(s,r){var o=i.uiDialog.offset(),a=o.left-i.document.scrollLeft(),l=o.top-i.document.scrollTop();n.height=i.uiDialog.height(),n.width=i.uiDialog.width(),n.position={my:"left top",at:"left"+(a>=0?"+":"")+a+" top"+(l>=0?"+":"")+l,of:i.window},t(this).removeClass("ui-dialog-resizing"),i._unblockFrames(),i._trigger("resizeStop",s,e(r))}}).css("position",r)},_trackFocus:function(){this._on(this.widget(),{focusin:function(e){this._makeFocusTarget(),this._focusedElement=t(e.target)}})},_makeFocusTarget:function(){this._untrackInstance(),this._trackingInstances().unshift(this)},_untrackInstance:function(){var e=this._trackingInstances(),i=t.inArray(this,e);-1!==i&&e.splice(i,1)},_trackingInstances:function(){var t=this.document.data("ui-dialog-instances");return t||(t=[],this.document.data("ui-dialog-instances",t)),t},_minHeight:function(){var t=this.options;return"auto"===t.height?t.minHeight:Math.min(t.minHeight,t.height)},_position:function(){var t=this.uiDialog.is(":visible");t||this.uiDialog.show(),this.uiDialog.position(this.options.position),t||this.uiDialog.hide()},_setOptions:function(e){var i=this,n=!1,s={};t.each(e,function(t,e){i._setOption(t,e),t in i.sizeRelatedOptions&&(n=!0),t in i.resizableRelatedOptions&&(s[t]=e)}),n&&(this._size(),this._position()),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option",s)},_setOption:function(t,e){var i,n,s=this.uiDialog;"dialogClass"===t&&s.removeClass(this.options.dialogClass).addClass(e),"disabled"!==t&&(this._super(t,e),"appendTo"===t&&this.uiDialog.appendTo(this._appendTo()),"buttons"===t&&this._createButtons(),"closeText"===t&&this.uiDialogTitlebarClose.button({label:""+e}),"draggable"===t&&(i=s.is(":data(ui-draggable)"),i&&!e&&s.draggable("destroy"),!i&&e&&this._makeDraggable()),"position"===t&&this._position(),"resizable"===t&&(n=s.is(":data(ui-resizable)"),n&&!e&&s.resizable("destroy"),n&&"string"==typeof e&&s.resizable("option","handles",e),n||e===!1||this._makeResizable()),"title"===t&&this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))},_size:function(){var t,e,i,n=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0}),n.minWidth>n.width&&(n.width=n.minWidth),t=this.uiDialog.css({height:"auto",width:n.width}).outerHeight(),e=Math.max(0,n.minHeight-t),i="number"==typeof n.maxHeight?Math.max(0,n.maxHeight-t):"none","auto"===n.height?this.element.css({minHeight:e,maxHeight:i,height:"auto"}):this.element.height(Math.max(0,n.height-t)),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find("iframe").map(function(){var e=t(this);return t("<div>").css({position:"absolute",width:e.outerWidth(),height:e.outerHeight()}).appendTo(e.parent()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(e){return t(e.target).closest(".ui-dialog").length?!0:!!t(e.target).closest(".ui-datepicker").length},_createOverlay:function(){if(this.options.modal){var e=!0;this._delay(function(){e=!1}),this.document.data("ui-dialog-overlays")||this._on(this.document,{focusin:function(t){e||this._allowInteraction(t)||(t.preventDefault(),this._trackingInstances()[0]._focusTabbable())}}),this.overlay=t("<div>").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo()),this._on(this.overlay,{mousedown:"_keepFocus"}),this.document.data("ui-dialog-overlays",(this.document.data("ui-dialog-overlays")||0)+1)}},_destroyOverlay:function(){if(this.options.modal&&this.overlay){var t=this.document.data("ui-dialog-overlays")-1;t?this.document.data("ui-dialog-overlays",t):this.document.unbind("focusin").removeData("ui-dialog-overlays"),this.overlay.remove(),this.overlay=null}}});t.widget("ui.droppable",{version:"1.11.4",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var e,i=this.options,n=i.accept;this.isover=!1,this.isout=!0,this.accept=t.isFunction(n)?n:function(t){return t.is(n)},this.proportions=function(){return arguments.length?void(e=arguments[0]):e?e:e={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}},this._addToManager(i.scope),i.addClasses&&this.element.addClass("ui-droppable")},_addToManager:function(e){t.ui.ddmanager.droppables[e]=t.ui.ddmanager.droppables[e]||[],t.ui.ddmanager.droppables[e].push(this)},_splice:function(t){for(var e=0;e<t.length;e++)t[e]===this&&t.splice(e,1)},_destroy:function(){var e=t.ui.ddmanager.droppables[this.options.scope];this._splice(e),this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(e,i){if("accept"===e)this.accept=t.isFunction(i)?i:function(t){return t.is(i)};else if("scope"===e){var n=t.ui.ddmanager.droppables[this.options.scope];this._splice(n),this._addToManager(i)}this._super(e,i)},_activate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),i&&this._trigger("activate",e,this.ui(i))},_deactivate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),i&&this._trigger("deactivate",e,this.ui(i))},_over:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",e,this.ui(i)))},_out:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",e,this.ui(i)))},_drop:function(e,i){var n=i||t.ui.ddmanager.current,s=!1;return n&&(n.currentItem||n.element)[0]!==this.element[0]?(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var i=t(this).droppable("instance");return i.options.greedy&&!i.options.disabled&&i.options.scope===n.options.scope&&i.accept.call(i.element[0],n.currentItem||n.element)&&t.ui.intersect(n,t.extend(i,{offset:i.element.offset()}),i.options.tolerance,e)?(s=!0,!1):void 0}),s?!1:this.accept.call(this.element[0],n.currentItem||n.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",e,this.ui(n)),this.element):!1):!1},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}}}),t.ui.intersect=function(){function t(t,e,i){return t>=e&&e+i>t}return function(e,i,n,s){if(!i.offset)return!1;var r=(e.positionAbs||e.position.absolute).left+e.margins.left,o=(e.positionAbs||e.position.absolute).top+e.margins.top,a=r+e.helperProportions.width,l=o+e.helperProportions.height,u=i.offset.left,h=i.offset.top,c=u+i.proportions().width,d=h+i.proportions().height;switch(n){case"fit":return r>=u&&c>=a&&o>=h&&d>=l;case"intersect":return u<r+e.helperProportions.width/2&&a-e.helperProportions.width/2<c&&h<o+e.helperProportions.height/2&&l-e.helperProportions.height/2<d;case"pointer":return t(s.pageY,h,i.proportions().height)&&t(s.pageX,u,i.proportions().width);case"touch":return(o>=h&&d>=o||l>=h&&d>=l||h>o&&l>d)&&(r>=u&&c>=r||a>=u&&c>=a||u>r&&a>c);default:return!1}}}(),t.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(e,i){var n,s,r=t.ui.ddmanager.droppables[e.options.scope]||[],o=i?i.type:null,a=(e.currentItem||e.element).find(":data(ui-droppable)").addBack();t:for(n=0;n<r.length;n++)if(!(r[n].options.disabled||e&&!r[n].accept.call(r[n].element[0],e.currentItem||e.element))){for(s=0;s<a.length;s++)if(a[s]===r[n].element[0]){r[n].proportions().height=0;continue t}r[n].visible="none"!==r[n].element.css("display"),r[n].visible&&("mousedown"===o&&r[n]._activate.call(r[n],i),r[n].offset=r[n].element.offset(),r[n].proportions({width:r[n].element[0].offsetWidth,height:r[n].element[0].offsetHeight}))}},drop:function(e,i){var n=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&t.ui.intersect(e,this,this.options.tolerance,i)&&(n=this._drop.call(this,i)||n),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),n},dragStart:function(e,i){e.element.parentsUntil("body").bind("scroll.droppable",function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)})},drag:function(e,i){e.options.refreshPositions&&t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var n,s,r,o=t.ui.intersect(e,this,this.options.tolerance,i),a=!o&&this.isover?"isout":o&&!this.isover?"isover":null;a&&(this.options.greedy&&(s=this.options.scope,r=this.element.parents(":data(ui-droppable)").filter(function(){return t(this).droppable("instance").options.scope===s}),r.length&&(n=t(r[0]).droppable("instance"),n.greedyChild="isover"===a)),n&&"isover"===a&&(n.isover=!1,n.isout=!0,n._out.call(n,i)),this[a]=!0,this["isout"===a?"isover":"isout"]=!1,this["isover"===a?"_over":"_out"].call(this,i),n&&"isout"===a&&(n.isout=!1,n.isover=!0,n._over.call(n,i)))}})},dragStop:function(e,i){e.element.parentsUntil("body").unbind("scroll.droppable"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}};var y=(t.ui.droppable,"ui-effects-"),_=t;t.effects={effect:{}},function(t,e){function i(t,e,i){var n=c[e.type]||{};return null==t?i||!e.def?null:e.def:(t=n.floor?~~t:parseFloat(t),isNaN(t)?e.def:n.mod?(t+n.mod)%n.mod:0>t?0:n.max<t?n.max:t)}function n(e){var i=u(),n=i._rgba=[];return e=e.toLowerCase(),p(l,function(t,s){var r,o=s.re.exec(e),a=o&&s.parse(o),l=s.space||"rgba";return a?(r=i[l](a),i[h[l].cache]=r[h[l].cache],n=i._rgba=r._rgba,!1):void 0}),n.length?("0,0,0,0"===n.join()&&t.extend(n,r.transparent),i):r[e]}function s(t,e,i){return i=(i+1)%1,1>6*i?t+(e-t)*i*6:1>2*i?e:2>3*i?t+(e-t)*(2/3-i)*6:t}var r,o="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",a=/^([\-+])=\s*(\d+\.?\d*)/,l=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],u=t.Color=function(e,i,n,s){return new t.Color.fn.parse(e,i,n,s)},h={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},c={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=u.support={},f=t("<p>")[0],p=t.each;f.style.cssText="background-color:rgba(1,1,1,.5)",d.rgba=f.style.backgroundColor.indexOf("rgba")>-1,p(h,function(t,e){e.cache="_"+t,e.props.alpha={idx:3,type:"percent",def:1}}),u.fn=t.extend(u.prototype,{parse:function(s,o,a,l){if(s===e)return this._rgba=[null,null,null,null],this;(s.jquery||s.nodeType)&&(s=t(s).css(o),o=e);var c=this,d=t.type(s),f=this._rgba=[];return o!==e&&(s=[s,o,a,l],d="array"),"string"===d?this.parse(n(s)||r._default):"array"===d?(p(h.rgba.props,function(t,e){f[e.idx]=i(s[e.idx],e)}),this):"object"===d?(s instanceof u?p(h,function(t,e){s[e.cache]&&(c[e.cache]=s[e.cache].slice())}):p(h,function(e,n){var r=n.cache;p(n.props,function(t,e){if(!c[r]&&n.to){if("alpha"===t||null==s[t])return;c[r]=n.to(c._rgba)}c[r][e.idx]=i(s[t],e,!0)}),c[r]&&t.inArray(null,c[r].slice(0,3))<0&&(c[r][3]=1,n.from&&(c._rgba=n.from(c[r])))}),this):void 0},is:function(t){var e=u(t),i=!0,n=this;return p(h,function(t,s){var r,o=e[s.cache];return o&&(r=n[s.cache]||s.to&&s.to(n._rgba)||[],p(s.props,function(t,e){return null!=o[e.idx]?i=o[e.idx]===r[e.idx]:void 0})),i}),i},_space:function(){var t=[],e=this;return p(h,function(i,n){e[n.cache]&&t.push(i)}),t.pop()},transition:function(t,e){var n=u(t),s=n._space(),r=h[s],o=0===this.alpha()?u("transparent"):this,a=o[r.cache]||r.to(o._rgba),l=a.slice();return n=n[r.cache],p(r.props,function(t,s){var r=s.idx,o=a[r],u=n[r],h=c[s.type]||{};null!==u&&(null===o?l[r]=u:(h.mod&&(u-o>h.mod/2?o+=h.mod:o-u>h.mod/2&&(o-=h.mod)),l[r]=i((u-o)*e+o,s)))}),this[s](l)},blend:function(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),n=i.pop(),s=u(e)._rgba;return u(t.map(i,function(t,e){return(1-n)*s[e]+n*t}))},toRgbaString:function(){var e="rgba(",i=t.map(this._rgba,function(t,e){return null==t?e>2?1:0:t});return 1===i[3]&&(i.pop(),e="rgb("),e+i.join()+")"},toHslaString:function(){var e="hsla(",i=t.map(this.hsla(),function(t,e){return null==t&&(t=e>2?1:0),e&&3>e&&(t=Math.round(100*t)+"%"),t});return 1===i[3]&&(i.pop(),e="hsl("),e+i.join()+")"},toHexString:function(e){var i=this._rgba.slice(),n=i.pop();return e&&i.push(~~(255*n)),"#"+t.map(i,function(t){return t=(t||0).toString(16),1===t.length?"0"+t:t}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),u.fn.parse.prototype=u.fn,h.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,n=t[0]/255,s=t[1]/255,r=t[2]/255,o=t[3],a=Math.max(n,s,r),l=Math.min(n,s,r),u=a-l,h=a+l,c=.5*h;return e=l===a?0:n===a?60*(s-r)/u+360:s===a?60*(r-n)/u+120:60*(n-s)/u+240,i=0===u?0:.5>=c?u/h:u/(2-h),[Math.round(e)%360,i,c,null==o?1:o]},h.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],n=t[2],r=t[3],o=.5>=n?n*(1+i):n+i-n*i,a=2*n-o;return[Math.round(255*s(a,o,e+1/3)),Math.round(255*s(a,o,e)),Math.round(255*s(a,o,e-1/3)),r]},p(h,function(n,s){var r=s.props,o=s.cache,l=s.to,h=s.from;u.fn[n]=function(n){if(l&&!this[o]&&(this[o]=l(this._rgba)),n===e)return this[o].slice();var s,a=t.type(n),c="array"===a||"object"===a?n:arguments,d=this[o].slice();return p(r,function(t,e){var n=c["object"===a?t:e.idx];null==n&&(n=d[e.idx]),d[e.idx]=i(n,e)}),h?(s=u(h(d)),s[o]=d,s):u(d)},p(r,function(e,i){u.fn[e]||(u.fn[e]=function(s){var r,o=t.type(s),l="alpha"===e?this._hsla?"hsla":"rgba":n,u=this[l](),h=u[i.idx];return"undefined"===o?h:("function"===o&&(s=s.call(this,h),o=t.type(s)),null==s&&i.empty?this:("string"===o&&(r=a.exec(s),r&&(s=h+parseFloat(r[2])*("+"===r[1]?1:-1))),u[i.idx]=s,this[l](u)))})})}),u.hook=function(e){var i=e.split(" ");p(i,function(e,i){t.cssHooks[i]={set:function(e,s){var r,o,a="";if("transparent"!==s&&("string"!==t.type(s)||(r=n(s)))){if(s=u(r||s),!d.rgba&&1!==s._rgba[3]){for(o="backgroundColor"===i?e.parentNode:e;(""===a||"transparent"===a)&&o&&o.style;)try{a=t.css(o,"backgroundColor"),o=o.parentNode}catch(l){}s=s.blend(a&&"transparent"!==a?a:"_default")}s=s.toRgbaString()}try{e.style[i]=s}catch(l){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=u(e.elem,i),e.end=u(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos))}})},u.hook(o),t.cssHooks.borderColor={expand:function(t){var e={};return p(["Top","Right","Bottom","Left"],function(i,n){e["border"+n+"Color"]=t}),e}},r=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(_),function(){function e(e){var i,n,s=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,r={};if(s&&s.length&&s[0]&&s[s[0]])for(n=s.length;n--;)i=s[n],"string"==typeof s[i]&&(r[t.camelCase(i)]=s[i]);else for(i in s)"string"==typeof s[i]&&(r[i]=s[i]);return r}function i(e,i){var n,r,o={};for(n in i)r=i[n],e[n]!==r&&(s[n]||(t.fx.step[n]||!isNaN(parseFloat(r)))&&(o[n]=r));return o}var n=["add","remove","toggle"],s={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(e,i){t.fx.step[i]=function(t){("none"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(_.style(t.elem,i,t.end),t.setAttr=!0)}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(s,r,o,a){var l=t.speed(r,o,a);return this.queue(function(){var r,o=t(this),a=o.attr("class")||"",u=l.children?o.find("*").addBack():o;u=u.map(function(){var i=t(this);return{el:i,start:e(this)}}),r=function(){t.each(n,function(t,e){s[e]&&o[e+"Class"](s[e])});
},r(),u=u.map(function(){return this.end=e(this.el[0]),this.diff=i(this.start,this.end),this}),o.attr("class",a),u=u.map(function(){var e=this,i=t.Deferred(),n=t.extend({},l,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,n),i.promise()}),t.when.apply(t,u.get()).done(function(){r(),t.each(arguments,function(){var e=this.el;t.each(this.diff,function(t){e.css(t,"")})}),l.complete.call(o[0])})})},t.fn.extend({addClass:function(e){return function(i,n,s,r){return n?t.effects.animateClass.call(this,{add:i},n,s,r):e.apply(this,arguments)}}(t.fn.addClass),removeClass:function(e){return function(i,n,s,r){return arguments.length>1?t.effects.animateClass.call(this,{remove:i},n,s,r):e.apply(this,arguments)}}(t.fn.removeClass),toggleClass:function(e){return function(i,n,s,r,o){return"boolean"==typeof n||void 0===n?s?t.effects.animateClass.call(this,n?{add:i}:{remove:i},s,r,o):e.apply(this,arguments):t.effects.animateClass.call(this,{toggle:i},n,s,r)}}(t.fn.toggleClass),switchClass:function(e,i,n,s,r){return t.effects.animateClass.call(this,{add:i,remove:e},n,s,r)}})}(),function(){function e(e,i,n,s){return t.isPlainObject(e)&&(i=e,e=e.effect),e={effect:e},null==i&&(i={}),t.isFunction(i)&&(s=i,n=null,i={}),("number"==typeof i||t.fx.speeds[i])&&(s=n,n=i,i={}),t.isFunction(n)&&(s=n,n=null),i&&t.extend(e,i),n=n||i.duration,e.duration=t.fx.off?0:"number"==typeof n?n:n in t.fx.speeds?t.fx.speeds[n]:t.fx.speeds._default,e.complete=s||i.complete,e}function i(e){return!e||"number"==typeof e||t.fx.speeds[e]?!0:"string"!=typeof e||t.effects.effect[e]?t.isFunction(e)?!0:"object"!=typeof e||e.effect?!1:!0:!0}t.extend(t.effects,{version:"1.11.4",save:function(t,e){for(var i=0;i<e.length;i++)null!==e[i]&&t.data(y+e[i],t[0].style[e[i]])},restore:function(t,e){var i,n;for(n=0;n<e.length;n++)null!==e[n]&&(i=t.data(y+e[n]),void 0===i&&(i=""),t.css(e[n],i))},setMode:function(t,e){return"toggle"===e&&(e=t.is(":hidden")?"show":"hide"),e},getBaseline:function(t,e){var i,n;switch(t[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=t[0]/e.height}switch(t[1]){case"left":n=0;break;case"center":n=.5;break;case"right":n=1;break;default:n=t[1]/e.width}return{x:n,y:i}},createWrapper:function(e){if(e.parent().is(".ui-effects-wrapper"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),"float":e.css("float")},n=t("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),s={width:e.width(),height:e.height()},r=document.activeElement;try{r.id}catch(o){r=document.body}return e.wrap(n),(e[0]===r||t.contains(e[0],r))&&t(r).focus(),n=e.parent(),"static"===e.css("position")?(n.css({position:"relative"}),e.css({position:"relative"})):(t.extend(i,{position:e.css("position"),zIndex:e.css("z-index")}),t.each(["top","left","bottom","right"],function(t,n){i[n]=e.css(n),isNaN(parseInt(i[n],10))&&(i[n]="auto")}),e.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),e.css(s),n.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(".ui-effects-wrapper")&&(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&&t(i).focus()),e},setTransition:function(e,i,n,s){return s=s||{},t.each(i,function(t,i){var r=e.cssUnit(i);r[0]>0&&(s[i]=r[0]*n+r[1])}),s}}),t.fn.extend({effect:function(){function i(e){function i(){t.isFunction(r)&&r.call(s[0]),t.isFunction(e)&&e()}var s=t(this),r=n.complete,a=n.mode;(s.is(":hidden")?"hide"===a:"show"===a)?(s[a](),i()):o.call(s[0],n,i)}var n=e.apply(this,arguments),s=n.mode,r=n.queue,o=t.effects.effect[n.effect];return t.fx.off||!o?s?this[s](n.duration,n.complete):this.each(function(){n.complete&&n.complete.call(this)}):r===!1?this.each(i):this.queue(r||"fx",i)},show:function(t){return function(n){if(i(n))return t.apply(this,arguments);var s=e.apply(this,arguments);return s.mode="show",this.effect.call(this,s)}}(t.fn.show),hide:function(t){return function(n){if(i(n))return t.apply(this,arguments);var s=e.apply(this,arguments);return s.mode="hide",this.effect.call(this,s)}}(t.fn.hide),toggle:function(t){return function(n){if(i(n)||"boolean"==typeof n)return t.apply(this,arguments);var s=e.apply(this,arguments);return s.mode="toggle",this.effect.call(this,s)}}(t.fn.toggle),cssUnit:function(e){var i=this.css(e),n=[];return t.each(["em","px","%","pt"],function(t,e){i.indexOf(e)>0&&(n=[parseFloat(i),e])}),n}})}(),function(){var e={};t.each(["Quad","Cubic","Quart","Quint","Expo"],function(t,i){e[i]=function(e){return Math.pow(e,t+2)}}),t.extend(e,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;t<((e=Math.pow(2,--i))-1)/11;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(e,function(e,i){t.easing["easeIn"+e]=i,t.easing["easeOut"+e]=function(t){return 1-i(1-t)},t.easing["easeInOut"+e]=function(t){return.5>t?i(2*t)/2:1-i(-2*t+2)/2}})}();t.effects,t.effects.effect.blind=function(e,i){var n,s,r,o=t(this),a=/up|down|vertical/,l=/up|left|vertical|horizontal/,u=["position","top","bottom","left","right","height","width"],h=t.effects.setMode(o,e.mode||"hide"),c=e.direction||"up",d=a.test(c),f=d?"height":"width",p=d?"top":"left",m=l.test(c),g={},v="show"===h;o.parent().is(".ui-effects-wrapper")?t.effects.save(o.parent(),u):t.effects.save(o,u),o.show(),n=t.effects.createWrapper(o).css({overflow:"hidden"}),s=n[f](),r=parseFloat(n.css(p))||0,g[f]=v?s:0,m||(o.css(d?"bottom":"right",0).css(d?"top":"left","auto").css({position:"absolute"}),g[p]=v?r:s+r),v&&(n.css(f,0),m||n.css(p,r+s)),n.animate(g,{duration:e.duration,easing:e.easing,queue:!1,complete:function(){"hide"===h&&o.hide(),t.effects.restore(o,u),t.effects.removeWrapper(o),i()}})},t.effects.effect.bounce=function(e,i){var n,s,r,o=t(this),a=["position","top","bottom","left","right","height","width"],l=t.effects.setMode(o,e.mode||"effect"),u="hide"===l,h="show"===l,c=e.direction||"up",d=e.distance,f=e.times||5,p=2*f+(h||u?1:0),m=e.duration/p,g=e.easing,v="up"===c||"down"===c?"top":"left",y="up"===c||"left"===c,_=o.queue(),b=_.length;for((h||u)&&a.push("opacity"),t.effects.save(o,a),o.show(),t.effects.createWrapper(o),d||(d=o["top"===v?"outerHeight":"outerWidth"]()/3),h&&(r={opacity:1},r[v]=0,o.css("opacity",0).css(v,y?2*-d:2*d).animate(r,m,g)),u&&(d/=Math.pow(2,f-1)),r={},r[v]=0,n=0;f>n;n++)s={},s[v]=(y?"-=":"+=")+d,o.animate(s,m,g).animate(r,m,g),d=u?2*d:d/2;u&&(s={opacity:0},s[v]=(y?"-=":"+=")+d,o.animate(s,m,g)),o.queue(function(){u&&o.hide(),t.effects.restore(o,a),t.effects.removeWrapper(o),i()}),b>1&&_.splice.apply(_,[1,0].concat(_.splice(b,p+1))),o.dequeue()},t.effects.effect.clip=function(e,i){var n,s,r,o=t(this),a=["position","top","bottom","left","right","height","width"],l=t.effects.setMode(o,e.mode||"hide"),u="show"===l,h=e.direction||"vertical",c="vertical"===h,d=c?"height":"width",f=c?"top":"left",p={};t.effects.save(o,a),o.show(),n=t.effects.createWrapper(o).css({overflow:"hidden"}),s="IMG"===o[0].tagName?n:o,r=s[d](),u&&(s.css(d,0),s.css(f,r/2)),p[d]=u?r:0,p[f]=u?0:r/2,s.animate(p,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){u||o.hide(),t.effects.restore(o,a),t.effects.removeWrapper(o),i()}})},t.effects.effect.drop=function(e,i){var n,s=t(this),r=["position","top","bottom","left","right","opacity","height","width"],o=t.effects.setMode(s,e.mode||"hide"),a="show"===o,l=e.direction||"left",u="up"===l||"down"===l?"top":"left",h="up"===l||"left"===l?"pos":"neg",c={opacity:a?1:0};t.effects.save(s,r),s.show(),t.effects.createWrapper(s),n=e.distance||s["top"===u?"outerHeight":"outerWidth"](!0)/2,a&&s.css("opacity",0).css(u,"pos"===h?-n:n),c[u]=(a?"pos"===h?"+=":"-=":"pos"===h?"-=":"+=")+n,s.animate(c,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){"hide"===o&&s.hide(),t.effects.restore(s,r),t.effects.removeWrapper(s),i()}})},t.effects.effect.explode=function(e,i){function n(){_.push(this),_.length===c*d&&s()}function s(){f.css({visibility:"visible"}),t(_).remove(),m||f.hide(),i()}var r,o,a,l,u,h,c=e.pieces?Math.round(Math.sqrt(e.pieces)):3,d=c,f=t(this),p=t.effects.setMode(f,e.mode||"hide"),m="show"===p,g=f.show().css("visibility","hidden").offset(),v=Math.ceil(f.outerWidth()/d),y=Math.ceil(f.outerHeight()/c),_=[];for(r=0;c>r;r++)for(l=g.top+r*y,h=r-(c-1)/2,o=0;d>o;o++)a=g.left+o*v,u=o-(d-1)/2,f.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-o*v,top:-r*y}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:v,height:y,left:a+(m?u*v:0),top:l+(m?h*y:0),opacity:m?0:1}).animate({left:a+(m?0:u*v),top:l+(m?0:h*y),opacity:m?1:0},e.duration||500,e.easing,n)},t.effects.effect.fade=function(e,i){var n=t(this),s=t.effects.setMode(n,e.mode||"toggle");n.animate({opacity:s},{queue:!1,duration:e.duration,easing:e.easing,complete:i})},t.effects.effect.fold=function(e,i){var n,s,r=t(this),o=["position","top","bottom","left","right","height","width"],a=t.effects.setMode(r,e.mode||"hide"),l="show"===a,u="hide"===a,h=e.size||15,c=/([0-9]+)%/.exec(h),d=!!e.horizFirst,f=l!==d,p=f?["width","height"]:["height","width"],m=e.duration/2,g={},v={};t.effects.save(r,o),r.show(),n=t.effects.createWrapper(r).css({overflow:"hidden"}),s=f?[n.width(),n.height()]:[n.height(),n.width()],c&&(h=parseInt(c[1],10)/100*s[u?0:1]),l&&n.css(d?{height:0,width:h}:{height:h,width:0}),g[p[0]]=l?s[0]:h,v[p[1]]=l?s[1]:0,n.animate(g,m,e.easing).animate(v,m,e.easing,function(){u&&r.hide(),t.effects.restore(r,o),t.effects.removeWrapper(r),i()})},t.effects.effect.highlight=function(e,i){var n=t(this),s=["backgroundImage","backgroundColor","opacity"],r=t.effects.setMode(n,e.mode||"show"),o={backgroundColor:n.css("backgroundColor")};"hide"===r&&(o.opacity=0),t.effects.save(n,s),n.show().css({backgroundImage:"none",backgroundColor:e.color||"#ffff99"}).animate(o,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){"hide"===r&&n.hide(),t.effects.restore(n,s),i()}})},t.effects.effect.size=function(e,i){var n,s,r,o=t(this),a=["position","top","bottom","left","right","width","height","overflow","opacity"],l=["position","top","bottom","left","right","overflow","opacity"],u=["width","height","overflow"],h=["fontSize"],c=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],d=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],f=t.effects.setMode(o,e.mode||"effect"),p=e.restore||"effect"!==f,m=e.scale||"both",g=e.origin||["middle","center"],v=o.css("position"),y=p?a:l,_={height:0,width:0,outerHeight:0,outerWidth:0};"show"===f&&o.show(),n={height:o.height(),width:o.width(),outerHeight:o.outerHeight(),outerWidth:o.outerWidth()},"toggle"===e.mode&&"show"===f?(o.from=e.to||_,o.to=e.from||n):(o.from=e.from||("show"===f?_:n),o.to=e.to||("hide"===f?_:n)),r={from:{y:o.from.height/n.height,x:o.from.width/n.width},to:{y:o.to.height/n.height,x:o.to.width/n.width}},("box"===m||"both"===m)&&(r.from.y!==r.to.y&&(y=y.concat(c),o.from=t.effects.setTransition(o,c,r.from.y,o.from),o.to=t.effects.setTransition(o,c,r.to.y,o.to)),r.from.x!==r.to.x&&(y=y.concat(d),o.from=t.effects.setTransition(o,d,r.from.x,o.from),o.to=t.effects.setTransition(o,d,r.to.x,o.to))),("content"===m||"both"===m)&&r.from.y!==r.to.y&&(y=y.concat(h).concat(u),o.from=t.effects.setTransition(o,h,r.from.y,o.from),o.to=t.effects.setTransition(o,h,r.to.y,o.to)),t.effects.save(o,y),o.show(),t.effects.createWrapper(o),o.css("overflow","hidden").css(o.from),g&&(s=t.effects.getBaseline(g,n),o.from.top=(n.outerHeight-o.outerHeight())*s.y,o.from.left=(n.outerWidth-o.outerWidth())*s.x,o.to.top=(n.outerHeight-o.to.outerHeight)*s.y,o.to.left=(n.outerWidth-o.to.outerWidth)*s.x),o.css(o.from),("content"===m||"both"===m)&&(c=c.concat(["marginTop","marginBottom"]).concat(h),d=d.concat(["marginLeft","marginRight"]),u=a.concat(c).concat(d),o.find("*[width]").each(function(){var i=t(this),n={height:i.height(),width:i.width(),outerHeight:i.outerHeight(),outerWidth:i.outerWidth()};p&&t.effects.save(i,u),i.from={height:n.height*r.from.y,width:n.width*r.from.x,outerHeight:n.outerHeight*r.from.y,outerWidth:n.outerWidth*r.from.x},i.to={height:n.height*r.to.y,width:n.width*r.to.x,outerHeight:n.height*r.to.y,outerWidth:n.width*r.to.x},r.from.y!==r.to.y&&(i.from=t.effects.setTransition(i,c,r.from.y,i.from),i.to=t.effects.setTransition(i,c,r.to.y,i.to)),r.from.x!==r.to.x&&(i.from=t.effects.setTransition(i,d,r.from.x,i.from),i.to=t.effects.setTransition(i,d,r.to.x,i.to)),i.css(i.from),i.animate(i.to,e.duration,e.easing,function(){p&&t.effects.restore(i,u)})})),o.animate(o.to,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){0===o.to.opacity&&o.css("opacity",o.from.opacity),"hide"===f&&o.hide(),t.effects.restore(o,y),p||("static"===v?o.css({position:"relative",top:o.to.top,left:o.to.left}):t.each(["top","left"],function(t,e){o.css(e,function(e,i){var n=parseInt(i,10),s=t?o.to.left:o.to.top;return"auto"===i?s+"px":n+s+"px"})})),t.effects.removeWrapper(o),i()}})},t.effects.effect.scale=function(e,i){var n=t(this),s=t.extend(!0,{},e),r=t.effects.setMode(n,e.mode||"effect"),o=parseInt(e.percent,10)||(0===parseInt(e.percent,10)?0:"hide"===r?0:100),a=e.direction||"both",l=e.origin,u={height:n.height(),width:n.width(),outerHeight:n.outerHeight(),outerWidth:n.outerWidth()},h={y:"horizontal"!==a?o/100:1,x:"vertical"!==a?o/100:1};s.effect="size",s.queue=!1,s.complete=i,"effect"!==r&&(s.origin=l||["middle","center"],s.restore=!0),s.from=e.from||("show"===r?{height:0,width:0,outerHeight:0,outerWidth:0}:u),s.to={height:u.height*h.y,width:u.width*h.x,outerHeight:u.outerHeight*h.y,outerWidth:u.outerWidth*h.x},s.fade&&("show"===r&&(s.from.opacity=0,s.to.opacity=1),"hide"===r&&(s.from.opacity=1,s.to.opacity=0)),n.effect(s)},t.effects.effect.puff=function(e,i){var n=t(this),s=t.effects.setMode(n,e.mode||"hide"),r="hide"===s,o=parseInt(e.percent,10)||150,a=o/100,l={height:n.height(),width:n.width(),outerHeight:n.outerHeight(),outerWidth:n.outerWidth()};t.extend(e,{effect:"scale",queue:!1,fade:!0,mode:s,complete:i,percent:r?o:100,from:r?l:{height:l.height*a,width:l.width*a,outerHeight:l.outerHeight*a,outerWidth:l.outerWidth*a}}),n.effect(e)},t.effects.effect.pulsate=function(e,i){var n,s=t(this),r=t.effects.setMode(s,e.mode||"show"),o="show"===r,a="hide"===r,l=o||"hide"===r,u=2*(e.times||5)+(l?1:0),h=e.duration/u,c=0,d=s.queue(),f=d.length;for((o||!s.is(":visible"))&&(s.css("opacity",0).show(),c=1),n=1;u>n;n++)s.animate({opacity:c},h,e.easing),c=1-c;s.animate({opacity:c},h,e.easing),s.queue(function(){a&&s.hide(),i()}),f>1&&d.splice.apply(d,[1,0].concat(d.splice(f,u+1))),s.dequeue()},t.effects.effect.shake=function(e,i){var n,s=t(this),r=["position","top","bottom","left","right","height","width"],o=t.effects.setMode(s,e.mode||"effect"),a=e.direction||"left",l=e.distance||20,u=e.times||3,h=2*u+1,c=Math.round(e.duration/h),d="up"===a||"down"===a?"top":"left",f="up"===a||"left"===a,p={},m={},g={},v=s.queue(),y=v.length;for(t.effects.save(s,r),s.show(),t.effects.createWrapper(s),p[d]=(f?"-=":"+=")+l,m[d]=(f?"+=":"-=")+2*l,g[d]=(f?"-=":"+=")+2*l,s.animate(p,c,e.easing),n=1;u>n;n++)s.animate(m,c,e.easing).animate(g,c,e.easing);s.animate(m,c,e.easing).animate(p,c/2,e.easing).queue(function(){"hide"===o&&s.hide(),t.effects.restore(s,r),t.effects.removeWrapper(s),i()}),y>1&&v.splice.apply(v,[1,0].concat(v.splice(y,h+1))),s.dequeue()},t.effects.effect.slide=function(e,i){var n,s=t(this),r=["position","top","bottom","left","right","width","height"],o=t.effects.setMode(s,e.mode||"show"),a="show"===o,l=e.direction||"left",u="up"===l||"down"===l?"top":"left",h="up"===l||"left"===l,c={};t.effects.save(s,r),s.show(),n=e.distance||s["top"===u?"outerHeight":"outerWidth"](!0),t.effects.createWrapper(s).css({overflow:"hidden"}),a&&s.css(u,h?isNaN(n)?"-"+n:-n:n),c[u]=(a?h?"+=":"-=":h?"-=":"+=")+n,s.animate(c,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){"hide"===o&&s.hide(),t.effects.restore(s,r),t.effects.removeWrapper(s),i()}})},t.effects.effect.transfer=function(e,i){var n=t(this),s=t(e.to),r="fixed"===s.css("position"),o=t("body"),a=r?o.scrollTop():0,l=r?o.scrollLeft():0,u=s.offset(),h={top:u.top-a,left:u.left-l,height:s.innerHeight(),width:s.innerWidth()},c=n.offset(),d=t("<div class='ui-effects-transfer'></div>").appendTo(document.body).addClass(e.className).css({top:c.top-a,left:c.left-l,height:n.innerHeight(),width:n.innerWidth(),position:r?"fixed":"absolute"}).animate(h,e.duration,e.easing,function(){d.remove(),i()})},t.widget("ui.progressbar",{version:"1.11.4",options:{max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min}),this.valueDiv=t("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element),this._refreshValue()},_destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.valueDiv.remove()},value:function(t){return void 0===t?this.options.value:(this.options.value=this._constrainedValue(t),void this._refreshValue())},_constrainedValue:function(t){return void 0===t&&(t=this.options.value),this.indeterminate=t===!1,"number"!=typeof t&&(t=0),this.indeterminate?!1:Math.min(this.options.max,Math.max(this.min,t))},_setOptions:function(t){var e=t.value;delete t.value,this._super(t),this.options.value=this._constrainedValue(e),this._refreshValue()},_setOption:function(t,e){"max"===t&&(e=Math.max(this.min,e)),"disabled"===t&&this.element.toggleClass("ui-state-disabled",!!e).attr("aria-disabled",e),this._super(t,e)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var e=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||e>this.min).toggleClass("ui-corner-right",e===this.options.max).width(i.toFixed(0)+"%"),this.element.toggleClass("ui-progressbar-indeterminate",this.indeterminate),this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||(this.overlayDiv=t("<div class='ui-progressbar-overlay'></div>").appendTo(this.valueDiv))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":e}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==e&&(this.oldValue=e,this._trigger("change")),e===this.options.max&&this._trigger("complete")}}),t.widget("ui.selectable",t.ui.mouse,{version:"1.11.4",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var e,i=this;this.element.addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){e=t(i.options.filter,i.element[0]),e.addClass("ui-selectee"),e.each(function(){var e=t(this),i=e.offset();t.data(this,"selectable-item",{element:this,$element:e,left:i.left,top:i.top,right:i.left+e.outerWidth(),bottom:i.top+e.outerHeight(),startselected:!1,selected:e.hasClass("ui-selected"),selecting:e.hasClass("ui-selecting"),unselecting:e.hasClass("ui-unselecting")})})},this.refresh(),this.selectees=e.addClass("ui-selectee"),this._mouseInit(),this.helper=t("<div class='ui-selectable-helper'></div>")},_destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item"),this.element.removeClass("ui-selectable ui-selectable-disabled"),this._mouseDestroy()},_mouseStart:function(e){var i=this,n=this.options;this.opos=[e.pageX,e.pageY],this.options.disabled||(this.selectees=t(n.filter,this.element[0]),this._trigger("start",e),t(n.appendTo).append(this.helper),this.helper.css({left:e.pageX,top:e.pageY,width:0,height:0}),n.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var n=t.data(this,"selectable-item");n.startselected=!0,e.metaKey||e.ctrlKey||(n.$element.removeClass("ui-selected"),n.selected=!1,n.$element.addClass("ui-unselecting"),n.unselecting=!0,i._trigger("unselecting",e,{unselecting:n.element}))}),t(e.target).parents().addBack().each(function(){var n,s=t.data(this,"selectable-item");return s?(n=!e.metaKey&&!e.ctrlKey||!s.$element.hasClass("ui-selected"),s.$element.removeClass(n?"ui-unselecting":"ui-selected").addClass(n?"ui-selecting":"ui-unselecting"),s.unselecting=!n,s.selecting=n,s.selected=n,n?i._trigger("selecting",e,{selecting:s.element}):i._trigger("unselecting",e,{unselecting:s.element}),!1):void 0}))},_mouseDrag:function(e){if(this.dragged=!0,!this.options.disabled){var i,n=this,s=this.options,r=this.opos[0],o=this.opos[1],a=e.pageX,l=e.pageY;return r>a&&(i=a,a=r,r=i),o>l&&(i=l,l=o,o=i),this.helper.css({left:r,top:o,width:a-r,height:l-o}),this.selectees.each(function(){var i=t.data(this,"selectable-item"),u=!1;i&&i.element!==n.element[0]&&("touch"===s.tolerance?u=!(i.left>a||i.right<r||i.top>l||i.bottom<o):"fit"===s.tolerance&&(u=i.left>r&&i.right<a&&i.top>o&&i.bottom<l),u?(i.selected&&(i.$element.removeClass("ui-selected"),i.selected=!1),i.unselecting&&(i.$element.removeClass("ui-unselecting"),i.unselecting=!1),i.selecting||(i.$element.addClass("ui-selecting"),i.selecting=!0,n._trigger("selecting",e,{selecting:i.element}))):(i.selecting&&((e.metaKey||e.ctrlKey)&&i.startselected?(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.$element.addClass("ui-selected"),i.selected=!0):(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.startselected&&(i.$element.addClass("ui-unselecting"),i.unselecting=!0),n._trigger("unselecting",e,{unselecting:i.element}))),i.selected&&(e.metaKey||e.ctrlKey||i.startselected||(i.$element.removeClass("ui-selected"),i.selected=!1,i.$element.addClass("ui-unselecting"),i.unselecting=!0,n._trigger("unselecting",e,{unselecting:i.element})))))}),!1}},_mouseStop:function(e){var i=this;return this.dragged=!1,t(".ui-unselecting",this.element[0]).each(function(){var n=t.data(this,"selectable-item");n.$element.removeClass("ui-unselecting"),n.unselecting=!1,n.startselected=!1,i._trigger("unselected",e,{unselected:n.element})}),t(".ui-selecting",this.element[0]).each(function(){var n=t.data(this,"selectable-item");n.$element.removeClass("ui-selecting").addClass("ui-selected"),n.selecting=!1,n.selected=!0,n.startselected=!0,i._trigger("selected",e,{selected:n.element})}),this._trigger("stop",e),this.helper.remove(),!1}}),t.widget("ui.selectmenu",{version:"1.11.4",defaultElement:"<select>",options:{appendTo:null,disabled:null,icons:{button:"ui-icon-triangle-1-s"},position:{my:"left top",at:"left bottom",collision:"none"},width:null,change:null,close:null,focus:null,open:null,select:null},_create:function(){var t=this.element.uniqueId().attr("id");this.ids={element:t,button:t+"-button",menu:t+"-menu"},this._drawButton(),this._drawMenu(),this.options.disabled&&this.disable()},_drawButton:function(){var e=this;this.label=t("label[for='"+this.ids.element+"']").attr("for",this.ids.button),this._on(this.label,{click:function(t){this.button.focus(),t.preventDefault()}}),this.element.hide(),this.button=t("<span>",{"class":"ui-selectmenu-button ui-widget ui-state-default ui-corner-all",tabindex:this.options.disabled?-1:0,id:this.ids.button,role:"combobox","aria-expanded":"false","aria-autocomplete":"list","aria-owns":this.ids.menu,"aria-haspopup":"true"}).insertAfter(this.element),t("<span>",{"class":"ui-icon "+this.options.icons.button}).prependTo(this.button),this.buttonText=t("<span>",{"class":"ui-selectmenu-text"}).appendTo(this.button),this._setText(this.buttonText,this.element.find("option:selected").text()),this._resizeButton(),this._on(this.button,this._buttonEvents),this.button.one("focusin",function(){e.menuItems||e._refreshMenu()}),this._hoverable(this.button),this._focusable(this.button)},_drawMenu:function(){var e=this;this.menu=t("<ul>",{"aria-hidden":"true","aria-labelledby":this.ids.button,id:this.ids.menu}),this.menuWrap=t("<div>",{"class":"ui-selectmenu-menu ui-front"}).append(this.menu).appendTo(this._appendTo()),this.menuInstance=this.menu.menu({role:"listbox",select:function(t,i){t.preventDefault(),e._setSelection(),e._select(i.item.data("ui-selectmenu-item"),t)},focus:function(t,i){var n=i.item.data("ui-selectmenu-item");null!=e.focusIndex&&n.index!==e.focusIndex&&(e._trigger("focus",t,{item:n}),e.isOpen||e._select(n,t)),e.focusIndex=n.index,e.button.attr("aria-activedescendant",e.menuItems.eq(n.index).attr("id"))}}).menu("instance"),this.menu.addClass("ui-corner-bottom").removeClass("ui-corner-all"),this.menuInstance._off(this.menu,"mouseleave"),this.menuInstance._closeOnDocumentClick=function(){return!1},this.menuInstance._isDivider=function(){return!1}},refresh:function(){this._refreshMenu(),this._setText(this.buttonText,this._getSelectedItem().text()),this.options.width||this._resizeButton()},_refreshMenu:function(){this.menu.empty();var t,e=this.element.find("option");e.length&&(this._parseOptions(e),this._renderMenu(this.menu,this.items),this.menuInstance.refresh(),this.menuItems=this.menu.find("li").not(".ui-selectmenu-optgroup"),t=this._getSelectedItem(),this.menuInstance.focus(null,t),this._setAria(t.data("ui-selectmenu-item")),this._setOption("disabled",this.element.prop("disabled")))},open:function(t){this.options.disabled||(this.menuItems?(this.menu.find(".ui-state-focus").removeClass("ui-state-focus"),this.menuInstance.focus(null,this._getSelectedItem())):this._refreshMenu(),this.isOpen=!0,this._toggleAttr(),this._resizeMenu(),this._position(),this._on(this.document,this._documentClick),this._trigger("open",t))},_position:function(){this.menuWrap.position(t.extend({of:this.button},this.options.position))},close:function(t){this.isOpen&&(this.isOpen=!1,this._toggleAttr(),this.range=null,this._off(this.document),this._trigger("close",t))},widget:function(){return this.button},menuWidget:function(){return this.menu},_renderMenu:function(e,i){var n=this,s="";t.each(i,function(i,r){r.optgroup!==s&&(t("<li>",{"class":"ui-selectmenu-optgroup ui-menu-divider"+(r.element.parent("optgroup").prop("disabled")?" ui-state-disabled":""),text:r.optgroup}).appendTo(e),s=r.optgroup),n._renderItemData(e,r)})},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-selectmenu-item",e)},_renderItem:function(e,i){var n=t("<li>");return i.disabled&&n.addClass("ui-state-disabled"),this._setText(n,i.label),n.appendTo(e)},_setText:function(t,e){e?t.text(e):t.html("&#160;")},_move:function(t,e){var i,n,s=".ui-menu-item";this.isOpen?i=this.menuItems.eq(this.focusIndex):(i=this.menuItems.eq(this.element[0].selectedIndex),s+=":not(.ui-state-disabled)"),n="first"===t||"last"===t?i["first"===t?"prevAll":"nextAll"](s).eq(-1):i[t+"All"](s).eq(0),n.length&&this.menuInstance.focus(e,n)},_getSelectedItem:function(){return this.menuItems.eq(this.element[0].selectedIndex)},_toggle:function(t){this[this.isOpen?"close":"open"](t)},_setSelection:function(){var t;this.range&&(window.getSelection?(t=window.getSelection(),t.removeAllRanges(),t.addRange(this.range)):this.range.select(),this.button.focus())},_documentClick:{mousedown:function(e){this.isOpen&&(t(e.target).closest(".ui-selectmenu-menu, #"+this.ids.button).length||this.close(e))}},_buttonEvents:{mousedown:function(){var t;window.getSelection?(t=window.getSelection(),t.rangeCount&&(this.range=t.getRangeAt(0))):this.range=document.selection.createRange()},click:function(t){this._setSelection(),this._toggle(t)},keydown:function(e){var i=!0;switch(e.keyCode){case t.ui.keyCode.TAB:case t.ui.keyCode.ESCAPE:this.close(e),i=!1;break;case t.ui.keyCode.ENTER:this.isOpen&&this._selectFocusedItem(e);break;case t.ui.keyCode.UP:e.altKey?this._toggle(e):this._move("prev",e);break;case t.ui.keyCode.DOWN:e.altKey?this._toggle(e):this._move("next",e);break;case t.ui.keyCode.SPACE:this.isOpen?this._selectFocusedItem(e):this._toggle(e);break;case t.ui.keyCode.LEFT:this._move("prev",e);break;case t.ui.keyCode.RIGHT:this._move("next",e);break;case t.ui.keyCode.HOME:case t.ui.keyCode.PAGE_UP:this._move("first",e);break;case t.ui.keyCode.END:case t.ui.keyCode.PAGE_DOWN:this._move("last",e);break;default:this.menu.trigger(e),i=!1}i&&e.preventDefault()}},_selectFocusedItem:function(t){var e=this.menuItems.eq(this.focusIndex);e.hasClass("ui-state-disabled")||this._select(e.data("ui-selectmenu-item"),t)},_select:function(t,e){var i=this.element[0].selectedIndex;this.element[0].selectedIndex=t.index,this._setText(this.buttonText,t.label),this._setAria(t),this._trigger("select",e,{item:t}),t.index!==i&&this._trigger("change",e,{item:t}),this.close(e)},_setAria:function(t){var e=this.menuItems.eq(t.index).attr("id");this.button.attr({"aria-labelledby":e,"aria-activedescendant":e}),this.menu.attr("aria-activedescendant",e)},_setOption:function(t,e){"icons"===t&&this.button.find("span.ui-icon").removeClass(this.options.icons.button).addClass(e.button),this._super(t,e),"appendTo"===t&&this.menuWrap.appendTo(this._appendTo()),"disabled"===t&&(this.menuInstance.option("disabled",e),this.button.toggleClass("ui-state-disabled",e).attr("aria-disabled",e),this.element.prop("disabled",e),e?(this.button.attr("tabindex",-1),this.close()):this.button.attr("tabindex",0)),"width"===t&&this._resizeButton()},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(".ui-front")),e.length||(e=this.document[0].body),e},_toggleAttr:function(){this.button.toggleClass("ui-corner-top",this.isOpen).toggleClass("ui-corner-all",!this.isOpen).attr("aria-expanded",this.isOpen),this.menuWrap.toggleClass("ui-selectmenu-open",this.isOpen),this.menu.attr("aria-hidden",!this.isOpen)},_resizeButton:function(){var t=this.options.width;t||(t=this.element.show().outerWidth(),this.element.hide()),this.button.outerWidth(t)},_resizeMenu:function(){this.menu.outerWidth(Math.max(this.button.outerWidth(),this.menu.width("").outerWidth()+1))},_getCreateOptions:function(){return{disabled:this.element.prop("disabled")}},_parseOptions:function(e){var i=[];e.each(function(e,n){var s=t(n),r=s.parent("optgroup");i.push({element:s,index:e,value:s.val(),label:s.text(),optgroup:r.attr("label")||"",disabled:r.prop("disabled")||s.prop("disabled")})}),this.items=i},_destroy:function(){this.menuWrap.remove(),this.button.remove(),this.element.show(),this.element.removeUniqueId(),this.label.attr("for",this.ids.element)}}),t.widget("ui.slider",t.ui.mouse,{version:"1.11.4",widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget ui-widget-content ui-corner-all"),this._refresh(),this._setOption("disabled",this.options.disabled),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var e,i,n=this.options,s=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),r="<span class='ui-slider-handle ui-state-default ui-corner-all' tabindex='0'></span>",o=[];for(i=n.values&&n.values.length||1,s.length>i&&(s.slice(i).remove(),s=s.slice(0,i)),e=s.length;i>e;e++)o.push(r);this.handles=s.add(t(o.join("")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.each(function(e){t(this).data("ui-slider-handle-index",e)})},_createRange:function(){var e=this.options,i="";e.range?(e.range===!0&&(e.values?e.values.length&&2!==e.values.length?e.values=[e.values[0],e.values[0]]:t.isArray(e.values)&&(e.values=e.values.slice(0)):e.values=[this._valueMin(),this._valueMin()]),
this.range&&this.range.length?this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({left:"",bottom:""}):(this.range=t("<div></div>").appendTo(this.element),i="ui-slider-range ui-widget-header ui-corner-all"),this.range.addClass(i+("min"===e.range||"max"===e.range?" ui-slider-range-"+e.range:""))):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all"),this._mouseDestroy()},_mouseCapture:function(e){var i,n,s,r,o,a,l,u,h=this,c=this.options;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:e.pageX,y:e.pageY},n=this._normValueFromMouse(i),s=this._valueMax()-this._valueMin()+1,this.handles.each(function(e){var i=Math.abs(n-h.values(e));(s>i||s===i&&(e===h._lastChangedValue||h.values(e)===c.min))&&(s=i,r=t(this),o=e)}),a=this._start(e,o),a===!1?!1:(this._mouseSliding=!0,this._handleIndex=o,r.addClass("ui-state-active").focus(),l=r.offset(),u=!t(e.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=u?{left:0,top:0}:{left:e.pageX-l.left-r.width()/2,top:e.pageY-l.top-r.height()/2-(parseInt(r.css("borderTopWidth"),10)||0)-(parseInt(r.css("borderBottomWidth"),10)||0)+(parseInt(r.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(e,o,n),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(t){var e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e);return this._slide(t,this._handleIndex,i),!1},_mouseStop:function(t){return this.handles.removeClass("ui-state-active"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(t){var e,i,n,s,r;return"horizontal"===this.orientation?(e=this.elementSize.width,i=t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,i=t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),n=i/e,n>1&&(n=1),0>n&&(n=0),"vertical"===this.orientation&&(n=1-n),s=this._valueMax()-this._valueMin(),r=this._valueMin()+n*s,this._trimAlignValue(r)},_start:function(t,e){var i={handle:this.handles[e],value:this.value()};return this.options.values&&this.options.values.length&&(i.value=this.values(e),i.values=this.values()),this._trigger("start",t,i)},_slide:function(t,e,i){var n,s,r;this.options.values&&this.options.values.length?(n=this.values(e?0:1),2===this.options.values.length&&this.options.range===!0&&(0===e&&i>n||1===e&&n>i)&&(i=n),i!==this.values(e)&&(s=this.values(),s[e]=i,r=this._trigger("slide",t,{handle:this.handles[e],value:i,values:s}),n=this.values(e?0:1),r!==!1&&this.values(e,i))):i!==this.value()&&(r=this._trigger("slide",t,{handle:this.handles[e],value:i}),r!==!1&&this.value(i))},_stop:function(t,e){var i={handle:this.handles[e],value:this.value()};this.options.values&&this.options.values.length&&(i.value=this.values(e),i.values=this.values()),this._trigger("stop",t,i)},_change:function(t,e){if(!this._keySliding&&!this._mouseSliding){var i={handle:this.handles[e],value:this.value()};this.options.values&&this.options.values.length&&(i.value=this.values(e),i.values=this.values()),this._lastChangedValue=e,this._trigger("change",t,i)}},value:function(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),void this._change(null,0)):this._value()},values:function(e,i){var n,s,r;if(arguments.length>1)return this.options.values[e]=this._trimAlignValue(i),this._refreshValue(),void this._change(null,e);if(!arguments.length)return this._values();if(!t.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(e):this.value();for(n=this.options.values,s=arguments[0],r=0;r<n.length;r+=1)n[r]=this._trimAlignValue(s[r]),this._change(null,r);this._refreshValue()},_setOption:function(e,i){var n,s=0;switch("range"===e&&this.options.range===!0&&("min"===i?(this.options.value=this._values(0),this.options.values=null):"max"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),t.isArray(this.options.values)&&(s=this.options.values.length),"disabled"===e&&this.element.toggleClass("ui-state-disabled",!!i),this._super(e,i),e){case"orientation":this._detectOrientation(),this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation),this._refreshValue(),this.handles.css("horizontal"===i?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),n=0;s>n;n+=1)this._change(null,n);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_value:function(){var t=this.options.value;return t=this._trimAlignValue(t)},_values:function(t){var e,i,n;if(arguments.length)return e=this.options.values[t],e=this._trimAlignValue(e);if(this.options.values&&this.options.values.length){for(i=this.options.values.slice(),n=0;n<i.length;n+=1)i[n]=this._trimAlignValue(i[n]);return i}return[]},_trimAlignValue:function(t){if(t<=this._valueMin())return this._valueMin();if(t>=this._valueMax())return this._valueMax();var e=this.options.step>0?this.options.step:1,i=(t-this._valueMin())%e,n=t-i;return 2*Math.abs(i)>=e&&(n+=i>0?e:-e),parseFloat(n.toFixed(5))},_calculateNewMax:function(){var t=this.options.max,e=this._valueMin(),i=this.options.step,n=Math.floor(+(t-e).toFixed(this._precision())/i)*i;t=n+e,this.max=parseFloat(t.toFixed(this._precision()))},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=t.toString(),i=e.indexOf(".");return-1===i?0:e.length-i-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshValue:function(){var e,i,n,s,r,o=this.options.range,a=this.options,l=this,u=this._animateOff?!1:a.animate,h={};this.options.values&&this.options.values.length?this.handles.each(function(n){i=(l.values(n)-l._valueMin())/(l._valueMax()-l._valueMin())*100,h["horizontal"===l.orientation?"left":"bottom"]=i+"%",t(this).stop(1,1)[u?"animate":"css"](h,a.animate),l.options.range===!0&&("horizontal"===l.orientation?(0===n&&l.range.stop(1,1)[u?"animate":"css"]({left:i+"%"},a.animate),1===n&&l.range[u?"animate":"css"]({width:i-e+"%"},{queue:!1,duration:a.animate})):(0===n&&l.range.stop(1,1)[u?"animate":"css"]({bottom:i+"%"},a.animate),1===n&&l.range[u?"animate":"css"]({height:i-e+"%"},{queue:!1,duration:a.animate}))),e=i}):(n=this.value(),s=this._valueMin(),r=this._valueMax(),i=r!==s?(n-s)/(r-s)*100:0,h["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[u?"animate":"css"](h,a.animate),"min"===o&&"horizontal"===this.orientation&&this.range.stop(1,1)[u?"animate":"css"]({width:i+"%"},a.animate),"max"===o&&"horizontal"===this.orientation&&this.range[u?"animate":"css"]({width:100-i+"%"},{queue:!1,duration:a.animate}),"min"===o&&"vertical"===this.orientation&&this.range.stop(1,1)[u?"animate":"css"]({height:i+"%"},a.animate),"max"===o&&"vertical"===this.orientation&&this.range[u?"animate":"css"]({height:100-i+"%"},{queue:!1,duration:a.animate}))},_handleEvents:{keydown:function(e){var i,n,s,r,o=t(e.target).data("ui-slider-handle-index");switch(e.keyCode){case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(e.preventDefault(),!this._keySliding&&(this._keySliding=!0,t(e.target).addClass("ui-state-active"),i=this._start(e,o),i===!1))return}switch(r=this.options.step,n=s=this.options.values&&this.options.values.length?this.values(o):this.value(),e.keyCode){case t.ui.keyCode.HOME:s=this._valueMin();break;case t.ui.keyCode.END:s=this._valueMax();break;case t.ui.keyCode.PAGE_UP:s=this._trimAlignValue(n+(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(n-(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if(n===this._valueMax())return;s=this._trimAlignValue(n+r);break;case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(n===this._valueMin())return;s=this._trimAlignValue(n-r)}this._slide(e,o,s)},keyup:function(e){var i=t(e.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(e,i),this._change(e,i),t(e.target).removeClass("ui-state-active"))}}}),t.widget("ui.sortable",t.ui.mouse,{version:"1.11.4",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(t,e,i){return t>=e&&e+i>t},_isFloating:function(t){return/left|right/.test(t.css("float"))||/inline|table-cell/.test(t.css("display"))},_create:function(){this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(t,e){this._super(t,e),"handle"===t&&this._setHandleClassName()},_setHandleClassName:function(){this.element.find(".ui-sortable-handle").removeClass("ui-sortable-handle"),t.each(this.items,function(){(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item).addClass("ui-sortable-handle")})},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled").find(".ui-sortable-handle").removeClass("ui-sortable-handle"),this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+"-item");return this},_mouseCapture:function(e,i){var n=null,s=!1,r=this;return this.reverting?!1:this.options.disabled||"static"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,r.widgetName+"-item")===r?(n=t(this),!1):void 0}),t.data(e.target,r.widgetName+"-item")===r&&(n=t(e.target)),n&&(!this.options.handle||i||(t(this.options.handle,n).find("*").addBack().each(function(){this===e.target&&(s=!0)}),s))?(this.currentItem=n,this._removeCurrentsFromItems(),!0):!1)},_mouseStart:function(e,i,n){var s,r,o=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,o.cursorAt&&this._adjustOffsetFromHelper(o.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),o.containment&&this._setContainment(),o.cursor&&"auto"!==o.cursor&&(r=this.document.find("body"),this.storedCursor=r.css("cursor"),r.css("cursor",o.cursor),this.storedStylesheet=t("<style>*{ cursor: "+o.cursor+" !important; }</style>").appendTo(r)),o.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",o.opacity)),o.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",o.zIndex)),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!n)for(s=this.containers.length-1;s>=0;s--)this.containers[s]._trigger("activate",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!o.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,n,s,r,o=this.options,a=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<o.scrollSensitivity?this.scrollParent[0].scrollTop=a=this.scrollParent[0].scrollTop+o.scrollSpeed:e.pageY-this.overflowOffset.top<o.scrollSensitivity&&(this.scrollParent[0].scrollTop=a=this.scrollParent[0].scrollTop-o.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<o.scrollSensitivity?this.scrollParent[0].scrollLeft=a=this.scrollParent[0].scrollLeft+o.scrollSpeed:e.pageX-this.overflowOffset.left<o.scrollSensitivity&&(this.scrollParent[0].scrollLeft=a=this.scrollParent[0].scrollLeft-o.scrollSpeed)):(e.pageY-this.document.scrollTop()<o.scrollSensitivity?a=this.document.scrollTop(this.document.scrollTop()-o.scrollSpeed):this.window.height()-(e.pageY-this.document.scrollTop())<o.scrollSensitivity&&(a=this.document.scrollTop(this.document.scrollTop()+o.scrollSpeed)),e.pageX-this.document.scrollLeft()<o.scrollSensitivity?a=this.document.scrollLeft(this.document.scrollLeft()-o.scrollSpeed):this.window.width()-(e.pageX-this.document.scrollLeft())<o.scrollSensitivity&&(a=this.document.scrollLeft(this.document.scrollLeft()+o.scrollSpeed))),a!==!1&&t.ui.ddmanager&&!o.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i>=0;i--)if(n=this.items[i],s=n.item[0],r=this._intersectsWithPointer(n),r&&n.instance===this.currentContainer&&s!==this.currentItem[0]&&this.placeholder[1===r?"next":"prev"]()[0]!==s&&!t.contains(this.placeholder[0],s)&&("semi-dynamic"===this.options.type?!t.contains(this.element[0],s):!0)){if(this.direction=1===r?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(n))break;this._rearrange(e,n),this._trigger("change",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger("sort",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var n=this,s=this.placeholder.offset(),r=this.options.axis,o={};r&&"x"!==r||(o.left=s.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),r&&"y"!==r||(o.top=s.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(o,parseInt(this.options.revert,10)||500,function(){n._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp({target:null}),"original"===this.options.helper?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger("deactivate",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),n=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||"id")||"").match(e.expression||/(.+)[\-=_](.+)/);i&&n.push((e.key||i[1]+"[]")+"="+(e.key&&e.expression?i[1]:i[2]))}),!n.length&&e.key&&n.push(e.key+"="),n.join("&")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),n=[];return e=e||{},i.each(function(){n.push(t(e.item||this).attr(e.attribute||"id")||"")}),n},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,n=this.positionAbs.top,s=n+this.helperProportions.height,r=t.left,o=r+t.width,a=t.top,l=a+t.height,u=this.offset.click.top,h=this.offset.click.left,c="x"===this.options.axis||n+u>a&&l>n+u,d="y"===this.options.axis||e+h>r&&o>e+h,f=c&&d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>t[this.floating?"width":"height"]?f:r<e+this.helperProportions.width/2&&i-this.helperProportions.width/2<o&&a<n+this.helperProportions.height/2&&s-this.helperProportions.height/2<l},_intersectsWithPointer:function(t){var e="x"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),i="y"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),n=e&&i,s=this._getDragVerticalDirection(),r=this._getDragHorizontalDirection();return n?this.floating?r&&"right"===r||"down"===s?2:1:s&&("down"===s?2:1):!1},_intersectsWithSides:function(t){var e=this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),n=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?"right"===s&&i||"left"===s&&!i:n&&("down"===n&&e||"up"===n&&!e)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?"down":"up")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?"right":"left")},refresh:function(t){return this._refreshItems(t),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){a.push(this)}var n,s,r,o,a=[],l=[],u=this._connectWith();if(u&&e)for(n=u.length-1;n>=0;n--)for(r=t(u[n],this.document[0]),s=r.length-1;s>=0;s--)o=t.data(r[s],this.widgetFullName),o&&o!==this&&!o.options.disabled&&l.push([t.isFunction(o.options.items)?o.options.items.call(o.element):t(o.options.items,o.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),o]);for(l.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),n=l.length-1;n>=0;n--)l[n][0].each(i);return t(a)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=t.grep(this.items,function(t){for(var i=0;i<e.length;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,n,s,r,o,a,l,u,h=this.items,c=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(s=t(d[i],this.document[0]),n=s.length-1;n>=0;n--)r=t.data(s[n],this.widgetFullName),r&&r!==this&&!r.options.disabled&&(c.push([t.isFunction(r.options.items)?r.options.items.call(r.element[0],e,{item:this.currentItem}):t(r.options.items,r.element),r]),this.containers.push(r));for(i=c.length-1;i>=0;i--)for(o=c[i][1],a=c[i][0],n=0,u=a.length;u>n;n++)l=t(a[n]),l.data(this.widgetName+"-item",o),h.push({item:l,instance:o,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.floating=this.items.length?"x"===this.options.axis||this._isFloating(this.items[0].item):!1,this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,n,s,r;for(i=this.items.length-1;i>=0;i--)n=this.items[i],n.instance!==this.currentContainer&&this.currentContainer&&n.item[0]!==this.currentItem[0]||(s=this.options.toleranceElement?t(this.options.toleranceElement,n.item):n.item,e||(n.width=s.outerWidth(),n.height=s.outerHeight()),r=s.offset(),n.left=r.left,n.top=r.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)r=this.containers[i].element.offset(),this.containers[i].containerCache.left=r.left,this.containers[i].containerCache.top=r.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,n=e.options;n.placeholder&&n.placeholder.constructor!==String||(i=n.placeholder,n.placeholder={element:function(){var n=e.currentItem[0].nodeName.toLowerCase(),s=t("<"+n+">",e.document[0]).addClass(i||e.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper");return"tbody"===n?e._createTrPlaceholder(e.currentItem.find("tr").eq(0),t("<tr>",e.document[0]).appendTo(s)):"tr"===n?e._createTrPlaceholder(e.currentItem,s):"img"===n&&s.attr("src",e.currentItem.attr("src")),i||s.css("visibility","hidden"),s},update:function(t,s){(!i||n.forcePlaceholderSize)&&(s.height()||s.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css("paddingTop")||0,10)-parseInt(e.currentItem.css("paddingBottom")||0,10)),s.width()||s.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css("paddingLeft")||0,10)-parseInt(e.currentItem.css("paddingRight")||0,10)))}}),e.placeholder=t(n.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),n.placeholder.update(e,e.placeholder)},_createTrPlaceholder:function(e,i){var n=this;e.children().each(function(){t("<td>&#160;</td>",n.document[0]).attr("colspan",t(this).attr("colspan")||1).appendTo(i)})},_contactContainers:function(e){var i,n,s,r,o,a,l,u,h,c,d=null,f=null;for(i=this.containers.length-1;i>=0;i--)if(!t.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&t.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],f=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",e,this._uiHash(this)),this.containers[i].containerCache.over=0);if(d)if(1===this.containers.length)this.containers[f].containerCache.over||(this.containers[f]._trigger("over",e,this._uiHash(this)),this.containers[f].containerCache.over=1);else{for(s=1e4,r=null,h=d.floating||this._isFloating(this.currentItem),o=h?"left":"top",a=h?"width":"height",c=h?"clientX":"clientY",n=this.items.length-1;n>=0;n--)t.contains(this.containers[f].element[0],this.items[n].item[0])&&this.items[n].item[0]!==this.currentItem[0]&&(l=this.items[n].item.offset()[o],u=!1,e[c]-l>this.items[n][a]/2&&(u=!0),Math.abs(e[c]-l)<s&&(s=Math.abs(e[c]-l),r=this.items[n],this.direction=u?"up":"down"));if(!r&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[f])return void(this.currentContainer.containerCache.over||(this.containers[f]._trigger("over",e,this._uiHash()),this.currentContainer.containerCache.over=1));r?this._rearrange(e,r,null,!0):this._rearrange(e,null,this.containers[f].element,!0),this._trigger("change",e,this._uiHash()),this.containers[f]._trigger("change",e,this._uiHash(this)),this.currentContainer=this.containers[f],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[f]._trigger("over",e,this._uiHash(this)),this.containers[f].containerCache.over=1}},_createHelper:function(e){var i=this.options,n=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return n.parents("body").length||t("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(n[0]),n[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(!n[0].style.width||i.forceHelperSize)&&n.width(this.currentItem.width()),(!n[0].style.height||i.forceHelperSize)&&n.height(this.currentItem.height()),n},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,n,s=this.options;"parent"===s.containment&&(s.containment=this.helper[0].parentNode),("document"===s.containment||"window"===s.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,"document"===s.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,("document"===s.containment?this.document.width():this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(s.containment)||(e=t(s.containment)[0],i=t(s.containment).offset(),n="hidden"!==t(e).css("overflow"),this.containment=[i.left+(parseInt(t(e).css("borderLeftWidth"),10)||0)+(parseInt(t(e).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css("borderTopWidth"),10)||0)+(parseInt(t(e).css("paddingTop"),10)||0)-this.margins.top,i.left+(n?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css("borderLeftWidth"),10)||0)-(parseInt(t(e).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(n?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css("borderTopWidth"),10)||0)-(parseInt(t(e).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var n="absolute"===e?1:-1,s="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,r=/(html|body)/i.test(s[0].tagName);return{top:i.top+this.offset.relative.top*n+this.offset.parent.top*n-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():r?0:s.scrollTop())*n,left:i.left+this.offset.relative.left*n+this.offset.parent.left*n-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():r?0:s.scrollLeft())*n}},_generatePosition:function(e){var i,n,s=this.options,r=e.pageX,o=e.pageY,a="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=/(html|body)/i.test(a[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(r=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(r=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top)),s.grid&&(i=this.originalPageY+Math.round((o-this.originalPageY)/s.grid[1])*s.grid[1],o=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-s.grid[1]:i+s.grid[1]:i,n=this.originalPageX+Math.round((r-this.originalPageX)/s.grid[0])*s.grid[0],r=this.containment?n-this.offset.click.left>=this.containment[0]&&n-this.offset.click.left<=this.containment[2]?n:n-this.offset.click.left>=this.containment[0]?n-s.grid[0]:n+s.grid[0]:n)),{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():l?0:a.scrollTop()),left:r-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():l?0:a.scrollLeft())}},_rearrange:function(t,e,i,n){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var s=this.counter;this._delay(function(){s===this.counter&&this.refreshPositions(!n)})},_clear:function(t,e){function i(t,e,i){return function(n){i._trigger(t,n,e._uiHash(e))}}this.reverting=!1;var n,s=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(n in this._storedCSS)("auto"===this._storedCSS[n]||"static"===this._storedCSS[n])&&(this._storedCSS[n]="");this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();for(this.fromOutside&&!e&&s.push(function(t){this._trigger("receive",t,this._uiHash(this.fromOutside));
}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||s.push(function(t){this._trigger("update",t,this._uiHash())}),this!==this.currentContainer&&(e||(s.push(function(t){this._trigger("remove",t,this._uiHash())}),s.push(function(t){return function(e){t._trigger("receive",e,this._uiHash(this))}}.call(this,this.currentContainer)),s.push(function(t){return function(e){t._trigger("update",e,this._uiHash(this))}}.call(this,this.currentContainer)))),n=this.containers.length-1;n>=0;n--)e||s.push(i("deactivate",this,this.containers[n])),this.containers[n].containerCache.over&&(s.push(i("out",this,this.containers[n])),this.containers[n].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,e||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!e){for(n=0;n<s.length;n++)s[n].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}}),t.widget("ui.spinner",{version:"1.11.4",defaultElement:"<input>",widgetEventPrefix:"spin",options:{culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),""!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var e={},i=this.element;return t.each(["min","max","step"],function(t,n){var s=i.attr(n);void 0!==s&&s.length&&(e[n]=s)}),e},_events:{keydown:function(t){this._start(t)&&this._keydown(t)&&t.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(t){return this.cancelBlur?void delete this.cancelBlur:(this._stop(),this._refresh(),void(this.previous!==this.element.val()&&this._trigger("change",t)))},mousewheel:function(t,e){if(e){if(!this.spinning&&!this._start(t))return!1;this._spin((e>0?1:-1)*this.options.step,t),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(t)},100),t.preventDefault()}},"mousedown .ui-spinner-button":function(e){function i(){var t=this.element[0]===this.document[0].activeElement;t||(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n}))}var n;n=this.element[0]===this.document[0].activeElement?this.previous:this.element.val(),e.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,i.call(this)}),this._start(e)!==!1&&this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(e){return t(e.currentTarget).hasClass("ui-state-active")?this._start(e)===!1?!1:void this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e):void 0},"mouseleave .ui-spinner-button":"_stop"},_draw:function(){var t=this.uiSpinner=this.element.addClass("ui-spinner-input").attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());this.element.attr("role","spinbutton"),this.buttons=t.find(".ui-spinner-button").attr("tabIndex",-1).button().removeClass("ui-corner-all"),this.buttons.height()>Math.ceil(.5*t.height())&&t.height()>0&&t.height(t.height()),this.options.disabled&&this.disable()},_keydown:function(e){var i=this.options,n=t.ui.keyCode;switch(e.keyCode){case n.UP:return this._repeat(null,1,e),!0;case n.DOWN:return this._repeat(null,-1,e),!0;case n.PAGE_UP:return this._repeat(null,i.page,e),!0;case n.PAGE_DOWN:return this._repeat(null,-i.page,e),!0}return!1},_uiSpinnerHtml:function(){return"<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"},_buttonHtml:function(){return"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon "+this.options.icons.up+"'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon "+this.options.icons.down+"'>&#9660;</span></a>"},_start:function(t){return this.spinning||this._trigger("start",t)!==!1?(this.counter||(this.counter=1),this.spinning=!0,!0):!1},_repeat:function(t,e,i){t=t||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,e,i)},t),this._spin(e*this.options.step,i)},_spin:function(t,e){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+t*this._increment(this.counter)),this.spinning&&this._trigger("spin",e,{value:i})===!1||(this._value(i),this.counter++)},_increment:function(e){var i=this.options.incremental;return i?t.isFunction(i)?i(e):Math.floor(e*e*e/5e4-e*e/500+17*e/200+1):1},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=t.toString(),i=e.indexOf(".");return-1===i?0:e.length-i-1},_adjustValue:function(t){var e,i,n=this.options;return e=null!==n.min?n.min:0,i=t-e,i=Math.round(i/n.step)*n.step,t=e+i,t=parseFloat(t.toFixed(this._precision())),null!==n.max&&t>n.max?n.max:null!==n.min&&t<n.min?n.min:t},_stop:function(t){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",t))},_setOption:function(t,e){if("culture"===t||"numberFormat"===t){var i=this._parse(this.element.val());return this.options[t]=e,void this.element.val(this._format(i))}("max"===t||"min"===t||"step"===t)&&"string"==typeof e&&(e=this._parse(e)),"icons"===t&&(this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(e.up),this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(e.down)),this._super(t,e),"disabled"===t&&(this.widget().toggleClass("ui-state-disabled",!!e),this.element.prop("disabled",!!e),this.buttons.button(e?"disable":"enable"))},_setOptions:l(function(t){this._super(t)}),_parse:function(t){return"string"==typeof t&&""!==t&&(t=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(t,10,this.options.culture):+t),""===t||isNaN(t)?null:t},_format:function(t){return""===t?"":window.Globalize&&this.options.numberFormat?Globalize.format(t,this.options.numberFormat,this.options.culture):t},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},isValid:function(){var t=this.value();return null===t?!1:t===this._adjustValue(t)},_value:function(t,e){var i;""!==t&&(i=this._parse(t),null!==i&&(e||(i=this._adjustValue(i)),t=this._format(i))),this.element.val(t),this._refresh()},_destroy:function(){this.element.removeClass("ui-spinner-input").prop("disabled",!1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:l(function(t){this._stepUp(t)}),_stepUp:function(t){this._start()&&(this._spin((t||1)*this.options.step),this._stop())},stepDown:l(function(t){this._stepDown(t)}),_stepDown:function(t){this._start()&&(this._spin((t||1)*-this.options.step),this._stop())},pageUp:l(function(t){this._stepUp((t||1)*this.options.page)}),pageDown:l(function(t){this._stepDown((t||1)*this.options.page)}),value:function(t){return arguments.length?void l(this._value).call(this,t):this._parse(this.element.val())},widget:function(){return this.uiSpinner}}),t.widget("ui.tabs",{version:"1.11.4",delay:300,options:{active:null,collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_isLocal:function(){var t=/#.*$/;return function(e){var i,n;e=e.cloneNode(!1),i=e.href.replace(t,""),n=location.href.replace(t,"");try{i=decodeURIComponent(i)}catch(s){}try{n=decodeURIComponent(n)}catch(s){}return e.hash.length>1&&i===n}}(),_create:function(){var e=this,i=this.options;this.running=!1,this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible",i.collapsible),this._processTabs(),i.active=this._initialActive(),t.isArray(i.disabled)&&(i.disabled=t.unique(i.disabled.concat(t.map(this.tabs.filter(".ui-state-disabled"),function(t){return e.tabs.index(t)}))).sort()),this.options.active!==!1&&this.anchors.length?this.active=this._findActive(i.active):this.active=t(),this._refresh(),this.active.length&&this.load(i.active)},_initialActive:function(){var e=this.options.active,i=this.options.collapsible,n=location.hash.substring(1);return null===e&&(n&&this.tabs.each(function(i,s){return t(s).attr("aria-controls")===n?(e=i,!1):void 0}),null===e&&(e=this.tabs.index(this.tabs.filter(".ui-tabs-active"))),(null===e||-1===e)&&(e=this.tabs.length?0:!1)),e!==!1&&(e=this.tabs.index(this.tabs.eq(e)),-1===e&&(e=i?!1:0)),!i&&e===!1&&this.anchors.length&&(e=0),e},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):t()}},_tabKeydown:function(e){var i=t(this.document[0].activeElement).closest("li"),n=this.tabs.index(i),s=!0;if(!this._handlePageNav(e)){switch(e.keyCode){case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:n++;break;case t.ui.keyCode.UP:case t.ui.keyCode.LEFT:s=!1,n--;break;case t.ui.keyCode.END:n=this.anchors.length-1;break;case t.ui.keyCode.HOME:n=0;break;case t.ui.keyCode.SPACE:return e.preventDefault(),clearTimeout(this.activating),void this._activate(n);case t.ui.keyCode.ENTER:return e.preventDefault(),clearTimeout(this.activating),void this._activate(n===this.options.active?!1:n);default:return}e.preventDefault(),clearTimeout(this.activating),n=this._focusNextTab(n,s),e.ctrlKey||e.metaKey||(i.attr("aria-selected","false"),this.tabs.eq(n).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",n)},this.delay))}},_panelKeydown:function(e){this._handlePageNav(e)||e.ctrlKey&&e.keyCode===t.ui.keyCode.UP&&(e.preventDefault(),this.active.focus())},_handlePageNav:function(e){return e.altKey&&e.keyCode===t.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):e.altKey&&e.keyCode===t.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):void 0},_findNextTab:function(e,i){function n(){return e>s&&(e=0),0>e&&(e=s),e}for(var s=this.tabs.length-1;-1!==t.inArray(n(),this.options.disabled);)e=i?e+1:e-1;return e},_focusNextTab:function(t,e){return t=this._findNextTab(t,e),this.tabs.eq(t).focus(),t},_setOption:function(t,e){return"active"===t?void this._activate(e):"disabled"===t?void this._setupDisabled(e):(this._super(t,e),"collapsible"===t&&(this.element.toggleClass("ui-tabs-collapsible",e),e||this.options.active!==!1||this._activate(0)),"event"===t&&this._setupEvents(e),void("heightStyle"===t&&this._setupHeightStyle(e)))},_sanitizeSelector:function(t){return t?t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var e=this.options,i=this.tablist.children(":has(a[href])");e.disabled=t.map(i.filter(".ui-state-disabled"),function(t){return i.index(t)}),this._processTabs(),e.active!==!1&&this.anchors.length?this.active.length&&!t.contains(this.tablist[0],this.active[0])?this.tabs.length===e.disabled.length?(e.active=!1,this.active=t()):this._activate(this._findNextTab(Math.max(0,e.active-1),!1)):e.active=this.tabs.index(this.active):(e.active=!1,this.active=t()),this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"}),this.active.length?(this.active.addClass("ui-tabs-active ui-state-active").attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}),this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var e=this,i=this.tabs,n=this.anchors,s=this.panels;this.tablist=this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role","tablist").delegate("> li","mousedown"+this.eventNamespace,function(e){t(this).is(".ui-state-disabled")&&e.preventDefault()}).delegate(".ui-tabs-anchor","focus"+this.eventNamespace,function(){t(this).closest("li").is(".ui-state-disabled")&&this.blur()}),this.tabs=this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({role:"tab",tabIndex:-1}),this.anchors=this.tabs.map(function(){return t("a",this)[0]}).addClass("ui-tabs-anchor").attr({role:"presentation",tabIndex:-1}),this.panels=t(),this.anchors.each(function(i,n){var s,r,o,a=t(n).uniqueId().attr("id"),l=t(n).closest("li"),u=l.attr("aria-controls");e._isLocal(n)?(s=n.hash,o=s.substring(1),r=e.element.find(e._sanitizeSelector(s))):(o=l.attr("aria-controls")||t({}).uniqueId()[0].id,s="#"+o,r=e.element.find(s),r.length||(r=e._createPanel(o),r.insertAfter(e.panels[i-1]||e.tablist)),r.attr("aria-live","polite")),r.length&&(e.panels=e.panels.add(r)),u&&l.data("ui-tabs-aria-controls",u),l.attr({"aria-controls":o,"aria-labelledby":a}),r.attr("aria-labelledby",a)}),this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role","tabpanel"),i&&(this._off(i.not(this.tabs)),this._off(n.not(this.anchors)),this._off(s.not(this.panels)))},_getList:function(){return this.tablist||this.element.find("ol,ul").eq(0)},_createPanel:function(e){return t("<div>").attr("id",e).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)},_setupDisabled:function(e){t.isArray(e)&&(e.length?e.length===this.anchors.length&&(e=!0):e=!1);for(var i,n=0;i=this.tabs[n];n++)e===!0||-1!==t.inArray(n,e)?t(i).addClass("ui-state-disabled").attr("aria-disabled","true"):t(i).removeClass("ui-state-disabled").removeAttr("aria-disabled");this.options.disabled=e},_setupEvents:function(e){var i={};e&&t.each(e.split(" "),function(t,e){i[e]="_eventHandler"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(!0,this.anchors,{click:function(t){t.preventDefault()}}),this._on(this.anchors,i),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(e){var i,n=this.element.parent();"fill"===e?(i=n.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(":visible").each(function(){var e=t(this),n=e.css("position");"absolute"!==n&&"fixed"!==n&&(i-=e.outerHeight(!0))}),this.element.children().not(this.panels).each(function(){i-=t(this).outerHeight(!0)}),this.panels.each(function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()))}).css("overflow","auto")):"auto"===e&&(i=0,this.panels.each(function(){i=Math.max(i,t(this).height("").height())}).height(i))},_eventHandler:function(e){var i=this.options,n=this.active,s=t(e.currentTarget),r=s.closest("li"),o=r[0]===n[0],a=o&&i.collapsible,l=a?t():this._getPanelForTab(r),u=n.length?this._getPanelForTab(n):t(),h={oldTab:n,oldPanel:u,newTab:a?t():r,newPanel:l};e.preventDefault(),r.hasClass("ui-state-disabled")||r.hasClass("ui-tabs-loading")||this.running||o&&!i.collapsible||this._trigger("beforeActivate",e,h)===!1||(i.active=a?!1:this.tabs.index(r),this.active=o?t():r,this.xhr&&this.xhr.abort(),u.length||l.length||t.error("jQuery UI Tabs: Mismatching fragment identifier."),l.length&&this.load(this.tabs.index(r),e),this._toggle(e,h))},_toggle:function(e,i){function n(){r.running=!1,r._trigger("activate",e,i)}function s(){i.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),o.length&&r.options.show?r._show(o,r.options.show,n):(o.show(),n())}var r=this,o=i.newPanel,a=i.oldPanel;this.running=!0,a.length&&this.options.hide?this._hide(a,this.options.hide,function(){i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),s()}):(i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),a.hide(),s()),a.attr("aria-hidden","true"),i.oldTab.attr({"aria-selected":"false","aria-expanded":"false"}),o.length&&a.length?i.oldTab.attr("tabIndex",-1):o.length&&this.tabs.filter(function(){return 0===t(this).attr("tabIndex")}).attr("tabIndex",-1),o.attr("aria-hidden","false"),i.newTab.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_activate:function(e){var i,n=this._findActive(e);n[0]!==this.active[0]&&(n.length||(n=this.active),i=n.find(".ui-tabs-anchor")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return e===!1?t():this.tabs.eq(e)},_getIndex:function(t){return"string"==typeof t&&(t=this.anchors.index(this.anchors.filter("[href$='"+t+"']"))),t},_destroy:function(){this.xhr&&this.xhr.abort(),this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"),this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"),this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId(),this.tablist.unbind(this.eventNamespace),this.tabs.add(this.panels).each(function(){t.data(this,"ui-tabs-destroy")?t(this).remove():t(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")}),this.tabs.each(function(){var e=t(this),i=e.data("ui-tabs-aria-controls");i?e.attr("aria-controls",i).removeData("ui-tabs-aria-controls"):e.removeAttr("aria-controls")}),this.panels.show(),"content"!==this.options.heightStyle&&this.panels.css("height","")},enable:function(e){var i=this.options.disabled;i!==!1&&(void 0===e?i=!1:(e=this._getIndex(e),i=t.isArray(i)?t.map(i,function(t){return t!==e?t:null}):t.map(this.tabs,function(t,i){return i!==e?i:null})),this._setupDisabled(i))},disable:function(e){var i=this.options.disabled;if(i!==!0){if(void 0===e)i=!0;else{if(e=this._getIndex(e),-1!==t.inArray(e,i))return;i=t.isArray(i)?t.merge([e],i).sort():[e]}this._setupDisabled(i)}},load:function(e,i){e=this._getIndex(e);var n=this,s=this.tabs.eq(e),r=s.find(".ui-tabs-anchor"),o=this._getPanelForTab(s),a={tab:s,panel:o},l=function(t,e){"abort"===e&&n.panels.stop(!1,!0),s.removeClass("ui-tabs-loading"),o.removeAttr("aria-busy"),t===n.xhr&&delete n.xhr};this._isLocal(r[0])||(this.xhr=t.ajax(this._ajaxSettings(r,i,a)),this.xhr&&"canceled"!==this.xhr.statusText&&(s.addClass("ui-tabs-loading"),o.attr("aria-busy","true"),this.xhr.done(function(t,e,s){setTimeout(function(){o.html(t),n._trigger("load",i,a),l(s,e)},1)}).fail(function(t,e){setTimeout(function(){l(t,e)},1)})))},_ajaxSettings:function(e,i,n){var s=this;return{url:e.attr("href"),beforeSend:function(e,r){return s._trigger("beforeLoad",i,t.extend({jqXHR:e,ajaxSettings:r},n))}}},_getPanelForTab:function(e){var i=t(e).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+i))}}),t.widget("ui.tooltip",{version:"1.11.4",options:{content:function(){var e=t(this).attr("title")||"";return t("<a>").text(e).html()},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,tooltipClass:null,track:!1,close:null,open:null},_addDescribedBy:function(e,i){var n=(e.attr("aria-describedby")||"").split(/\s+/);n.push(i),e.data("ui-tooltip-id",i).attr("aria-describedby",t.trim(n.join(" ")))},_removeDescribedBy:function(e){var i=e.data("ui-tooltip-id"),n=(e.attr("aria-describedby")||"").split(/\s+/),s=t.inArray(i,n);-1!==s&&n.splice(s,1),e.removeData("ui-tooltip-id"),n=t.trim(n.join(" ")),n?e.attr("aria-describedby",n):e.removeAttr("aria-describedby")},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.options.disabled&&this._disable(),this.liveRegion=t("<div>").attr({role:"log","aria-live":"assertive","aria-relevant":"additions"}).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body)},_setOption:function(e,i){var n=this;return"disabled"===e?(this[i?"_disable":"_enable"](),void(this.options[e]=i)):(this._super(e,i),void("content"===e&&t.each(this.tooltips,function(t,e){n._updateContent(e.element)})))},_disable:function(){var e=this;t.each(this.tooltips,function(i,n){var s=t.Event("blur");s.target=s.currentTarget=n.element[0],e.close(s,!0)}),this.element.find(this.options.items).addBack().each(function(){var e=t(this);e.is("[title]")&&e.data("ui-tooltip-title",e.attr("title")).removeAttr("title")})},_enable:function(){this.element.find(this.options.items).addBack().each(function(){var e=t(this);e.data("ui-tooltip-title")&&e.attr("title",e.data("ui-tooltip-title"))})},open:function(e){var i=this,n=t(e?e.target:this.element).closest(this.options.items);n.length&&!n.data("ui-tooltip-id")&&(n.attr("title")&&n.data("ui-tooltip-title",n.attr("title")),n.data("ui-tooltip-open",!0),e&&"mouseover"===e.type&&n.parents().each(function(){var e,n=t(this);n.data("ui-tooltip-open")&&(e=t.Event("blur"),e.target=e.currentTarget=this,i.close(e,!0)),n.attr("title")&&(n.uniqueId(),i.parents[this.id]={element:this,title:n.attr("title")},n.attr("title",""))}),this._registerCloseHandlers(e,n),this._updateContent(n,e))},_updateContent:function(t,e){var i,n=this.options.content,s=this,r=e?e.type:null;return"string"==typeof n?this._open(e,t,n):(i=n.call(t[0],function(i){s._delay(function(){t.data("ui-tooltip-open")&&(e&&(e.type=r),this._open(e,t,i))})}),void(i&&this._open(e,t,i)))},_open:function(e,i,n){function s(t){u.of=t,o.is(":hidden")||o.position(u)}var r,o,a,l,u=t.extend({},this.options.position);if(n){if(r=this._find(i))return void r.tooltip.find(".ui-tooltip-content").html(n);i.is("[title]")&&(e&&"mouseover"===e.type?i.attr("title",""):i.removeAttr("title")),r=this._tooltip(i),o=r.tooltip,this._addDescribedBy(i,o.attr("id")),o.find(".ui-tooltip-content").html(n),this.liveRegion.children().hide(),n.clone?(l=n.clone(),l.removeAttr("id").find("[id]").removeAttr("id")):l=n,t("<div>").html(l).appendTo(this.liveRegion),this.options.track&&e&&/^mouse/.test(e.type)?(this._on(this.document,{mousemove:s}),s(e)):o.position(t.extend({of:i},this.options.position)),o.hide(),this._show(o,this.options.show),this.options.show&&this.options.show.delay&&(a=this.delayedShow=setInterval(function(){o.is(":visible")&&(s(u.of),clearInterval(a))},t.fx.interval)),this._trigger("open",e,{tooltip:o})}},_registerCloseHandlers:function(e,i){var n={keyup:function(e){if(e.keyCode===t.ui.keyCode.ESCAPE){var n=t.Event(e);n.currentTarget=i[0],this.close(n,!0)}}};i[0]!==this.element[0]&&(n.remove=function(){this._removeTooltip(this._find(i).tooltip)}),e&&"mouseover"!==e.type||(n.mouseleave="close"),e&&"focusin"!==e.type||(n.focusout="close"),this._on(!0,i,n)},close:function(e){var i,n=this,s=t(e?e.currentTarget:this.element),r=this._find(s);return r?(i=r.tooltip,void(r.closing||(clearInterval(this.delayedShow),s.data("ui-tooltip-title")&&!s.attr("title")&&s.attr("title",s.data("ui-tooltip-title")),this._removeDescribedBy(s),r.hiding=!0,i.stop(!0),this._hide(i,this.options.hide,function(){n._removeTooltip(t(this))}),s.removeData("ui-tooltip-open"),this._off(s,"mouseleave focusout keyup"),s[0]!==this.element[0]&&this._off(s,"remove"),this._off(this.document,"mousemove"),e&&"mouseleave"===e.type&&t.each(this.parents,function(e,i){t(i.element).attr("title",i.title),delete n.parents[e]}),r.closing=!0,this._trigger("close",e,{tooltip:i}),r.hiding||(r.closing=!1)))):void s.removeData("ui-tooltip-open")},_tooltip:function(e){var i=t("<div>").attr("role","tooltip").addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content "+(this.options.tooltipClass||"")),n=i.uniqueId().attr("id");return t("<div>").addClass("ui-tooltip-content").appendTo(i),i.appendTo(this.document[0].body),this.tooltips[n]={element:e,tooltip:i}},_find:function(t){var e=t.data("ui-tooltip-id");return e?this.tooltips[e]:null},_removeTooltip:function(t){t.remove(),delete this.tooltips[t.attr("id")]},_destroy:function(){var e=this;t.each(this.tooltips,function(i,n){var s=t.Event("blur"),r=n.element;s.target=s.currentTarget=r[0],e.close(s,!0),t("#"+i).remove(),r.data("ui-tooltip-title")&&(r.attr("title")||r.attr("title",r.data("ui-tooltip-title")),r.removeData("ui-tooltip-title"))}),this.liveRegion.remove()}})}),function(){var t=this,e=t._,i={},n=Array.prototype,s=Object.prototype,r=Function.prototype,o=n.push,a=n.slice,l=n.concat,u=s.toString,h=s.hasOwnProperty,c=n.forEach,d=n.map,f=n.reduce,p=n.reduceRight,m=n.filter,g=n.every,v=n.some,y=n.indexOf,_=n.lastIndexOf,b=Array.isArray,x=Object.keys,w=r.bind,M=function(t){return t instanceof M?t:this instanceof M?void(this._wrapped=t):new M(t)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=M),exports._=M):t._=M,M.VERSION="1.5.1";var D=M.each=M.forEach=function(t,e,n){if(null!=t)if(c&&t.forEach===c)t.forEach(e,n);else if(t.length===+t.length){for(var s=0,r=t.length;r>s;s++)if(e.call(n,t[s],s,t)===i)return}else for(var o in t)if(M.has(t,o)&&e.call(n,t[o],o,t)===i)return};M.map=M.collect=function(t,e,i){var n=[];return null==t?n:d&&t.map===d?t.map(e,i):(D(t,function(t,s,r){n.push(e.call(i,t,s,r))}),n)};var k="Reduce of empty array with no initial value";M.reduce=M.foldl=M.inject=function(t,e,i,n){var s=arguments.length>2;if(null==t&&(t=[]),f&&t.reduce===f)return n&&(e=M.bind(e,n)),s?t.reduce(e,i):t.reduce(e);if(D(t,function(t,r,o){s?i=e.call(n,i,t,r,o):(i=t,s=!0)}),!s)throw new TypeError(k);return i},M.reduceRight=M.foldr=function(t,e,i,n){var s=arguments.length>2;if(null==t&&(t=[]),p&&t.reduceRight===p)return n&&(e=M.bind(e,n)),s?t.reduceRight(e,i):t.reduceRight(e);var r=t.length;if(r!==+r){var o=M.keys(t);r=o.length}if(D(t,function(a,l,u){l=o?o[--r]:--r,s?i=e.call(n,i,t[l],l,u):(i=t[l],s=!0)}),!s)throw new TypeError(k);return i},M.find=M.detect=function(t,e,i){var n;return S(t,function(t,s,r){return e.call(i,t,s,r)?(n=t,!0):void 0}),n},M.filter=M.select=function(t,e,i){var n=[];return null==t?n:m&&t.filter===m?t.filter(e,i):(D(t,function(t,s,r){e.call(i,t,s,r)&&n.push(t)}),n)},M.reject=function(t,e,i){return M.filter(t,function(t,n,s){return!e.call(i,t,n,s)},i)},M.every=M.all=function(t,e,n){e||(e=M.identity);var s=!0;return null==t?s:g&&t.every===g?t.every(e,n):(D(t,function(t,r,o){return(s=s&&e.call(n,t,r,o))?void 0:i}),!!s)};var S=M.some=M.any=function(t,e,n){e||(e=M.identity);var s=!1;return null==t?s:v&&t.some===v?t.some(e,n):(D(t,function(t,r,o){return s||(s=e.call(n,t,r,o))?i:void 0}),!!s)};M.contains=M.include=function(t,e){return null==t?!1:y&&t.indexOf===y?-1!=t.indexOf(e):S(t,function(t){return t===e})},M.invoke=function(t,e){var i=a.call(arguments,2),n=M.isFunction(e);return M.map(t,function(t){return(n?e:t[e]).apply(t,i)})},M.pluck=function(t,e){return M.map(t,function(t){return t[e]})},M.where=function(t,e,i){return M.isEmpty(e)?i?void 0:[]:M[i?"find":"filter"](t,function(t){for(var i in e)if(e[i]!==t[i])return!1;return!0})},M.findWhere=function(t,e){return M.where(t,e,!0)},M.max=function(t,e,i){if(!e&&M.isArray(t)&&t[0]===+t[0]&&t.length<65535)return Math.max.apply(Math,t);if(!e&&M.isEmpty(t))return-(1/0);var n={computed:-(1/0),value:-(1/0)};return D(t,function(t,s,r){var o=e?e.call(i,t,s,r):t;o>n.computed&&(n={value:t,computed:o})}),n.value},M.min=function(t,e,i){if(!e&&M.isArray(t)&&t[0]===+t[0]&&t.length<65535)return Math.min.apply(Math,t);if(!e&&M.isEmpty(t))return 1/0;var n={computed:1/0,value:1/0};return D(t,function(t,s,r){var o=e?e.call(i,t,s,r):t;o<n.computed&&(n={value:t,computed:o})}),n.value},M.shuffle=function(t){var e,i=0,n=[];return D(t,function(t){e=M.random(i++),n[i-1]=n[e],n[e]=t}),n};var C=function(t){return M.isFunction(t)?t:function(e){return e[t]}};M.sortBy=function(t,e,i){var n=C(e);return M.pluck(M.map(t,function(t,e,s){return{value:t,index:e,criteria:n.call(i,t,e,s)}}).sort(function(t,e){var i=t.criteria,n=e.criteria;if(i!==n){if(i>n||void 0===i)return 1;if(n>i||void 0===n)return-1}return t.index<e.index?-1:1}),"value")};var I=function(t,e,i,n){var s={},r=C(null==e?M.identity:e);return D(t,function(e,o){var a=r.call(i,e,o,t);n(s,a,e)}),s};M.groupBy=function(t,e,i){return I(t,e,i,function(t,e,i){(M.has(t,e)?t[e]:t[e]=[]).push(i)})},M.countBy=function(t,e,i){return I(t,e,i,function(t,e){M.has(t,e)||(t[e]=0),t[e]++})},M.sortedIndex=function(t,e,i,n){i=null==i?M.identity:C(i);for(var s=i.call(n,e),r=0,o=t.length;o>r;){var a=r+o>>>1;i.call(n,t[a])<s?r=a+1:o=a}return r},M.toArray=function(t){return t?M.isArray(t)?a.call(t):t.length===+t.length?M.map(t,M.identity):M.values(t):[]},M.size=function(t){return null==t?0:t.length===+t.length?t.length:M.keys(t).length},M.first=M.head=M.take=function(t,e,i){return null!=t?null==e||i?t[0]:a.call(t,0,e):void 0},M.initial=function(t,e,i){return a.call(t,0,t.length-(null==e||i?1:e))},M.last=function(t,e,i){return null!=t?null==e||i?t[t.length-1]:a.call(t,Math.max(t.length-e,0)):void 0},M.rest=M.tail=M.drop=function(t,e,i){return a.call(t,null==e||i?1:e)},M.compact=function(t){return M.filter(t,M.identity)};var T=function(t,e,i){return e&&M.every(t,M.isArray)?l.apply(i,t):(D(t,function(t){M.isArray(t)||M.isArguments(t)?e?o.apply(i,t):T(t,e,i):i.push(t)}),i)};M.flatten=function(t,e){return T(t,e,[])},M.without=function(t){return M.difference(t,a.call(arguments,1))},M.uniq=M.unique=function(t,e,i,n){M.isFunction(e)&&(n=i,i=e,e=!1);var s=i?M.map(t,i,n):t,r=[],o=[];return D(s,function(i,n){(e?n&&o[o.length-1]===i:M.contains(o,i))||(o.push(i),r.push(t[n]))}),r},M.union=function(){return M.uniq(M.flatten(arguments,!0))},M.intersection=function(t){var e=a.call(arguments,1);return M.filter(M.uniq(t),function(t){return M.every(e,function(e){return M.indexOf(e,t)>=0})})},M.difference=function(t){var e=l.apply(n,a.call(arguments,1));return M.filter(t,function(t){return!M.contains(e,t)})},M.zip=function(){for(var t=M.max(M.pluck(arguments,"length").concat(0)),e=new Array(t),i=0;t>i;i++)e[i]=M.pluck(arguments,""+i);return e},M.object=function(t,e){if(null==t)return{};for(var i={},n=0,s=t.length;s>n;n++)e?i[t[n]]=e[n]:i[t[n][0]]=t[n][1];return i},M.indexOf=function(t,e,i){if(null==t)return-1;var n=0,s=t.length;if(i){if("number"!=typeof i)return n=M.sortedIndex(t,e),t[n]===e?n:-1;n=0>i?Math.max(0,s+i):i}if(y&&t.indexOf===y)return t.indexOf(e,i);for(;s>n;n++)if(t[n]===e)return n;return-1},M.lastIndexOf=function(t,e,i){if(null==t)return-1;var n=null!=i;if(_&&t.lastIndexOf===_)return n?t.lastIndexOf(e,i):t.lastIndexOf(e);for(var s=n?i:t.length;s--;)if(t[s]===e)return s;return-1},M.range=function(t,e,i){arguments.length<=1&&(e=t||0,t=0),i=arguments[2]||1;for(var n=Math.max(Math.ceil((e-t)/i),0),s=0,r=new Array(n);n>s;)r[s++]=t,t+=i;return r};var E=function(){};M.bind=function(t,e){var i,n;if(w&&t.bind===w)return w.apply(t,a.call(arguments,1));if(!M.isFunction(t))throw new TypeError;
return i=a.call(arguments,2),n=function(){if(!(this instanceof n))return t.apply(e,i.concat(a.call(arguments)));E.prototype=t.prototype;var s=new E;E.prototype=null;var r=t.apply(s,i.concat(a.call(arguments)));return Object(r)===r?r:s}},M.partial=function(t){var e=a.call(arguments,1);return function(){return t.apply(this,e.concat(a.call(arguments)))}},M.bindAll=function(t){var e=a.call(arguments,1);if(0===e.length)throw new Error("bindAll must be passed function names");return D(e,function(e){t[e]=M.bind(t[e],t)}),t},M.memoize=function(t,e){var i={};return e||(e=M.identity),function(){var n=e.apply(this,arguments);return M.has(i,n)?i[n]:i[n]=t.apply(this,arguments)}},M.delay=function(t,e){var i=a.call(arguments,2);return setTimeout(function(){return t.apply(null,i)},e)},M.defer=function(t){return M.delay.apply(M,[t,1].concat(a.call(arguments,1)))},M.throttle=function(t,e,i){var n,s,r,o=null,a=0;i||(i={});var l=function(){a=i.leading===!1?0:new Date,o=null,r=t.apply(n,s)};return function(){var u=new Date;a||i.leading!==!1||(a=u);var h=e-(u-a);return n=this,s=arguments,0>=h?(clearTimeout(o),o=null,a=u,r=t.apply(n,s)):o||i.trailing===!1||(o=setTimeout(l,h)),r}},M.debounce=function(t,e,i){var n,s=null;return function(){var r=this,o=arguments,a=function(){s=null,i||(n=t.apply(r,o))},l=i&&!s;return clearTimeout(s),s=setTimeout(a,e),l&&(n=t.apply(r,o)),n}},M.once=function(t){var e,i=!1;return function(){return i?e:(i=!0,e=t.apply(this,arguments),t=null,e)}},M.wrap=function(t,e){return function(){var i=[t];return o.apply(i,arguments),e.apply(this,i)}},M.compose=function(){var t=arguments;return function(){for(var e=arguments,i=t.length-1;i>=0;i--)e=[t[i].apply(this,e)];return e[0]}},M.after=function(t,e){return function(){return--t<1?e.apply(this,arguments):void 0}},M.keys=x||function(t){if(t!==Object(t))throw new TypeError("Invalid object");var e=[];for(var i in t)M.has(t,i)&&e.push(i);return e},M.values=function(t){var e=[];for(var i in t)M.has(t,i)&&e.push(t[i]);return e},M.pairs=function(t){var e=[];for(var i in t)M.has(t,i)&&e.push([i,t[i]]);return e},M.invert=function(t){var e={};for(var i in t)M.has(t,i)&&(e[t[i]]=i);return e},M.functions=M.methods=function(t){var e=[];for(var i in t)M.isFunction(t[i])&&e.push(i);return e.sort()},M.extend=function(t){return D(a.call(arguments,1),function(e){if(e)for(var i in e)t[i]=e[i]}),t},M.pick=function(t){var e={},i=l.apply(n,a.call(arguments,1));return D(i,function(i){i in t&&(e[i]=t[i])}),e},M.omit=function(t){var e={},i=l.apply(n,a.call(arguments,1));for(var s in t)M.contains(i,s)||(e[s]=t[s]);return e},M.defaults=function(t){return D(a.call(arguments,1),function(e){if(e)for(var i in e)void 0===t[i]&&(t[i]=e[i])}),t},M.clone=function(t){return M.isObject(t)?M.isArray(t)?t.slice():M.extend({},t):t},M.tap=function(t,e){return e(t),t};var A=function(t,e,i,n){if(t===e)return 0!==t||1/t==1/e;if(null==t||null==e)return t===e;t instanceof M&&(t=t._wrapped),e instanceof M&&(e=e._wrapped);var s=u.call(t);if(s!=u.call(e))return!1;switch(s){case"[object String]":return t==String(e);case"[object Number]":return t!=+t?e!=+e:0==t?1/t==1/e:t==+e;case"[object Date]":case"[object Boolean]":return+t==+e;case"[object RegExp]":return t.source==e.source&&t.global==e.global&&t.multiline==e.multiline&&t.ignoreCase==e.ignoreCase}if("object"!=typeof t||"object"!=typeof e)return!1;for(var r=i.length;r--;)if(i[r]==t)return n[r]==e;var o=t.constructor,a=e.constructor;if(o!==a&&!(M.isFunction(o)&&o instanceof o&&M.isFunction(a)&&a instanceof a))return!1;i.push(t),n.push(e);var l=0,h=!0;if("[object Array]"==s){if(l=t.length,h=l==e.length)for(;l--&&(h=A(t[l],e[l],i,n)););}else{for(var c in t)if(M.has(t,c)&&(l++,!(h=M.has(e,c)&&A(t[c],e[c],i,n))))break;if(h){for(c in e)if(M.has(e,c)&&!l--)break;h=!l}}return i.pop(),n.pop(),h};M.isEqual=function(t,e){return A(t,e,[],[])},M.isEmpty=function(t){if(null==t)return!0;if(M.isArray(t)||M.isString(t))return 0===t.length;for(var e in t)if(M.has(t,e))return!1;return!0},M.isElement=function(t){return!(!t||1!==t.nodeType)},M.isArray=b||function(t){return"[object Array]"==u.call(t)},M.isObject=function(t){return t===Object(t)},D(["Arguments","Function","String","Number","Date","RegExp"],function(t){M["is"+t]=function(e){return u.call(e)=="[object "+t+"]"}}),M.isArguments(arguments)||(M.isArguments=function(t){return!(!t||!M.has(t,"callee"))}),"function"!=typeof/./&&(M.isFunction=function(t){return"function"==typeof t}),M.isFinite=function(t){return isFinite(t)&&!isNaN(parseFloat(t))},M.isNaN=function(t){return M.isNumber(t)&&t!=+t},M.isBoolean=function(t){return t===!0||t===!1||"[object Boolean]"==u.call(t)},M.isNull=function(t){return null===t},M.isUndefined=function(t){return void 0===t},M.has=function(t,e){return h.call(t,e)},M.noConflict=function(){return t._=e,this},M.identity=function(t){return t},M.times=function(t,e,i){for(var n=Array(Math.max(0,t)),s=0;t>s;s++)n[s]=e.call(i,s);return n},M.random=function(t,e){return null==e&&(e=t,t=0),t+Math.floor(Math.random()*(e-t+1))};var F={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"}};F.unescape=M.invert(F.escape);var P={escape:new RegExp("["+M.keys(F.escape).join("")+"]","g"),unescape:new RegExp("("+M.keys(F.unescape).join("|")+")","g")};M.each(["escape","unescape"],function(t){M[t]=function(e){return null==e?"":(""+e).replace(P[t],function(e){return F[t][e]})}}),M.result=function(t,e){if(null!=t){var i=t[e];return M.isFunction(i)?i.call(t):i}},M.mixin=function(t){D(M.functions(t),function(e){var i=M[e]=t[e];M.prototype[e]=function(){var t=[this._wrapped];return o.apply(t,arguments),L.call(this,i.apply(M,t))}})};var N=0;M.uniqueId=function(t){var e=++N+"";return t?t+e:e},M.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var O=/(.)^/,z={"'":"'","\\":"\\","\r":"r","\n":"n","	":"t","\u2028":"u2028","\u2029":"u2029"},R=/\\|'|\r|\n|\t|\u2028|\u2029/g;M.template=function(t,e,i){var n;i=M.defaults({},i,M.templateSettings);var s=new RegExp([(i.escape||O).source,(i.interpolate||O).source,(i.evaluate||O).source].join("|")+"|$","g"),r=0,o="__p+='";t.replace(s,function(e,i,n,s,a){return o+=t.slice(r,a).replace(R,function(t){return"\\"+z[t]}),i&&(o+="'+\n((__t=("+i+"))==null?'':_.escape(__t))+\n'"),n&&(o+="'+\n((__t=("+n+"))==null?'':__t)+\n'"),s&&(o+="';\n"+s+"\n__p+='"),r=a+e.length,e}),o+="';\n",i.variable||(o="with(obj||{}){\n"+o+"}\n"),o="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+o+"return __p;\n";try{n=new Function(i.variable||"obj","_",o)}catch(a){throw a.source=o,a}if(e)return n(e,M);var l=function(t){return n.call(this,t,M)};return l.source="function("+(i.variable||"obj")+"){\n"+o+"}",l},M.chain=function(t){return M(t).chain()};var L=function(t){return this._chain?M(t).chain():t};M.mixin(M),D(["pop","push","reverse","shift","sort","splice","unshift"],function(t){var e=n[t];M.prototype[t]=function(){var i=this._wrapped;return e.apply(i,arguments),"shift"!=t&&"splice"!=t||0!==i.length||delete i[0],L.call(this,i)}}),D(["concat","join","slice"],function(t){var e=n[t];M.prototype[t]=function(){return L.call(this,e.apply(this._wrapped,arguments))}}),M.extend(M.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}.call(this);var Backbone=Backbone||{};!function(){var t=[],e=t.slice,i=function(t,e,i){var n,s=-1,r=e.length;switch(i.length){case 0:for(;++s<r;)(n=e[s]).callback.call(n.ctx);return;case 1:for(;++s<r;)(n=e[s]).callback.call(n.ctx,i[0]);return;case 2:for(;++s<r;)(n=e[s]).callback.call(n.ctx,i[0],i[1]);return;case 3:for(;++s<r;)(n=e[s]).callback.call(n.ctx,i[0],i[1],i[2]);return;default:for(;++s<r;)(n=e[s]).callback.apply(n.ctx,i)}},n=Backbone.Events={on:function(t,e,i){this._events||(this._events={});var n=this._events[t]||(this._events[t]=[]);return n.push({callback:e,context:i,ctx:i||this}),this},once:function(t,e,i){var n=this,s=_.once(function(){n.off(t,s),e.apply(this,arguments)});return s._callback=e,this.on(t,s,i),this},off:function(t,e,i){var n,s,r,o,a,l,u,h;if(!this._events)return this;if(!t&&!e&&!i)return this._events={},this;for(o=t?[t]:_.keys(this._events),a=0,l=o.length;l>a;a++)if(t=o[a],n=this._events[t]){if(r=[],e||i)for(u=0,h=n.length;h>u;u++)s=n[u],(e&&e!==(s.callback._callback||s.callback)||i&&i!==s.context)&&r.push(s);this._events[t]=r}return this},trigger:function(t){if(!this._events)return this;var n=e.call(arguments,1),s=this._events[t],r=this._events.all;return s&&i(this,s,n),r&&i(this,r,arguments),this},listenTo:function(t,e,i){var n=this._listeners||(this._listeners={}),s=t._listenerId||(t._listenerId=_.uniqueId("l"));return n[s]=t,t.on(e,i||this,this),this},stopListening:function(t,e,i){var n=this._listeners;if(n){if(t)t.off(e,i,this),e||i||delete n[t._listenerId];else{for(var s in n)n[s].off(null,null,this);this._listeners={}}return this}}};n.bind=n.on,n.unbind=n.off,"undefined"!=typeof exports&&("undefined"!=typeof module&&module.exports&&(exports=module.exports=n),exports.Backbone=exports.Backbone||Backbone)}(),function(){function t(t,n){var s=(new Date).getTime(),r=Math.max(0,16-(s-i)),o=e.setTimeout(function(){t(s+r)},r);return i=s+r,o}var e=this,i=0,n=["ms","moz","webkit","o"];if("undefined"!=typeof exports)return"undefined"!=typeof module&&module.exports&&(exports=module.exports=t),void(exports.requestAnimationFrame=t);for(var s=0;s<n.length&&!e.requestAnimationFrame;++s)e.requestAnimationFrame=e[n[s]+"RequestAnimationFrame"],e.cancelAnimationFrame=e[n[s]+"CancelAnimationFrame"]||e[n[s]+"CancelRequestAnimationFrame"];e.requestAnimationFrame||(e.requestAnimationFrame=t),e.cancelAnimationFrame||(e.cancelAnimationFrame=function(t){clearTimeout(t)})}(),function(){function t(){var t=document.body.getBoundingClientRect(),e=this.width=t.width,i=this.height=t.height;this.renderer.setSize(e,i,this.ratio),this.trigger(g.Events.resize,e,i)}function e(){return(i.performance&&i.performance.now?i.performance:Date).now()}var i=this,n=i.Two||{},s=Math.sin,r=Math.cos,o=Math.atan2,a=Math.sqrt,l=(Math.round,Math.abs,Math.PI),u=2*l,h=l/2,c=Math.pow,d=Math.min,f=Math.max,p=0,m={hasEventListeners:_.isFunction(i.addEventListener),bind:function(t,e,i,n){return this.hasEventListeners?t.addEventListener(e,i,!!n):t.attachEvent("on"+e,i),this},unbind:function(t,e,i,n){return this.hasEventListeners?t.removeEventListeners(e,i,!!n):t.detachEvent("on"+e,i),this}},g=i.Two=function(e){var n=_.defaults(e||{},{fullscreen:!1,width:640,height:480,type:g.Types.svg,autostart:!1});if(_.each(n,function(t,e){"fullscreen"!==e&&"width"!==e&&"height"!==e&&"autostart"!==e&&(this[e]=t)},this),_.isElement(n.domElement)&&(this.type=g.Types[n.domElement.tagName.toLowerCase()]),this.renderer=new g[this.type](this),g.Utils.setPlaying.call(this,n.autostart),this.frameCount=0,n.fullscreen){var s=_.bind(t,this);_.extend(document.body.style,{overflow:"hidden",margin:0,padding:0,top:0,left:0,right:0,bottom:0,position:"fixed"}),_.extend(this.renderer.domElement.style,{display:"block",top:0,left:0,right:0,bottom:0,position:"fixed"}),m.bind(i,"resize",s),s()}else _.isElement(n.domElement)||(this.renderer.setSize(n.width,n.height,this.ratio),this.width=n.width,this.height=n.height);this.scene=this.renderer.scene,g.Instances.push(this)};_.extend(g,{Array:i.Float32Array||Array,Types:{webgl:"WebGLRenderer",svg:"SVGRenderer",canvas:"CanvasRenderer"},Version:"v0.4.0",Identifier:"two_",Properties:{hierarchy:"hierarchy",demotion:"demotion"},Events:{play:"play",pause:"pause",update:"update",render:"render",resize:"resize",change:"change",remove:"remove",insert:"insert"},Commands:{move:"M",line:"L",curve:"C",close:"Z"},Resolution:8,Instances:[],noConflict:function(){return i.Two=n,this},uniqueId:function(){var t=p;return p++,t},Utils:{release:function(t){_.isObject(t)&&(_.isFunction(t.unbind)&&t.unbind(),t.vertices&&(_.isFunction(t.vertices.unbind)&&t.vertices.unbind(),_.each(t.vertices,function(t){_.isFunction(t.unbind)&&t.unbind()})),t.children&&_.each(t.children,function(t){g.Utils.release(t)}))},Curve:{CollinearityEpsilon:c(10,-30),RecursionLimit:16,CuspLimit:0,Tolerance:{distance:.25,angle:0,epsilon:.01},abscissas:[[.5773502691896257],[0,.7745966692414834],[.33998104358485626,.8611363115940526],[0,.5384693101056831,.906179845938664],[.2386191860831969,.6612093864662645,.932469514203152],[0,.4058451513773972,.7415311855993945,.9491079123427585],[.1834346424956498,.525532409916329,.7966664774136267,.9602898564975363],[0,.3242534234038089,.6133714327005904,.8360311073266358,.9681602395076261],[.14887433898163122,.4333953941292472,.6794095682990244,.8650633666889845,.9739065285171717],[0,.26954315595234496,.5190961292068118,.7301520055740494,.8870625997680953,.978228658146057],[.1252334085114689,.3678314989981802,.5873179542866175,.7699026741943047,.9041172563704749,.9815606342467192],[0,.2304583159551348,.44849275103644687,.6423493394403402,.8015780907333099,.9175983992229779,.9841830547185881],[.10805494870734367,.31911236892788974,.5152486363581541,.6872929048116855,.827201315069765,.9284348836635735,.9862838086968123],[0,.20119409399743451,.3941513470775634,.5709721726085388,.7244177313601701,.8482065834104272,.937273392400706,.9879925180204854],[.09501250983763744,.2816035507792589,.45801677765722737,.6178762444026438,.755404408355003,.8656312023878318,.9445750230732326,.9894009349916499]],weights:[[1],[.8888888888888888,.5555555555555556],[.6521451548625461,.34785484513745385],[.5688888888888889,.47862867049936647,.23692688505618908],[.46791393457269104,.3607615730481386,.17132449237917036],[.4179591836734694,.3818300505051189,.27970539148927664,.1294849661688697],[.362683783378362,.31370664587788727,.22238103445337448,.10122853629037626],[.3302393550012598,.31234707704000286,.26061069640293544,.1806481606948574,.08127438836157441],[.29552422471475287,.26926671930999635,.21908636251598204,.1494513491505806,.06667134430868814],[.2729250867779006,.26280454451024665,.23319376459199048,.18629021092773426,.1255803694649046,.05566856711617366],[.24914704581340277,.2334925365383548,.20316742672306592,.16007832854334622,.10693932599531843,.04717533638651183],[.2325515532308739,.22628318026289723,.2078160475368885,.17814598076194574,.13887351021978725,.09212149983772845,.04048400476531588],[.2152638534631578,.2051984637212956,.18553839747793782,.15720316715819355,.12151857068790319,.08015808715976021,.03511946033175186],[.2025782419255613,.19843148532711158,.1861610000155622,.16626920581699392,.13957067792615432,.10715922046717194,.07036604748810812,.03075324199611727],[.1894506104550685,.18260341504492358,.16915651939500254,.14959598881657674,.12462897125553388,.09515851168249279,.062253523938647894,.027152459411754096]]},devicePixelRatio:i.devicePixelRatio||1,getBackingStoreRatio:function(t){return t.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1},getRatio:function(t){return g.Utils.devicePixelRatio/M(t)},setPlaying:function(t){return this.playing=!!t,this},getComputedMatrix:function(t,e){e=e&&e.identity()||new g.Matrix;for(var i=t,n=[];i&&i._matrix;)n.push(i._matrix),i=i.parent;return n.reverse(),_.each(n,function(t){var i=t.elements;e.multiply(i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7],i[8],i[9])}),e},deltaTransformPoint:function(t,e,i){var n=e*t.a+i*t.c+0,s=e*t.b+i*t.d+0;return new g.Vector(n,s)},decomposeMatrix:function(t){var e=g.Utils.deltaTransformPoint(t,0,1),i=g.Utils.deltaTransformPoint(t,1,0),n=180/Math.PI*Math.atan2(e.y,e.x)-90,s=180/Math.PI*Math.atan2(i.y,i.x);return{translateX:t.e,translateY:t.f,scaleX:Math.sqrt(t.a*t.a+t.b*t.b),scaleY:Math.sqrt(t.c*t.c+t.d*t.d),skewX:n,skewY:s,rotation:n}},applySvgAttributes:function(t,e){var i,n,s,r,o={},a={};if(getComputedStyle){var l=getComputedStyle(t);for(i=l.length;i--;)n=l[i],s=l[n],void 0!==s&&(a[n]=s)}for(i=t.attributes.length;i--;)r=t.attributes[i],o[r.nodeName]=r.value;_.isUndefined(a.opacity)||(a["stroke-opacity"]=a.opacity,a["fill-opacity"]=a.opacity),_.extend(a,o),a.visible=!(_.isUndefined(a.display)&&"none"===a.display)||_.isUndefined(a.visibility)&&"hidden"===a.visibility;for(n in a)switch(s=a[n],n){case"transform":if("none"===s)break;var u=t.getCTM();if(null===u)break;var h=g.Utils.decomposeMatrix(t.getCTM());e.translation.set(h.translateX,h.translateY),e.rotation=h.rotation,e.scale=h.scaleX,a.x&&(e.translation.x=a.x),a.y&&(e.translation.y=a.y);break;case"visible":e.visible=s;break;case"stroke-linecap":e.cap=s;break;case"stroke-linejoin":e.join=s;break;case"stroke-miterlimit":e.miter=s;break;case"stroke-width":e.linewidth=parseFloat(s);break;case"stroke-opacity":case"fill-opacity":case"opacity":e.opacity=parseFloat(s);break;case"fill":case"stroke":e[n]="none"===s?"transparent":s;break;case"id":e.id=s;break;case"class":e.classList=s.split(" ")}return e},read:{svg:function(){return g.Utils.read.g.apply(this,arguments)},g:function(t){var e=new g.Group;g.Utils.applySvgAttributes(t,e);for(var i=0,n=t.childNodes.length;n>i;i++){var s=t.childNodes[i],r=s.nodeName;if(!r)return;var o=r.replace(/svg\:/gi,"").toLowerCase();if(o in g.Utils.read){var a=g.Utils.read[o].call(this,s);e.add(a)}}return e},polygon:function(t,e){var i=t.getAttribute("points"),n=[];i.replace(/(-?[\d\.?]+),(-?[\d\.?]+)/g,function(t,e,i){n.push(new g.Anchor(parseFloat(e),parseFloat(i)))});var s=new g.Polygon(n,!e).noStroke();return s.fill="black",g.Utils.applySvgAttributes(t,s)},polyline:function(t){return g.Utils.read.polygon(t,!0)},path:function(t){var e,i,n=t.getAttribute("d"),s=new g.Anchor,r=!1,o=!1,a=n.match(/[a-df-z][^a-df-z]*/gi),l=a.length-1;_.each(a.slice(0),function(t,e){var i,n=t[0],s=n.toLowerCase(),r=t.slice(1).trim().split(/[\s,]+|(?=\s?[+\-])/),o=[];switch(0>=e&&(a=[]),s){case"h":case"v":r.length>1&&(i=1);break;case"m":case"l":case"t":r.length>2&&(i=2);break;case"s":case"q":r.length>4&&(i=4);break;case"c":r.length>6&&(i=6);break;case"a":}if(i){for(var l=0,u=r.length,h=0;u>l;l+=i){var c=n;if(h>0)switch(n){case"m":c="l";break;case"M":c="L"}o.push([c].concat(r.slice(l,l+i)).join(" ")),h++}a=Array.prototype.concat.apply(a,o)}else a.push(t)});var u=_.flatten(_.map(a,function(t,n){var a,u,h,d=t[0],f=d.toLowerCase();i=t.slice(1).trim(),i=i.replace(/(-?\d+(?:\.\d*)?)[eE]([+\-]?\d+)/g,function(t,e,i){return parseFloat(e)*c(10,i)}),i=i.split(/[\s,]+|(?=\s?[+\-])/),o=d===f;var p,m,v,y,b,x,w,M,D;switch(f){case"z":n>=l?r=!0:(u=s.x,h=s.y,a=new g.Anchor(u,h,void 0,void 0,void 0,void 0,g.Commands.close));break;case"m":case"l":u=parseFloat(i[0]),h=parseFloat(i[1]),a=new g.Anchor(u,h,void 0,void 0,void 0,void 0,"m"===f?g.Commands.move:g.Commands.line),o&&a.addSelf(s),s=a;break;case"h":case"v":var k="h"===f?"x":"y",C="x"===k?"y":"x";a=new g.Anchor(void 0,void 0,void 0,void 0,void 0,void 0,g.Commands.line),a[k]=parseFloat(i[0]),a[C]=s[C],o&&(a[k]+=s[k]),s=a;break;case"c":case"s":p=s.x,m=s.y,e||(e=new g.Vector),"c"===f?(v=parseFloat(i[0]),y=parseFloat(i[1]),b=parseFloat(i[2]),x=parseFloat(i[3]),w=parseFloat(i[4]),M=parseFloat(i[5])):(D=S(s,e,o),v=D.x,y=D.y,b=parseFloat(i[0]),x=parseFloat(i[1]),w=parseFloat(i[2]),M=parseFloat(i[3])),o&&(v+=p,y+=m,b+=p,x+=m,w+=p,M+=m),_.isObject(s.controls)||g.Anchor.AppendCurveProperties(s),s.controls.right.set(v-s.x,y-s.y),a=new g.Anchor(w,M,b-w,x-M,void 0,void 0,g.Commands.curve),s=a,e=a.controls.left;break;case"t":case"q":p=s.x,m=s.y,e||(e=new g.Vector),e.isZero()?(v=p,y=m):(v=e.x,m=e.y),"q"===f?(b=parseFloat(i[0]),x=parseFloat(i[1]),w=parseFloat(i[1]),M=parseFloat(i[2])):(D=S(s,e,o),b=D.x,x=D.y,w=parseFloat(i[0]),M=parseFloat(i[1])),o&&(v+=p,y+=m,b+=p,x+=m,w+=p,M+=m),_.isObject(s.controls)||g.Anchor.AppendCurveProperties(s),s.controls.right.set(v-s.x,y-s.y),a=new g.Anchor(w,M,b-w,x-M,void 0,void 0,g.Commands.curve),s=a,e=a.controls.left;break;case"a":throw new g.Utils.Error("not yet able to interpret Elliptical Arcs.")}return a}));if(!(u.length<=1)){u=_.compact(u);var h=new g.Polygon(u,r,void 0,!0).noStroke();return h.fill="black",g.Utils.applySvgAttributes(t,h)}},circle:function(t){var e=parseFloat(t.getAttribute("cx")),i=parseFloat(t.getAttribute("cy")),n=parseFloat(t.getAttribute("r")),o=g.Resolution,a=_.map(_.range(o),function(t){var e=t/o,i=e*u,a=n*r(i),l=n*s(i);return new g.Anchor(a,l)},this),l=new g.Polygon(a,!0,!0).noStroke();return l.translation.set(e,i),l.fill="black",g.Utils.applySvgAttributes(t,l)},ellipse:function(t){var e=parseFloat(t.getAttribute("cx")),i=parseFloat(t.getAttribute("cy")),n=parseFloat(t.getAttribute("rx")),o=parseFloat(t.getAttribute("ry")),a=g.Resolution,l=_.map(_.range(a),function(t){var e=t/a,i=e*u,l=n*r(i),h=o*s(i);return new g.Anchor(l,h)},this),h=new g.Polygon(l,!0,!0).noStroke();return h.translation.set(e,i),h.fill="black",g.Utils.applySvgAttributes(t,h)},rect:function(t){var e=parseFloat(t.getAttribute("x")),i=parseFloat(t.getAttribute("y")),n=parseFloat(t.getAttribute("width")),s=parseFloat(t.getAttribute("height")),r=n/2,o=s/2,a=[new g.Anchor(r,o),new g.Anchor(-r,o),new g.Anchor(-r,-o),new g.Anchor(r,-o)],l=new g.Polygon(a,!0).noStroke();return l.translation.set(e+r,i+o),l.fill="black",g.Utils.applySvgAttributes(t,l)},line:function(t){var e=parseFloat(t.getAttribute("x1")),i=parseFloat(t.getAttribute("y1")),n=parseFloat(t.getAttribute("x2")),s=parseFloat(t.getAttribute("y2")),r=n-e,o=s-i,a=r/2,l=o/2,u=[new g.Anchor(-a,-l),new g.Anchor(a,l)],h=new g.Polygon(u).noFill();return h.translation.set(e+a,i+l),g.Utils.applySvgAttributes(t,h)}},subdivide:function(t,e,i,n,s,r,o,a,l){l=l||g.Utils.Curve.RecursionLimit;var u=l+1;return t===o&&e===a?[new g.Anchor(o,a)]:_.map(_.range(0,u),function(l){var h=l/u,c=D(h,t,i,s,o),d=D(h,e,n,r,a);return new g.Anchor(c,d)})},getPointOnCubicBezier:function(t,e,i,n,s){var r=1-t;return r*r*r*e+3*r*r*t*i+3*r*t*t*n+t*t*t*s},getCurveLength:function(t,e,i,n,s,r,o,l,u){if(t===i&&e===n&&s===o&&r===l){var h=o-t,c=l-e;return a(h*h+c*c)}var d=9*(i-s)+3*(o-t),f=6*(t+s)-12*i,p=3*(i-t),m=9*(n-r)+3*(l-e),v=6*(e+r)-12*n,y=3*(n-e),_=function(t){var e=(d*t+f)*t+p,i=(m*t+v)*t+y;return a(e*e+i*i)};return k(_,0,1,u||g.Utils.Curve.RecursionLimit)},integrate:function(t,e,i,n){for(var s=g.Utils.Curve.abscissas[n-2],r=g.Utils.Curve.weights[n-2],o=.5*(i-e),a=o+e,l=0,u=n+1>>1,h=1&n?r[l++]*t(a):0;u>l;){var c=o*s[l];h+=r[l++]*(t(a+c)+t(a-c))}return o*h},getCurveFromPoints:function(t,e){for(var i=t.length,n=i-1,s=0;i>s;s++){var r=t[s];_.isObject(r.controls)||g.Anchor.AppendCurveProperties(r);var o=e?w(s-1,i):f(s-1,0),a=e?w(s+1,i):d(s+1,n),l=t[o],u=r,h=t[a];x(l,u,h),u._command=0===s?g.Commands.move:g.Commands.curve,u.controls.left.x=_.isNumber(u.controls.left.x)?u.controls.left.x:u.x,u.controls.left.y=_.isNumber(u.controls.left.y)?u.controls.left.y:u.y,u.controls.right.x=_.isNumber(u.controls.right.x)?u.controls.right.x:u.x,u.controls.right.y=_.isNumber(u.controls.right.y)?u.controls.right.y:u.y}},getControlPoints:function(t,e,i){var n=b(t,e),o=b(i,e),a=v(t,e),u=v(i,e),c=(n+o)/2;return e.u=_.isObject(e.controls.left)?e.controls.left:new g.Vector(0,0),e.v=_.isObject(e.controls.right)?e.controls.right:new g.Vector(0,0),1e-4>a||1e-4>u?(e._relative||(e.controls.left.copy(e),e.controls.right.copy(e)),e):(a*=.33,u*=.33,n>o?c+=h:c-=h,e.controls.left.x=r(c)*a,e.controls.left.y=s(c)*a,c-=l,e.controls.right.x=r(c)*u,e.controls.right.y=s(c)*u,e._relative||(e.controls.left.x+=e.x,e.controls.left.y+=e.y,e.controls.right.x+=e.x,e.controls.right.y+=e.y),e)},getReflection:function(t,e,i){return new g.Vector(2*t.x-(e.x+t.x)-(i?t.x:0),2*t.y-(e.y+t.y)-(i?t.y:0))},angleBetween:function(t,e){var i,n;return arguments.length>=4?(i=arguments[0]-arguments[2],n=arguments[1]-arguments[3],o(n,i)):(i=t.x-e.x,n=t.y-e.y,o(n,i))},distanceBetweenSquared:function(t,e){var i=t.x-e.x,n=t.y-e.y;return i*i+n*n},distanceBetween:function(t,e){return a(y(t,e))},toFixed:function(t){return Math.floor(1e3*t)/1e3},mod:function(t,e){for(;0>t;)t+=e;return t%e},Collection:function(){Array.call(this),arguments.length>1?Array.prototype.push.apply(this,arguments):arguments[0]&&Array.isArray(arguments[0])&&Array.prototype.push.apply(this,arguments[0])},Error:function(t){this.name="two.js",this.message=t}}}),g.Utils.Error.prototype=new Error,g.Utils.Error.prototype.constructor=g.Utils.Error,g.Utils.Collection.prototype=new Array,g.Utils.Collection.constructor=g.Utils.Collection,_.extend(g.Utils.Collection.prototype,Backbone.Events,{pop:function(){var t=Array.prototype.pop.apply(this,arguments);return this.trigger(g.Events.remove,[t]),t},shift:function(){var t=Array.prototype.shift.apply(this,arguments);return this.trigger(g.Events.remove,[t]),t},push:function(){var t=Array.prototype.push.apply(this,arguments);return this.trigger(g.Events.insert,arguments),t},unshift:function(){var t=Array.prototype.unshift.apply(this,arguments);return this.trigger(g.Events.insert,arguments),t},splice:function(){var t,e=Array.prototype.splice.apply(this,arguments);return this.trigger(g.Events.remove,e),arguments.length>2&&(t=this.slice(arguments[0],arguments.length-2),this.trigger(g.Events.insert,t)),e}});var v=g.Utils.distanceBetween,y=g.Utils.distanceBetweenSquared,b=g.Utils.angleBetween,x=g.Utils.getControlPoints,w=(g.Utils.getCurveFromPoints,g.Utils.solveSegmentIntersection,g.Utils.decoupleShapes,g.Utils.mod),M=g.Utils.getBackingStoreRatio,D=g.Utils.getPointOnCubicBezier,k=(g.Utils.getCurveLength,g.Utils.integrate),S=g.Utils.getReflection;_.extend(g.prototype,Backbone.Events,{appendTo:function(t){return t.appendChild(this.renderer.domElement),this},play:function(){return g.Utils.setPlaying.call(this,!0),this.trigger(g.Events.play)},pause:function(){return this.playing=!1,this.trigger(g.Events.pause)},update:function(){var t=!!this._lastFrame,i=e();this.frameCount++,t&&(this.timeDelta=parseFloat((i-this._lastFrame).toFixed(3))),this._lastFrame=i;var n=this.width,s=this.height,r=this.renderer;return(n!==r.width||s!==r.height)&&r.setSize(n,s,this.ratio),this.trigger(g.Events.update,this.frameCount,this.timeDelta),this.render()},render:function(){return this.renderer.render(),this.trigger(g.Events.render,this.frameCount)},add:function(t){var e=t;return _.isArray(t)||(e=_.toArray(arguments)),this.scene.add(e),this},remove:function(t){var e=t;return _.isArray(t)||(e=_.toArray(arguments)),this.scene.remove(e),this},clear:function(){return this.scene.remove(_.toArray(this.scene.children)),this},makeLine:function(t,e,i,n){var s=i-t,r=n-e,o=s/2,a=r/2,l=[new g.Anchor(-o,-a),new g.Anchor(o,a)],u=new g.Polygon(l).noFill();return u.translation.set(t+o,e+a),this.scene.add(u),u},makeRectangle:function(t,e,i,n){var s=i/2,r=n/2,o=[new g.Anchor(-s,-r),new g.Anchor(s,-r),new g.Anchor(s,r),new g.Anchor(-s,r)],a=new g.Polygon(o,!0);return a.translation.set(t,e),this.scene.add(a),a},makeCircle:function(t,e,i){return this.makeEllipse(t,e,i,i)},makeEllipse:function(t,e,i,n){var o=g.Resolution,a=_.map(_.range(o),function(t){var e=t/o,a=e*u,l=i*r(a),h=n*s(a);return new g.Anchor(l,h)},this),l=new g.Polygon(a,!0,!0);return l.translation.set(t,e),this.scene.add(l),l},makeCurve:function(t){var e=arguments.length,i=t;if(!_.isArray(t)){i=[];for(var n=0;e>n;n+=2){var s=arguments[n];if(!_.isNumber(s))break;var r=arguments[n+1];i.push(new g.Anchor(s,r))}}var o=arguments[e-1],a=new g.Polygon(i,!(_.isBoolean(o)?o:void 0),!0),l=a.getBoundingClientRect(),u=l.left+l.width/2,h=l.top+l.height/2;return _.each(a.vertices,function(t){t.x-=u,t.y-=h}),a.translation.set(u,h),this.scene.add(a),a},makePolygon:function(t){var e=arguments.length,i=t;if(!_.isArray(t)){i=[];for(var n=0;e>n;n+=2){var s=arguments[n];if(!_.isNumber(s))break;var r=arguments[n+1];i.push(new g.Anchor(s,r))}}var o=arguments[e-1],a=new g.Polygon(i,!(_.isBoolean(o)?o:void 0)),l=a.getBoundingClientRect();return a.center().translation.set(l.left+l.width/2,l.top+l.height/2),this.scene.add(a),a},makeGroup:function(t){var e=t;_.isArray(t)||(e=_.toArray(arguments));var i=new g.Group;return this.scene.add(i),i.add(e),i},interpret:function(t,e){var i=t.tagName.toLowerCase();if(!(i in g.Utils.read))return null;var n=g.Utils.read[i].call(this,t);return e&&n instanceof g.Group?this.add(_.values(n.children)):this.add(n),n}}),function(){requestAnimationFrame(arguments.callee),g.Instances.forEach(function(t){t.playing&&t.update()})}(),"function"==typeof define&&define.amd?define("two",[],function(){return g}):"undefined"!=typeof module&&module.exports&&(module.exports=g)}(),function(t){var e=t.Vector=function(t,e){this.x=t||0,this.y=e||0};_.extend(e,{zero:new t.Vector}),_.extend(e.prototype,Backbone.Events,{set:function(t,e){return this.x=t,this.y=e,this},copy:function(t){return this.x=t.x,this.y=t.y,this},clear:function(){return this.x=0,this.y=0,this},clone:function(){return new e(this.x,this.y)},add:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addSelf:function(t){return this.x+=t.x,this.y+=t.y,this},sub:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},subSelf:function(t){return this.x-=t.x,this.y-=t.y,this},multiplySelf:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divideScalar:function(t){return t?(this.x/=t,this.y/=t):this.set(0,0),this},negate:function(){return this.multiplyScalar(-1)},dot:function(t){return this.x*t.x+this.y*t.y},lengthSquared:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSquared())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y;return e*e+i*i},setLength:function(t){return this.normalize().multiplyScalar(t)},equals:function(t){return this.distanceTo(t)<1e-4},lerp:function(t,e){var i=(t.x-this.x)*e+this.x,n=(t.y-this.y)*e+this.y;return this.set(i,n)},isZero:function(){return this.length()<1e-4},toString:function(){return this.x+","+this.y},toObject:function(){return{x:this.x,y:this.y}}});var i={set:function(e,i){return this._x=e,this._y=i,this.trigger(t.Events.change)},copy:function(e){return this._x=e.x,this._y=e.y,this.trigger(t.Events.change)},clear:function(){return this._x=0,this._y=0,this.trigger(t.Events.change)},clone:function(){return new e(this._x,this._y)},add:function(e,i){return this._x=e.x+i.x,this._y=e.y+i.y,this.trigger(t.Events.change)},addSelf:function(e){return this._x+=e.x,this._y+=e.y,this.trigger(t.Events.change)},sub:function(e,i){return this._x=e.x-i.x,this._y=e.y-i.y,this.trigger(t.Events.change)},subSelf:function(e){return this._x-=e.x,this._y-=e.y,this.trigger(t.Events.change)},multiplySelf:function(e){return this._x*=e.x,this._y*=e.y,this.trigger(t.Events.change)},multiplyScalar:function(e){return this._x*=e,this._y*=e,this.trigger(t.Events.change)},divideScalar:function(e){return e?(this._x/=e,this._y/=e,this.trigger(t.Events.change)):this.clear()},negate:function(){return this.multiplyScalar(-1)},dot:function(t){return this._x*t.x+this._y*t.y},lengthSquared:function(){return this._x*this._x+this._y*this._y},length:function(){return Math.sqrt(this.lengthSquared())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this._x-t.x,i=this._y-t.y;return e*e+i*i},setLength:function(t){return this.normalize().multiplyScalar(t)},equals:function(t){return this.distanceTo(t)<1e-4},lerp:function(t,e){var i=(t.x-this._x)*e+this._x,n=(t.y-this._y)*e+this._y;return this.set(i,n)},isZero:function(){return this.length()<1e-4},toString:function(){return this._x+","+this._y},toObject:function(){return{x:this._x,y:this._y}}},n={get:function(){return this._x},set:function(e){this._x=e,this.trigger(t.Events.change,"x")}},s={get:function(){return this._y},set:function(e){this._y=e,this.trigger(t.Events.change,"y")}};t.Vector.prototype.bind=t.Vector.prototype.on=function(){return this._bound||(this._x=this.x,this._y=this.y,Object.defineProperty(this,"x",n),Object.defineProperty(this,"y",s),_.extend(this,i),this._bound=!0),
Backbone.Events.bind.apply(this,arguments),this}}(Two),function(t){var e=t.Commands,i=t.Anchor=function(n,s,r,o,a,l,u){return t.Vector.call(this,n,s),this._broadcast=_.bind(function(){this.trigger(t.Events.change)},this),this._command=u||e.move,this._relative=!0,u?(i.AppendCurveProperties(this),_.isNumber(r)&&(this.controls.left.x=r),_.isNumber(o)&&(this.controls.left.y=o),_.isNumber(a)&&(this.controls.right.x=a),void(_.isNumber(l)&&(this.controls.right.y=l))):this};_.extend(i,{AppendCurveProperties:function(e){e.controls={left:new t.Vector(0,0),right:new t.Vector(0,0)}}});var n={listen:function(){return _.isObject(this.controls)||i.AppendCurveProperties(this),this.controls.left.bind(t.Events.change,this._broadcast),this.controls.right.bind(t.Events.change,this._broadcast),this},ignore:function(){return this.controls.left.unbind(t.Events.change,this._broadcast),this.controls.right.unbind(t.Events.change,this._broadcast),this},clone:function(){var e=this.controls,i=new t.Anchor(this.x,this.y,e&&e.left.x,e&&e.left.y,e&&e.right.x,e&&e.right.y,this.command);return i.relative=this._relative,i},toObject:function(){var t={x:this.x,y:this.y};return this._command&&(t.command=this._command),this._relative&&(t.relative=this._relative),this.controls&&(t.controls={left:this.controls.left.toObject(),right:this.controls.right.toObject()}),t}};Object.defineProperty(i.prototype,"command",{get:function(){return this._command},set:function(n){return this._command=n,this._command!==e.curve||_.isObject(this.controls)||i.AppendCurveProperties(this),this.trigger(t.Events.change)}}),Object.defineProperty(i.prototype,"relative",{get:function(){return this._relative},set:function(e){return this._relative==e?this:(this._relative=!!e,this.trigger(t.Events.change))}}),_.extend(i.prototype,t.Vector.prototype,n),t.Anchor.prototype.bind=t.Anchor.prototype.on=function(){t.Vector.prototype.bind.apply(this,arguments),_.extend(this,n)},t.Anchor.prototype.unbind=t.Anchor.prototype.off=function(){t.Vector.prototype.unbind.apply(this,arguments),_.extend(this,n)}}(Two),function(t){var e=Math.cos,i=Math.sin,n=Math.tan,s=t.Matrix=function(e,i,n,s,r,o){this.elements=new t.Array(9);var a=e;_.isArray(a)||(a=_.toArray(arguments)),this.identity().set(a)};_.extend(s,{Identity:[1,0,0,0,1,0,0,0,1],Multiply:function(e,i,n){if(i.length<=3){var s,r,o,a=e,l=i[0]||0,u=i[1]||0,h=i[2]||0;return s=a[0]*l+a[1]*u+a[2]*h,r=a[3]*l+a[4]*u+a[5]*h,o=a[6]*l+a[7]*u+a[8]*h,{x:s,y:r,z:o}}var c=e[0],d=e[1],f=e[2],p=e[3],m=e[4],g=e[5],v=e[6],y=e[7],_=e[8],b=i[0],x=i[1],w=i[2],M=i[3],D=i[4],k=i[5],S=i[6],C=i[7],I=i[8];return n=n||new t.Array(9),n[0]=c*b+d*M+f*S,n[1]=c*x+d*D+f*C,n[2]=c*w+d*k+f*I,n[3]=p*b+m*M+g*S,n[4]=p*x+m*D+g*C,n[5]=p*w+m*k+g*I,n[6]=v*b+y*M+_*S,n[7]=v*x+y*D+_*C,n[8]=v*w+y*k+_*I,n}}),_.extend(s.prototype,Backbone.Events,{set:function(e){var i=e;return _.isArray(i)||(i=_.toArray(arguments)),_.extend(this.elements,i),this.trigger(t.Events.change)},identity:function(){return this.set(s.Identity),this},multiply:function(e,i,n,s,r,o,a,l,u){var h=arguments,c=h.length;if(1>=c)return _.each(this.elements,function(t,i){this.elements[i]=t*e},this),this.trigger(t.Events.change);if(3>=c){var d,f,p;return e=e||0,i=i||0,n=n||0,r=this.elements,d=r[0]*e+r[1]*i+r[2]*n,f=r[3]*e+r[4]*i+r[5]*n,p=r[6]*e+r[7]*i+r[8]*n,{x:d,y:f,z:p}}var m=this.elements,g=h,v=m[0],y=m[1],b=m[2],x=m[3],w=m[4],M=m[5],D=m[6],k=m[7],S=m[8],C=g[0],I=g[1],T=g[2],E=g[3],A=g[4],F=g[5],P=g[6],N=g[7],O=g[8];return this.elements[0]=v*C+y*E+b*P,this.elements[1]=v*I+y*A+b*N,this.elements[2]=v*T+y*F+b*O,this.elements[3]=x*C+w*E+M*P,this.elements[4]=x*I+w*A+M*N,this.elements[5]=x*T+w*F+M*O,this.elements[6]=D*C+k*E+S*P,this.elements[7]=D*I+k*A+S*N,this.elements[8]=D*T+k*F+S*O,this.trigger(t.Events.change)},inverse:function(e){var i=this.elements;e=e||new t.Matrix;var n=i[0],s=i[1],r=i[2],o=i[3],a=i[4],l=i[5],u=i[6],h=i[7],c=i[8],d=c*a-l*h,f=-c*o+l*u,p=h*o-a*u,m=n*d+s*f+r*p;return m?(m=1/m,e.elements[0]=d*m,e.elements[1]=(-c*s+r*h)*m,e.elements[2]=(l*s-r*a)*m,e.elements[3]=f*m,e.elements[4]=(c*n-r*u)*m,e.elements[5]=(-l*n+r*o)*m,e.elements[6]=p*m,e.elements[7]=(-h*n+s*u)*m,e.elements[8]=(a*n-s*o)*m,e):null},scale:function(t,e){var i=arguments.length;return 1>=i&&(e=t),this.multiply(t,0,0,0,e,0,0,0,1)},rotate:function(t){var n=e(t),s=i(t);return this.multiply(n,-s,0,s,n,0,0,0,1)},translate:function(t,e){return this.multiply(1,0,t,0,1,e,0,0,1)},skewX:function(t){var e=n(t);return this.multiply(1,e,0,0,1,0,0,0,1)},skewY:function(t){var e=n(t);return this.multiply(1,0,0,e,1,0,0,0,1)},toString:function(t){var e=[];return this.toArray(t,e),e.join(" ")},toArray:function(t,e){var i=this.elements,n=!!e,s=parseFloat(i[0].toFixed(3)),r=parseFloat(i[1].toFixed(3)),o=parseFloat(i[2].toFixed(3)),a=parseFloat(i[3].toFixed(3)),l=parseFloat(i[4].toFixed(3)),u=parseFloat(i[5].toFixed(3));if(t){var h=parseFloat(i[6].toFixed(3)),c=parseFloat(i[7].toFixed(3)),d=parseFloat(i[8].toFixed(3));return n?(e[0]=s,e[1]=a,e[2]=h,e[3]=r,e[4]=l,e[5]=c,e[6]=o,e[7]=u,void(e[8]=d)):[s,a,h,r,l,c,o,u,d]}return n?(e[0]=s,e[1]=a,e[2]=r,e[3]=l,e[4]=o,void(e[5]=u)):[s,a,r,l,o,u]},clone:function(){var e,i,n,s,r,o,a,l,u;return e=this.elements[0],i=this.elements[1],n=this.elements[2],s=this.elements[3],r=this.elements[4],o=this.elements[5],a=this.elements[6],l=this.elements[7],u=this.elements[8],new t.Matrix(e,i,n,s,r,o,a,l,u)}})}(Two),function(t){var e=t.Utils.mod,i=t.Utils.toFixed,n={version:1.1,ns:"http://www.w3.org/2000/svg",xlink:"http://www.w3.org/1999/xlink",createElement:function(t,e){var i=t,s=document.createElementNS(this.ns,i);return"svg"===i&&(e=_.defaults(e||{},{version:this.version})),_.isObject(e)&&n.setAttributes(s,e),s},setAttributes:function(t,e){for(var i in e)t.setAttribute(i,e[i]);return this},removeAttributes:function(t,e){for(var i in e)t.removeAttribute(i);return this},toString:function(n,s){for(var r,o=n.length,a=o-1,l="",u=0;o>u;u++){var h,c,d,f,p,m,g,v,y,_=n[u],b=s?e(u-1,o):Math.max(u-1,0),x=s?e(u+1,o):Math.min(u+1,a),w=n[b],M=n[x],D=i(_._x),k=i(_._y);switch(_._command){case t.Commands.close:h=t.Commands.close;break;case t.Commands.curve:m=w.controls&&w.controls.right||w,g=_.controls&&_.controls.left||_,w._relative?(c=i(m.x+w.x),d=i(m.y+w.y)):(c=i(m.x),d=i(m.y)),_._relative?(f=i(g.x+_.x),p=i(g.y+_.y)):(f=i(g.x),p=i(g.y)),h=(0===u?t.Commands.move:t.Commands.curve)+" "+c+" "+d+" "+f+" "+p+" "+D+" "+k;break;case t.Commands.move:r=_,h=t.Commands.move+" "+D+" "+k;break;default:h=_._command+" "+D+" "+k}u>=a&&s&&(_._command===t.Commands.curve&&(M=r,v=_.controls&&_.controls.right||_,y=M.controls&&M.controls.left||M,_._relative?(c=i(v.x+_.x),d=i(v.y+_.y)):(c=i(v.x),d=i(v.y)),M._relative?(f=i(y.x+M.x),p=i(y.y+M.y)):(f=i(y.x),p=i(y.y)),D=i(M.x),k=i(M.y),h+=" C "+c+" "+d+" "+f+" "+p+" "+D+" "+k),h+=" Z"),l+=h+" "}return l},getClip:function(t){if(clip=t._renderer.clip,!clip){for(root=t;root.parent;)root=root.parent;clip=t._renderer.clip=n.createElement("clipPath"),root.defs.appendChild(clip)}return clip},group:{appendChild:function(t){var e=this.domElement.querySelector("#"+t);if(e){var i=e.nodeName;if(i){var n=i.replace(/svg\:/gi,"").toLowerCase();/clippath/.test(n)||this.elem.appendChild(e)}}},removeChild:function(t){var e=this.domElement.querySelector("#"+t);if(e){var i=e.nodeName;if(i){var n=i.replace(/svg\:/gi,"").toLowerCase();/clippath/.test(n)||this.elem.removeChild(e)}}},renderChild:function(t){n[t._renderer.type].render.call(t,this)},render:function(t){if(this._update(),0===this._opacity&&!this._flagOpacity)return this;this._renderer.elem||(this._renderer.elem=n.createElement("g",{id:this.id}),t.appendChild(this._renderer.elem));var e=this._matrix.manual||this._flagMatrix,i={domElement:t,elem:this._renderer.elem};e&&this._renderer.elem.setAttribute("transform","matrix("+this._matrix.toString()+")");for(var s in this.children){var r=this.children[s];n[r._renderer.type].render.call(r,t)}return this._flagOpacity&&this._renderer.elem.setAttribute("opacity",this._opacity),this._flagAdditions&&_.each(this.additions,n.group.appendChild,i),this._flagSubtractions&&_.each(this.subtractions,n.group.removeChild,i),this._flagMask&&(this._mask?this._renderer.elem.setAttribute("clip-path","url(#"+this._mask.id+")"):this._renderer.elem.removeAttribute("clip-path")),this.flagReset()}},polygon:{render:function(t){if(this._update(),0===this._opacity&&!this._flagOpacity)return this;var e={},i=this._matrix.manual||this._flagMatrix;if(i&&(e.transform="matrix("+this._matrix.toString()+")"),this._flagVertices){var s=n.toString(this._vertices,this._closed);e.d=s}return this._flagFill&&(e.fill=this._fill),this._flagStroke&&(e.stroke=this._stroke),this._flagLinewidth&&(e["stroke-width"]=this._linewidth),this._flagOpacity&&(e["stroke-opacity"]=this._opacity,e["fill-opacity"]=this._opacity),this._flagVisible&&(e.visibility=this._visible?"visible":"hidden"),this._flagCap&&(e["stroke-linecap"]=this._cap),this._flagJoin&&(e["stroke-linejoin"]=this._join),this._flagMiter&&(e["stroke-miterlimit"]=this.miter),this._renderer.elem?n.setAttributes(this._renderer.elem,e):(e.id=this.id,this._renderer.elem=n.createElement("path",e),t.appendChild(this._renderer.elem)),this._flagClip&&(clip=n.getClip(this),elem=this._renderer.elem,this._clip?(elem.removeAttribute("id"),clip.setAttribute("id",this.id),clip.appendChild(elem)):(clip.removeAttribute("id"),elem.setAttribute("id",this.id),this.parent._renderer.elem.appendChild(elem))),this.flagReset()}}},s=t[t.Types.svg]=function(e){this.domElement=e.domElement||n.createElement("svg"),this.scene=new t.Group,this.scene.parent=this,this.defs=n.createElement("defs"),this.domElement.appendChild(this.defs)};_.extend(s,{Utils:n}),_.extend(s.prototype,Backbone.Events,{setSize:function(t,e){return this.width=t,this.height=e,n.setAttributes(this.domElement,{width:t,height:e}),this},render:function(){return n.group.render.call(this.scene,this.domElement),this}})}(Two),function(t){var e=t.Utils.mod,i=t.Utils.toFixed,n=t.Utils.getRatio,s={group:{renderChild:function(t){s[t._renderer.type].render.call(t,this.ctx,!0,this.clip)},render:function(t){this._update();var e=this._matrix.elements,i=this.parent;this._renderer.opacity=this._opacity*(i&&i._renderer?i._renderer.opacity:1);var n=this._mask;return this._renderer.context||(this._renderer.context={}),this._renderer.context.ctx=t,t.save(),t.transform(e[0],e[3],e[1],e[4],e[2],e[5]),n&&s[n._renderer.type].render.call(n,t,!0),_.each(this.children,s.group.renderChild,this._renderer.context),t.restore(),this.flagReset()}},polygon:{render:function(n,s,r){var o,a,l,u,h,c,d,f,p,m,g,v,y,b,x,w,M,D,k,S,C,I,T,E,A,F,P,N,O;return this._update(),o=this._matrix.elements,a=this._stroke,l=this._linewidth,u=this._fill,h=this._opacity*this.parent._renderer.opacity,c=this._visible,d=this._cap,f=this._join,p=this._miter,m=this._closed,g=this._vertices,v=g.length,y=v-1,O=this._clip,s||c&&!O?(n.save(),o&&n.transform(o[0],o[3],o[1],o[4],o[2],o[5]),u&&(n.fillStyle=u),a&&(n.strokeStyle=a),l&&(n.lineWidth=l),p&&(n.miterLimit=p),f&&(n.lineJoin=f),d&&(n.lineCap=d),_.isNumber(h)&&(n.globalAlpha=h),n.beginPath(),g.forEach(function(s,r){switch(P=i(s.x),N=i(s.y),s._command){case t.Commands.close:n.closePath();break;case t.Commands.curve:x=m?e(r-1,v):Math.max(r-1,0),b=m?e(r+1,v):Math.min(r+1,y),w=g[x],M=g[b],T=w.controls&&w.controls.right||w,E=s.controls&&s.controls.left||s,w._relative?(C=T.x+i(w.x),I=T.y+i(w.y)):(C=i(T.x),I=i(T.y)),s._relative?(k=E.x+i(s.x),S=E.y+i(s.y)):(k=i(E.x),S=i(E.y)),n.bezierCurveTo(C,I,k,S,P,N),r>=y&&m&&(M=D,A=s.controls&&s.controls.right||s,F=M.controls&&M.controls.left||M,s._relative?(C=A.x+i(s.x),I=A.y+i(s.y)):(C=i(A.x),I=i(A.y)),M._relative?(k=F.x+i(M.x),S=F.y+i(M.y)):(k=i(F.x),S=i(F.y)),P=i(M.x),N=i(M.y),n.bezierCurveTo(C,I,k,S,P,N));break;case t.Commands.line:n.lineTo(P,N);break;case t.Commands.move:D=s,n.moveTo(P,N)}}),m&&n.closePath(),O||r||(n.fill(),n.stroke()),n.restore(),O&&!r&&n.clip(),this.flagReset()):this}}},r=t[t.Types.canvas]=function(e){this.domElement=e.domElement||document.createElement("canvas"),this.ctx=this.domElement.getContext("2d"),this.overdraw=e.overdraw||!1,this.scene=new t.Group,this.scene.parent=this};_.extend(r,{Utils:s}),_.extend(r.prototype,Backbone.Events,{setSize:function(t,e,i){return this.width=t,this.height=e,this.ratio=_.isUndefined(i)?n(this.ctx):i,this.domElement.width=t*this.ratio,this.domElement.height=e*this.ratio,_.extend(this.domElement.style,{width:t+"px",height:e+"px"}),this},render:function(){var t=1===this.ratio;return t||(this.ctx.save(),this.ctx.scale(this.ratio,this.ratio)),this.overdraw||this.ctx.clearRect(0,0,this.width,this.height),s.group.render.call(this.scene,this.ctx),t||this.ctx.restore(),this}})}(Two),function(t){var e=t.Matrix.Multiply,i=t.Utils.mod,n=[1,0,0,0,1,0,0,0,1],s=new t.Array(9),r=t.Utils.getRatio,o=t.Utils.toFixed,a={canvas:document.createElement("canvas"),uv:new t.Array([0,0,1,0,0,1,0,1,1,0,1,1]),group:{renderChild:function(t){a[t._renderer.type].render.call(t,this.gl,this.program)},render:function(i,n){this._update();var r=this.parent,o=r._matrix&&r._matrix.manual||r._flagMatrix,l=this._matrix.manual||this._flagMatrix;return(o||l)&&(this._renderer.matrix||(this._renderer.matrix=new t.Array(9)),this._matrix.toArray(!0,s),e(s,r._renderer.matrix,this._renderer.matrix),this._renderer.scale=this._scale*r._renderer.scale,o&&(this._flagMatrix=!0)),this._mask&&(i.enable(i.STENCIL_TEST),i.stencilFunc(i.ALWAYS,1,1),i.colorMask(!1,!1,!1,!0),i.stencilOp(i.KEEP,i.KEEP,i.INCR),a[this._mask._renderer.type].render.call(this._mask,i,n,this),i.colorMask(!0,!0,!0,!0),i.stencilFunc(i.NOTEQUAL,0,1),i.stencilOp(i.KEEP,i.KEEP,i.KEEP)),this._flagOpacity=r._flagOpacity||this._flagOpacity,this._renderer.opacity=this._opacity*(r&&r._renderer?r._renderer.opacity:1),_.each(this.children,a.group.renderChild,{gl:i,program:n}),this._mask&&(i.colorMask(!1,!1,!1,!1),i.stencilOp(i.KEEP,i.KEEP,i.DECR),a[this._mask._renderer.type].render.call(this._mask,i,n,this),i.colorMask(!0,!0,!0,!0),i.stencilFunc(i.NOTEQUAL,0,1),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.disable(i.STENCIL_TEST)),this.flagReset()}},polygon:{render:function(i,n,r){if(!this._visible||!this._opacity)return this;var o=this.parent,l=o._matrix.manual||o._flagMatrix,u=this._matrix.manual||this._flagMatrix,h=this._flagVertices||this._flagFill||this._flagStroke||this._flagLinewidth||this._flagOpacity||o._flagOpacity||this._flagVisible||this._flagCap||this._flagJoin||this._flagMiter||this._flagScale;return this._update(),(l||u)&&(this._renderer.matrix||(this._renderer.matrix=new t.Array(9)),this._matrix.toArray(!0,s),e(s,o._renderer.matrix,this._renderer.matrix),this._renderer.scale=this._scale*o._renderer.scale),h&&(this._renderer.rect||(this._renderer.rect={}),this._renderer.triangles||(this._renderer.triangles=new t.Array(12)),this._renderer.opacity=this._opacity*o._renderer.opacity,a.getBoundingClientRect(this._vertices,this._linewidth,this._renderer.rect),a.getTriangles(this._renderer.rect,this._renderer.triangles),a.updateBuffer(i,this,n),a.updateTexture(i,this)),!this._clip||r?(i.bindBuffer(i.ARRAY_BUFFER,this._renderer.textureCoordsBuffer),i.vertexAttribPointer(n.textureCoords,2,i.FLOAT,!1,0,0),i.bindTexture(i.TEXTURE_2D,this._renderer.texture),i.uniformMatrix3fv(n.matrix,!1,this._renderer.matrix),i.bindBuffer(i.ARRAY_BUFFER,this._renderer.buffer),i.vertexAttribPointer(n.position,2,i.FLOAT,!1,0,0),i.drawArrays(i.TRIANGLES,0,6),this.flagReset()):void 0}},getBoundingClientRect:function(t,e,i){var n,s,r=1/0,o=-(1/0),a=1/0,l=-(1/0);t.forEach(function(t){var e,i,n,s,u,h,c=t.x,d=t.y,f=t.controls;a=Math.min(d,a),r=Math.min(c,r),o=Math.max(c,o),l=Math.max(d,l),t.controls&&(u=f.left,h=f.right,u&&h&&(e=t._relative?u.x+c:u.x,i=t._relative?u.y+d:u.y,n=t._relative?h.x+c:h.x,s=t._relative?h.y+d:h.y,e&&i&&n&&s&&(a=Math.min(i,s,a),r=Math.min(e,n,r),o=Math.max(e,n,o),l=Math.max(i,s,l))))}),_.isNumber(e)&&(a-=e,r-=e,o+=e,l+=e),n=o-r,s=l-a,i.top=a,i.left=r,i.right=o,i.bottom=l,i.width=n,i.height=s,i.centroid||(i.centroid={}),i.centroid.x=-r,i.centroid.y=-a},getTriangles:function(t,e){var i=t.top,n=t.left,s=t.right,r=t.bottom;e[0]=n,e[1]=i,e[2]=s,e[3]=i,e[4]=n,e[5]=r,e[6]=n,e[7]=r,e[8]=s,e[9]=i,e[10]=s,e[11]=r},updateCanvas:function(e){var n=e._vertices,s=this.canvas,r=this.ctx,a=e._renderer.scale,l=e._stroke,u=e._linewidth*a,h=e._fill,c=e._renderer.opacity||e._opacity,d=e._cap,f=e._join,p=e._miter,m=e._closed,g=n.length,v=g-1;s.width=Math.max(Math.ceil(e._renderer.rect.width*a),1),s.height=Math.max(Math.ceil(e._renderer.rect.height*a),1);var y=e._renderer.rect.centroid,b=y.x*a,x=y.y*a;r.clearRect(0,0,s.width,s.height),h&&(r.fillStyle=h),l&&(r.strokeStyle=l),u&&(r.lineWidth=u),p&&(r.miterLimit=p),f&&(r.lineJoin=f),d&&(r.lineCap=d),_.isNumber(c)&&(r.globalAlpha=c);var w;r.beginPath(),n.forEach(function(e,s){var l,u,h,c,d,f,p,y,_,M,D,k,S,C;switch(S=o(e.x*a+b),C=o(e.y*a+x),e._command){case t.Commands.close:r.closePath();break;case t.Commands.curve:u=m?i(s-1,g):Math.max(s-1,0),l=m?i(s+1,g):Math.min(s+1,v),h=n[u],c=n[l],_=h.controls&&h.controls.right||h,M=e.controls&&e.controls.left||e,h._relative?(p=o((_.x+h.x)*a+b),y=o((_.y+h.y)*a+x)):(p=o(_.x*a+b),y=o(_.y*a+x)),e._relative?(d=o((M.x+e.x)*a+b),f=o((M.y+e.y)*a+x)):(d=o(M.x*a+b),f=o(M.y*a+x)),r.bezierCurveTo(p,y,d,f,S,C),s>=v&&m&&(c=w,D=e.controls&&e.controls.right||e,k=c.controls&&c.controls.left||c,e._relative?(p=o((D.x+e.x)*a+b),y=o((D.y+e.y)*a+x)):(p=o(D.x*a+b),y=o(D.y*a+x)),c._relative?(d=o((k.x+c.x)*a+b),f=o((k.y+c.y)*a+x)):(d=o(k.x*a+b),f=o(k.y*a+x)),S=o(c.x*a+b),C=o(c.y*a+x),r.bezierCurveTo(p,y,d,f,S,C));break;case t.Commands.line:r.lineTo(S,C);break;case t.Commands.move:w=e,r.moveTo(S,C)}}),m&&r.closePath(),r.fill(),r.stroke()},updateTexture:function(t,e){this.updateCanvas(e),e._renderer.texture&&t.deleteTexture(e._renderer.texture),t.bindBuffer(t.ARRAY_BUFFER,e._renderer.textureCoordsBuffer),e._renderer.texture=t.createTexture(),t.bindTexture(t.TEXTURE_2D,e._renderer.texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),this.canvas.width<=0||this.canvas.height<=0||t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,this.canvas)},updateBuffer:function(t,e,i){_.isObject(e._renderer.buffer)&&t.deleteBuffer(e._renderer.buffer),e._renderer.buffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,e._renderer.buffer),t.enableVertexAttribArray(i.position),t.bufferData(t.ARRAY_BUFFER,e._renderer.triangles,t.STATIC_DRAW),_.isObject(e._renderer.textureCoordsBuffer)&&t.deleteBuffer(e._renderer.textureCoordsBuffer),e._renderer.textureCoordsBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,e._renderer.textureCoordsBuffer),t.enableVertexAttribArray(i.textureCoords),t.bufferData(t.ARRAY_BUFFER,this.uv,t.STATIC_DRAW)},program:{create:function(e,i){var n,s,r;if(n=e.createProgram(),_.each(i,function(t){e.attachShader(n,t)}),e.linkProgram(n),s=e.getProgramParameter(n,e.LINK_STATUS),!s)throw r=e.getProgramInfoLog(n),e.deleteProgram(n),new t.Utils.Error("unable to link program: "+r);return n}},shaders:{create:function(e,i,n){var s,r,o;if(s=e.createShader(e[n]),e.shaderSource(s,i),e.compileShader(s),r=e.getShaderParameter(s,e.COMPILE_STATUS),!r)throw o=e.getShaderInfoLog(s),e.deleteShader(s),new t.Utils.Error("unable to compile shader "+s+": "+o);return s},types:{vertex:"VERTEX_SHADER",fragment:"FRAGMENT_SHADER"},vertex:["attribute vec2 a_position;","attribute vec2 a_textureCoords;","","uniform mat3 u_matrix;","uniform vec2 u_resolution;","","varying vec2 v_textureCoords;","","void main() {","   vec2 projected = (u_matrix * vec3(a_position, 1.0)).xy;","   vec2 normal = projected / u_resolution;","   vec2 clipspace = (normal * 2.0) - 1.0;","","   gl_Position = vec4(clipspace * vec2(1.0, -1.0), 0.0, 1.0);","   v_textureCoords = a_textureCoords;","}"].join("\n"),fragment:["precision mediump float;","","uniform sampler2D u_image;","varying vec2 v_textureCoords;","","void main() {","  gl_FragColor = texture2D(u_image, v_textureCoords);","}"].join("\n")}};a.ctx=a.canvas.getContext("2d");var l=t[t.Types.webgl]=function(e){var i,s,r,o;if(this.domElement=e.domElement||document.createElement("canvas"),this.scene=new t.Group,this.scene.parent=this,this._renderer={matrix:new t.Array(n),scale:1,opacity:1},this._flagMatrix=!0,i=_.defaults(e||{},{antialias:!1,alpha:!0,premultipliedAlpha:!0,stencil:!0,preserveDrawingBuffer:!0,overdraw:!1}),this.overdraw=i.overdraw,s=this.ctx=this.domElement.getContext("webgl",i)||this.domElement.getContext("experimental-webgl",i),!this.ctx)throw new t.Utils.Error("unable to create a webgl context. Try using another renderer.");r=a.shaders.create(s,a.shaders.vertex,a.shaders.types.vertex),o=a.shaders.create(s,a.shaders.fragment,a.shaders.types.fragment),this.program=a.program.create(s,[r,o]),s.useProgram(this.program),this.program.position=s.getAttribLocation(this.program,"a_position"),this.program.matrix=s.getUniformLocation(this.program,"u_matrix"),this.program.textureCoords=s.getAttribLocation(this.program,"a_textureCoords"),s.disable(s.DEPTH_TEST),s.enable(s.BLEND),s.blendEquationSeparate(s.FUNC_ADD,s.FUNC_ADD),s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA)};_.extend(l.prototype,Backbone.Events,{setSize:function(t,e,i){this.width=t,this.height=e,this.ratio=_.isUndefined(i)?r(this.ctx):i,this.domElement.width=t*this.ratio,this.domElement.height=e*this.ratio,_.extend(this.domElement.style,{width:t+"px",height:e+"px"}),t*=this.ratio,e*=this.ratio,this._renderer.matrix[0]=this._renderer.matrix[4]=this._renderer.scale=this.ratio,this._flagMatrix=!0,this.ctx.viewport(0,0,t,e);var n=this.ctx.getUniformLocation(this.program,"u_resolution");return this.ctx.uniform2f(n,t,e),this},render:function(){var t=this.ctx;return this.overdraw||t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),a.group.render.call(this.scene,t,this.program),this._flagMatrix=!1,this}})}(Two),function(t){var e=t.Shape=function(){this._renderer={},this.id=t.Identifier+t.uniqueId(),this.classList=[],this._matrix=new t.Matrix,this.translation=new t.Vector,this.translation.bind(t.Events.change,_.bind(e.FlagMatrix,this)),this.rotation=0,this.scale=1};_.extend(e,Backbone.Events,{FlagMatrix:function(){this._flagMatrix=!0},MakeObservable:function(t){Object.defineProperty(t,"rotation",{get:function(){return this._rotation},set:function(t){this._rotation=t,this._flagMatrix=!0}}),Object.defineProperty(t,"scale",{get:function(){return this._scale},set:function(t){this._scale=t,this._flagMatrix=!0,this._flagScale=!0}})}}),_.extend(e.prototype,{_flagMatrix:!0,_rotation:0,_scale:1,addTo:function(t){return t.add(this),this},clone:function(){var t=new e;return t.translation.copy(this.translation),t.rotation=this.rotation,t.scale=this.scale,_.each(e.Properties,function(e){t[e]=this[e]},this),t._update()},replaceParent:function(t){var e,i=this.id;return this.parent&&(delete this.parent.children[i],e=_.indexOf(parent.additions,i),e>=0&&this.parent.additions.splice(e,1),this.parent.subtractions.push(i),this._flagSubtractions=!0),t?(t.children[i]=this,this.parent=t,t.additions.push(i),t._flagAdditions=!0):delete this.parent,this},_update:function(t){return!this._matrix.manual&&this._flagMatrix&&this._matrix.identity().translate(this.translation.x,this.translation.y).scale(this.scale).rotate(this.rotation),t&&this.parent&&this.parent._update&&this.parent._update(),this},flagReset:function(){return this._flagMatrix=this._flagScale=!1,this}}),e.MakeObservable(e.prototype)}(Two),function(t){function e(e,i,n){var s,r,o,a,l,u,h,c,d=i.controls&&i.controls.right,f=e.controls&&e.controls.left;return s=i.x,l=i.y,r=(d||i).x,u=(d||i).y,o=(f||e).x,h=(f||e).y,a=e.x,c=e.y,d&&i._relative&&(r+=i.x,u+=i.y),f&&e._relative&&(o+=e.x,h+=e.y),t.Utils.getCurveLength(s,l,r,u,o,h,a,c,n)}function i(e,i,n){var s,r,o,a,l,u,h,c,d=i.controls&&i.controls.right,f=e.controls&&e.controls.left;return s=i.x,l=i.y,r=(d||i).x,u=(d||i).y,o=(f||e).x,h=(f||e).y,a=e.x,c=e.y,d&&i._relative&&(r+=i.x,u+=i.y),f&&e._relative&&(o+=e.x,h+=e.y),t.Utils.subdivide(s,l,r,u,o,h,a,c,n)}var n=Math.min,s=Math.max,r=Math.round,o=t.Utils.getComputedMatrix,a={};_.each(t.Commands,function(t,e){a[e]=new RegExp(t)});var l=t.Polygon=function(e,i,n,s){t.Shape.call(this),this._renderer.type="polygon",this._closed=!!i,this._curved=!!n,this.beginning=0,this.ending=1,this.fill="#fff",this.stroke="#000",this.linewidth=1,this.opacity=1,this.visible=!0,this.cap="butt",this.join="miter",this.miter=4,this._vertices=[],this.vertices=e,this.automatic=!s};_.extend(l,{Properties:["fill","stroke","linewidth","opacity","visible","cap","join","miter","closed","curved","automatic","beginning","ending"],FlagVertices:function(){this._flagVertices=!0,this._flagLength=!0},MakeObservable:function(e){t.Shape.MakeObservable(e),_.each(l.Properties.slice(0,8),function(t){var i="_"+t,n="_flag"+t.charAt(0).toUpperCase()+t.slice(1);Object.defineProperty(e,t,{get:function(){return this[i]},set:function(t){this[i]=t,this[n]=!0}})}),Object.defineProperty(e,"length",{get:function(){return this._flagLength&&this._updateLength(),this._length}}),Object.defineProperty(e,"closed",{get:function(){return this._closed},set:function(t){this._closed=!!t,this._flagVertices=!0}}),Object.defineProperty(e,"curved",{get:function(){return this._curved},set:function(t){this._curved=!!t,this._flagVertices=!0}}),Object.defineProperty(e,"automatic",{get:function(){return this._automatic},set:function(t){if(t!==this._automatic){this._automatic=!!t;var e=this._automatic?"ignore":"listen";_.each(this.vertices,function(t){t[e]()})}}}),Object.defineProperty(e,"beginning",{get:function(){return this._beginning},set:function(t){this._beginning=n(s(t,0),this._ending),this._flagVertices=!0}}),Object.defineProperty(e,"ending",{get:function(){return this._ending},set:function(t){this._ending=n(s(t,this._beginning),1),this._flagVertices=!0}}),Object.defineProperty(e,"vertices",{get:function(){return this._collection},set:function(e){var i=_.bind(l.FlagVertices,this),n=_.bind(function(e){for(var n=e.length;n--;)e[n].bind(t.Events.change,i);i()},this),s=_.bind(function(e){_.each(e,function(e){e.unbind(t.Events.change,i)},this),i()},this);this._collection&&this._collection.unbind(),this._collection=new t.Utils.Collection(e.slice(0)),this._collection.bind(t.Events.insert,n),this._collection.bind(t.Events.remove,s),n(this._collection)}}),Object.defineProperty(e,"clip",{get:function(){return this._clip},set:function(t){this._clip=t,this._flagClip=!0}})}}),_.extend(l.prototype,t.Shape.prototype,{_flagVertices:!0,_flagLength:!0,_flagFill:!0,_flagStroke:!0,_flagLinewidth:!0,_flagOpacity:!0,_flagVisible:!0,_flagCap:!0,_flagJoin:!0,_flagMiter:!0,_flagClip:!1,_length:0,_fill:"#fff",_stroke:"#000",_linewidth:1,_opacity:1,_visible:!0,_cap:"round",_join:"round",_miter:4,_closed:!0,_curved:!1,_automatic:!0,_beginning:0,_ending:1,_clip:!1,clone:function(e){e=e||this.parent;var i=_.map(this.vertices,function(t){return t.clone()}),n=new l(i,this.closed,this.curved,!this.automatic);return _.each(t.Shape.Properties,function(t){n[t]=this[t]},this),n.translation.copy(this.translation),n.rotation=this.rotation,n.scale=this.scale,e.add(n),n},toObject:function(){var e={vertices:_.map(this.vertices,function(t){return t.toObject()})};return _.each(t.Shape.Properties,function(t){e[t]=this[t]},this),e.translation=this.translation.toObject,e.rotation=this.rotation,e.scale=this.scale,e},noFill:function(){return this.fill="transparent",this},noStroke:function(){return this.stroke="transparent",this},corner:function(){var t=this.getBoundingClientRect(!0);return t.centroid={x:t.left+t.width/2,y:t.top+t.height/2},_.each(this.vertices,function(e){e.addSelf(t.centroid)}),this},center:function(){var t=this.getBoundingClientRect(!0);return t.centroid={x:t.left+t.width/2,y:t.top+t.height/2},_.each(this.vertices,function(e){e.subSelf(t.centroid)}),this},remove:function(){return this.parent?(this.parent.remove(this),this):this},getBoundingClientRect:function(t){this._update(!0);var e,i,r=t?this._matrix:o(this),a=this.linewidth/2,l=1/0,u=-(1/0),h=1/0,c=-(1/0);return _.each(this._vertices,function(t){e=t.x,i=t.y,t=r.multiply(e,i,1),h=n(t.y-a,h),l=n(t.x-a,l),u=s(t.x+a,u),c=s(t.y+a,c)}),{top:h,left:l,right:u,bottom:c,width:u-l,height:c-h}},getPointAt:function(e,i){for(var n,s,r,o,a,l,u,h,c,d,f,p,m=this.length*Math.min(Math.max(e,0),1),g=this.vertices.length,v=g-1,y=null,b=null,x=0,w=this._lengths.length,M=0;w>x;x++){if(M+this._lengths[x]>m){y=this.vertices[this.closed?t.Utils.mod(x,g):x],b=this.vertices[Math.min(Math.max(x-1,0),v)],m-=M,e=m/this._lengths[x];break}M+=this._lengths[x]}return _.isNull(y)||_.isNull(b)?null:(p=b.controls&&b.controls.right,f=y.controls&&y.controls.left,s=b.x,u=b.y,r=(p||b).x,h=(p||b).y,o=(f||y).x,c=(f||y).y,a=y.x,d=y.y,p&&b._relative&&(r+=b.x,h+=b.y),f&&y._relative&&(o+=y.x,c+=y.y),n=t.Utils.getPointOnCubicBezier(e,s,r,o,a),l=t.Utils.getPointOnCubicBezier(e,u,h,c,d),_.isObject(i)?(i.x=n,i.y=l,i):new t.Vector(n,l))},plot:function(){if(this.curved)return t.Utils.getCurveFromPoints(this._vertices,this.closed),this;for(var e=0;e<this._vertices.length;e++)this._vertices[e]._command=0===e?t.Commands.move:t.Commands.line;return this},subdivide:function(e){this._update();var n=this.vertices.length-1,s=this.vertices[n],r=this._closed||this.vertices[n]._command===t.Commands.close,o=[];return _.each(this.vertices,function(a,l){if(0>=l&&!r)return void(s=a);if(a.command===t.Commands.move)return o.push(new t.Anchor(s.x,s.y)),l>0&&(o[o.length-1].command=t.Commands.line),void(s=a);var u=i(a,s,e);o=o.concat(u),_.each(u,function(e,i){0>=i&&s.command===t.Commands.move?e.command=t.Commands.move:e.command=t.Commands.line}),l>=n&&(this._closed&&this._automatic?(s=a,u=i(a,s,e),o=o.concat(u),_.each(u,function(e,i){0>=i&&s.command===t.Commands.move?e.command=t.Commands.move:e.command=t.Commands.line})):r&&o.push(new t.Anchor(a.x,a.y)),o[o.length-1].command=r?t.Commands.close:t.Commands.line),s=a},this),this._automatic=!1,this._curved=!1,this.vertices=o,this},_updateLength:function(i){this._update();var n=this.vertices.length-1,s=this.vertices[n],r=this._closed||this.vertices[n]._command===t.Commands.close,o=0;return _.isUndefined(this._lengths)&&(this._lengths=[]),_.each(this.vertices,function(a,l){return 0>=l&&!r||a.command===t.Commands.move?(s=a,void(this._lengths[l]=0)):(this._lengths[l]=e(a,s,i),o+=this._lengths[l],l>=n&&r&&(s=a,this._lengths[l+1]=e(a,s,i),o+=this._lengths[l+1]),void(s=a))},this),this._length=o,this},_update:function(){if(this._flagVertices){var e,i=this.vertices.length,n=i-1,s=r(this._beginning*n),o=r(this._ending*n);this._vertices.length=0;for(var a=s;o+1>a;a++)e=this.vertices[a],this._vertices.push(e);this._automatic&&this.plot()}return t.Shape.prototype._update.call(this),this},flagReset:function(){return this._flagVertices=this._flagFill=this._flagStroke=this._flagLinewidth=this._flagOpacity=this._flagVisible=this._flagCap=this._flagJoin=this._flagMiter=this._flagClip=!1,t.Shape.prototype.flagReset.call(this),this}}),l.MakeObservable(l.prototype)}(Two),function(t){var e=Math.min,i=Math.max,n=t.Group=function(){t.Shape.call(this,!0),this._renderer.type="group",this.additions=[],this.subtractions=[],this.children={}};_.extend(n,{MakeObservable:function(e){var i=t.Polygon.Properties.slice(0),s=_.indexOf(i,"opacity");s>=0&&(i.splice(s,1),Object.defineProperty(e,"opacity",{get:function(){return this._opacity},set:function(t){this._opacity=t,this._flagOpacity=!0}})),t.Shape.MakeObservable(e),n.MakeGetterSetters(e,i),Object.defineProperty(e,"mask",{get:function(){return this._mask},set:function(t){this._mask=t,this._flagMask=!0,t.clip||(t.clip=!0)}})},MakeGetterSetters:function(t,e){_.isArray(e)||(e=[e]),_.each(e,function(e){n.MakeGetterSetter(t,e)})},MakeGetterSetter:function(t,e){var i="_"+e;Object.defineProperty(t,e,{get:function(){return this[i]},set:function(t){this[i]=t,_.each(this.children,function(i){
i[e]=t})}})}}),_.extend(n.prototype,t.Shape.prototype,{_flagAdditions:!1,_flagSubtractions:!1,_flagOpacity:!0,_flagMask:!1,_fill:"#fff",_stroke:"#000",_linewidth:1,_opacity:1,_visible:!0,_cap:"round",_join:"round",_miter:4,_closed:!0,_curved:!1,_automatic:!0,_beginning:0,_ending:1,_mask:null,clone:function(t){t=t||this.parent;var e=new n;t.add(e);_.map(this.children,function(t){return t.clone(e)});return e.translation.copy(this.translation),e.rotation=this.rotation,e.scale=this.scale,e},toObject:function(){var t={children:{},translation:this.translation.toObject(),rotation:this.rotation,scale:this.scale};return _.each(this.children,function(e,i){t.children[i]=e.toObject()},this),t},corner:function(){var t=this.getBoundingClientRect(!0),e={x:t.left,y:t.top};return _.each(this.children,function(t){t.translation.subSelf(e)}),this},center:function(){var t=this.getBoundingClientRect(!0);return t.centroid={x:t.left+t.width/2,y:t.top+t.height/2},_.each(this.children,function(e){e.translation.subSelf(t.centroid)}),this},getById:function(t){var e=function(t,i){if(t.id===i)return t;for(var n in t.children){var s=e(t.children[n],i);if(s)return s}};return e(this,t)||null},getByClassName:function(t){var e=[],i=function(t,n){-1!=t.classList.indexOf(n)&&e.push(t);for(var s in t.children)i(t.children[s],n);return e};return i(this,t)},getByType:function(e){var i=[],n=function(e,s){for(var r in e.children)e.children[r]instanceof s?i.push(e.children[r]):e.children[r]instanceof t.Group&&n(e.children[r],s);return i};return n(this,e)},add:function(t){var e,i,n,s=(arguments.length,this.children),r=(this.parent,this.additions);return _.isArray(t)||(t=_.toArray(arguments)),_.each(t,function(t){t&&(e=t.id,i=t.parent,_.isUndefined(s[e])&&(i&&(delete i.children[e],n=_.indexOf(i.additions,e),n>=0&&i.additions.splice(n,1)),s[e]=t,t.parent=this,r.push(e),this._flagAdditions=!0))},this),this},remove:function(t){var e,i,n,s,r=arguments.length,o=this.children,a=this.parent,l=this.subtractions;return 0>=r&&a?(a.remove(this),this):(_.isArray(t)||(t=_.toArray(arguments)),_.each(t,function(t){e=t.id,s=t.children,i=t.parent,e in o&&(delete o[e],delete t.parent,n=_.indexOf(i.additions,e),n>=0&&i.additions.splice(n,1),l.push(e),this._flagSubtractions=!0)},this),this)},getBoundingClientRect:function(){var t;this._update(!0);var n=1/0,s=-(1/0),r=1/0,o=-(1/0);return _.each(this.children,function(a){t=a.getBoundingClientRect(),_.isNumber(t.top)&&_.isNumber(t.left)&&_.isNumber(t.right)&&_.isNumber(t.bottom)&&(r=e(t.top,r),n=e(t.left,n),s=i(t.right,s),o=i(t.bottom,o))},this),{top:r,left:n,right:s,bottom:o,width:s-n,height:o-r}},noFill:function(){return _.each(this.children,function(t){t.noFill()}),this},noStroke:function(){return _.each(this.children,function(t){t.noStroke()}),this},subdivide:function(){var t=arguments;return _.each(this.children,function(e){e.subdivide.apply(e,t)}),this},flagReset:function(){return this._flagAdditions&&(this.additions.length=0,this._flagAdditions=!1),this._flagSubtractions&&(this.subtractions.length=0,this._flagSubtractions=!1),this._flagMask=this._flagOpacity=!1,t.Shape.prototype.flagReset.call(this),this}}),n.MakeObservable(n.prototype)}(Two),define("levels/honours",["require"],function(t){var e=[{levelName:"First Steps",springBack:!0,dots:[{id:1,colour:"blue"},{id:2,colour:"blue"}],shadows:[{id:1,x:200,y:-100,colour:"blue"},{id:2,x:-200,y:100,colour:"blue"}],connections:[],accepts:[[{dot:1,shadow:1},{dot:2,shadow:2}],[{dot:1,shadow:2},{dot:2,shadow:1}]]},{levelName:"Learn to share",springBack:!0,dots:[{id:1,colour:"green"},{id:2,colour:"green"},{id:3,colour:"green"},{id:4,colour:"green"}],shadows:[{id:1,x:-400,y:300,colour:"green"},{id:2,x:-400,y:-300,colour:"green"},{id:3,x:400,y:300,colour:"green"},{id:4,x:400,y:-300,colour:"green"}],connections:[],accepts:"allColourAllConnections"},{levelName:"Line 'em up",springBack:!0,dots:[{id:1,colour:"orange"},{id:2,colour:"orange"},{id:3,colour:"orange"},{id:4,colour:"orange"}],shadows:[{id:1,x:-300,y:300,colour:"orange"},{id:2,x:-300,y:-300,colour:"orange"},{id:3,x:300,y:300,colour:"orange"},{id:4,x:300,y:-300,colour:"orange"}],connections:[{from:1,to:2},{from:1,to:3},{from:1,to:4}],accepts:"allColourAllConnections"},{levelName:"The Valley",springBack:!0,dots:[{id:1,colour:"blue"},{id:2,colour:"purple"},{id:3,colour:"orange"}],shadows:[{id:1,x:300,y:-300,colour:"blue"},{id:2,x:0,y:300,colour:"purple"},{id:3,x:-300,y:-300,colour:"orange"}],connections:[],accepts:"idMatch"},{levelName:"Boxxy",springBack:!0,dots:[{id:1,colour:"red"},{id:2,colour:"red"},{id:3,colour:"purple"},{id:4,colour:"purple"}],shadows:[{id:1,x:-400,y:300,colour:"red"},{id:2,x:-400,y:-300,colour:"red"},{id:3,x:400,y:300,colour:"purple"},{id:4,x:400,y:-300,colour:"purple"}],connections:[{from:1,to:2},{from:2,to:3},{from:2,to:4},{from:4,to:3}],accepts:"allColourAllConnections"},{levelName:"A cross the universe",springBack:!0,dots:[{id:1,colour:"blue"},{id:2,colour:"blue"},{id:3,colour:"blue"},{id:4,colour:"blue"}],shadows:[{id:1,x:-50,y:-300,colour:"blue"},{id:2,x:50,y:300,colour:"blue"},{id:3,x:-200,y:-50,colour:"blue"},{id:4,x:200,y:50,colour:"blue"}],connections:[{from:1,to:2},{from:3,to:4}],accepts:[[{dot:1,shadow:1},{dot:2,shadow:2},{dot:3,shadow:3},{dot:4,shadow:4}],[{dot:1,shadow:1},{dot:2,shadow:2},{dot:3,shadow:4},{dot:4,shadow:3}],[{dot:1,shadow:2},{dot:2,shadow:1},{dot:3,shadow:3},{dot:4,shadow:4}],[{dot:1,shadow:2},{dot:2,shadow:1},{dot:3,shadow:4},{dot:4,shadow:3}],[{dot:1,shadow:3},{dot:2,shadow:4},{dot:3,shadow:1},{dot:4,shadow:2}],[{dot:1,shadow:3},{dot:2,shadow:4},{dot:3,shadow:2},{dot:4,shadow:1}],[{dot:1,shadow:4},{dot:2,shadow:3},{dot:3,shadow:1},{dot:4,shadow:2}],[{dot:1,shadow:4},{dot:2,shadow:3},{dot:3,shadow:2},{dot:4,shadow:1}]]},{levelName:"Star",springBack:!0,dots:[{id:1,colour:"green"},{id:2,colour:"purple"},{id:3,colour:"purple"},{id:4,colour:"purple"},{id:5,colour:"purple"}],shadows:[{id:1,x:200,y:260,colour:"green"},{id:2,x:-200,y:260,colour:"purple"},{id:3,x:-260,y:-120,colour:"purple"},{id:4,x:0,y:-330,colour:"purple"},{id:5,x:260,y:-120,colour:"purple"}],connections:[{from:1,to:3},{from:3,to:5},{from:5,to:2},{from:2,to:4},{from:4,to:1}],accepts:[[{dot:1,shadow:1},{dot:2,shadow:2},{dot:3,shadow:3},{dot:4,shadow:4},{dot:5,shadow:5}],[{dot:1,shadow:1},{dot:2,shadow:5},{dot:3,shadow:4},{dot:4,shadow:3},{dot:5,shadow:2}]]},{levelName:"Scaffold",springBack:!0,dots:[{id:1,colour:"green"},{id:2,colour:"purple"},{id:3,colour:"green"},{id:4,colour:"blue"},{id:5,colour:"blue"}],shadows:[{id:1,x:-400,y:-200,colour:"green"},{id:2,x:0,y:-200,colour:"purple"},{id:3,x:400,y:-200,colour:"green"},{id:4,x:-400,y:200,colour:"blue"},{id:5,x:0,y:200,colour:"blue"}],connections:[{from:1,to:2},{from:2,to:3},{from:2,to:4},{from:2,to:5},{from:3,to:5},{from:4,to:5}],accepts:"idMatch"},{levelName:"Spliterator",springBack:!0,dots:[{id:1,colour:"purple"},{id:2,colour:"purple"},{id:3,colour:"cyan"},{id:4,colour:"cyan"},{id:5,colour:"red"},{id:6,colour:"orange"}],shadows:[{id:1,x:-100,y:200,colour:"purple"},{id:2,x:100,y:-100,colour:"purple"},{id:3,x:-300,y:-100,colour:"cyan"},{id:4,x:300,y:-100,colour:"cyan"},{id:5,x:100,y:200,colour:"red"},{id:6,x:-100,y:-100,colour:"orange"}],connections:[{from:1,to:6},{from:6,to:3},{from:3,to:1},{from:2,to:4},{from:4,to:5},{from:5,to:2}],accepts:"idMatch"},{levelName:"Prismatic",springBack:!0,dots:[{id:1,colour:"orange"},{id:2,colour:"purple"},{id:3,colour:"purple"},{id:4,colour:"orange"},{id:5,colour:"green"},{id:6,colour:"green"}],shadows:[{id:1,x:-300,y:-200,colour:"orange"},{id:2,x:300,y:-200,colour:"purple"},{id:3,x:-200,y:50,colour:"purple"},{id:4,x:400,y:50,colour:"orange"},{id:5,x:-400,y:200,colour:"green"},{id:6,x:200,y:200,colour:"green"}],connections:[{from:1,to:2},{from:3,to:4},{from:5,to:6},{from:1,to:3},{from:1,to:5},{from:2,to:4},{from:2,to:6},{from:3,to:5},{from:4,to:6}],accepts:[[{dot:1,shadow:1},{dot:2,shadow:2},{dot:3,shadow:3},{dot:4,shadow:4},{dot:5,shadow:5},{dot:6,shadow:6}],[{dot:1,shadow:4},{dot:2,shadow:3},{dot:3,shadow:2},{dot:4,shadow:1},{dot:5,shadow:6},{dot:6,shadow:5}]]},{levelName:"Helix",springBack:!0,dots:[{id:1,colour:"purple"},{id:2,colour:"purple"},{id:3,colour:"purple"},{id:4,colour:"orange"},{id:5,colour:"orange"},{id:6,colour:"orange"}],shadows:[{id:1,x:-200,y:-250,colour:"purple"},{id:2,x:-200,y:0,colour:"purple"},{id:3,x:-200,y:250,colour:"purple"},{id:4,x:200,y:-250,colour:"orange"},{id:5,x:200,y:0,colour:"orange"},{id:6,x:200,y:250,colour:"orange"}],connections:[{from:1,to:4},{from:1,to:5},{from:2,to:4},{from:2,to:5},{from:2,to:6},{from:3,to:5},{from:3,to:6}],accepts:[[{dot:1,shadow:1},{dot:2,shadow:2},{dot:3,shadow:3},{dot:4,shadow:4},{dot:5,shadow:5},{dot:6,shadow:6}],[{dot:1,shadow:3},{dot:2,shadow:2},{dot:3,shadow:1},{dot:4,shadow:6},{dot:5,shadow:5},{dot:6,shadow:4}]]},{levelName:"Cat's in the cradle",springBack:!0,dots:[{id:1,colour:"yellow"},{id:2,colour:"yellow"},{id:3,colour:"blue"},{id:4,colour:"blue"},{id:5,colour:"purple"},{id:6,colour:"purple"}],shadows:[{id:1,x:-250,y:-350,colour:"yellow"},{id:2,x:250,y:350,colour:"yellow"},{id:3,x:-300,y:0,colour:"blue"},{id:4,x:300,y:0,colour:"blue"},{id:5,x:-300,y:350,colour:"purple"},{id:6,x:300,y:-350,colour:"purple"}],connections:[{from:1,to:6},{from:1,to:4},{from:1,to:2},{from:6,to:4},{from:6,to:5},{from:3,to:4},{from:3,to:5},{from:5,to:2}],accepts:"idMatch"},{levelName:"Pom pom",springBack:!0,dots:[{id:1,colour:"red"},{id:2,colour:"red"},{id:3,colour:"red"},{id:4,colour:"red"}],shadows:[{id:1,x:-400,y:300,colour:"red"},{id:2,x:0,y:300,colour:"red"},{id:3,x:400,y:300,colour:"red"},{id:4,x:0,y:-300,colour:"red"}],connections:[{from:1,to:2},{from:1,to:4},{from:2,to:4},{from:4,to:3}],accepts:[[{dot:1,shadow:1},{dot:2,shadow:2},{dot:3,shadow:3},{dot:4,shadow:4}],[{dot:1,shadow:2},{dot:2,shadow:1},{dot:3,shadow:3},{dot:4,shadow:4}]]},{levelName:"Learn you a dot",springBack:!0,dots:[{id:1,colour:"green"},{id:2,colour:"orange"},{id:3,colour:"orange"},{id:4,colour:"green"},{id:5,colour:"orange"}],shadows:[{id:1,x:200,y:260,colour:"green"},{id:2,x:-200,y:260,colour:"orange"},{id:3,x:-260,y:-120,colour:"orange"},{id:4,x:0,y:-330,colour:"green"},{id:5,x:260,y:-120,colour:"orange"}],connections:[{from:1,to:2},{from:2,to:3},{from:3,to:4},{from:4,to:5},{from:5,to:1}],accepts:[[{dot:1,shadow:1},{dot:2,shadow:2},{dot:3,shadow:3},{dot:4,shadow:4},{dot:5,shadow:5}],[{dot:1,shadow:4},{dot:2,shadow:3},{dot:3,shadow:2},{dot:4,shadow:1},{dot:5,shadow:5}]]},{levelName:"Dial M for Multitouch",springBack:!0,dots:[{id:1,colour:"indigo"},{id:2,colour:"indigo"},{id:3,colour:"indigo"},{id:4,colour:"orange"},{id:5,colour:"orange"}],shadows:[{id:1,x:-250,y:200,colour:"indigo"},{id:2,x:-250,y:-200,colour:"indigo"},{id:3,x:250,y:-200,colour:"indigo"},{id:4,x:0,y:200,colour:"orange"},{id:5,x:250,y:200,colour:"orange"}],connections:[{from:1,to:2},{from:2,to:4},{from:4,to:3},{from:3,to:5}],accepts:"idMatch"},{levelName:"Yarn",springBack:!0,dots:[{id:1,colour:"orange"},{id:2,colour:"orange"},{id:3,colour:"orange"},{id:4,colour:"blue"},{id:5,colour:"blue"},{id:6,colour:"blue"}],shadows:[{id:1,x:-250,y:-200,colour:"orange"},{id:2,x:0,y:-200,colour:"orange"},{id:3,x:250,y:-200,colour:"orange"},{id:4,x:-250,y:200,colour:"blue"},{id:5,x:0,y:200,colour:"blue"},{id:6,x:250,y:200,colour:"blue"}],connections:[{from:1,to:4},{from:1,to:5},{from:2,to:4},{from:2,to:5},{from:2,to:6},{from:3,to:5},{from:3,to:6}],accepts:[[{dot:1,shadow:1},{dot:2,shadow:2},{dot:3,shadow:3},{dot:4,shadow:4},{dot:5,shadow:5},{dot:6,shadow:6}],[{dot:1,shadow:3},{dot:2,shadow:2},{dot:3,shadow:1},{dot:4,shadow:6},{dot:5,shadow:5},{dot:6,shadow:4}]]},{levelName:"Pyramid",springBack:!0,dots:[{id:1,colour:"teal"},{id:2,colour:"teal"},{id:3,colour:"teal"},{id:4,colour:"teal"},{id:5,colour:"teal"}],shadows:[{id:1,x:0,y:-300,colour:"teal"},{id:2,x:-200,y:50,colour:"teal"},{id:3,x:200,y:0,colour:"teal"},{id:4,x:-175,y:250,colour:"teal"},{id:5,x:225,y:200,colour:"teal"}],connections:[{from:1,to:2},{from:1,to:3},{from:1,to:4},{from:1,to:5},{from:2,to:4},{from:3,to:5},{from:4,to:5},{from:3,to:2}],accepts:[[{dot:1,shadow:1},{dot:2,shadow:2},{dot:3,shadow:3},{dot:4,shadow:4},{dot:5,shadow:5}],[{dot:1,shadow:1},{dot:2,shadow:3},{dot:3,shadow:5},{dot:4,shadow:2},{dot:5,shadow:4}],[{dot:1,shadow:1},{dot:2,shadow:5},{dot:3,shadow:4},{dot:4,shadow:3},{dot:5,shadow:2}],[{dot:1,shadow:1},{dot:2,shadow:4},{dot:3,shadow:2},{dot:4,shadow:5},{dot:5,shadow:3}],[{dot:1,shadow:1},{dot:2,shadow:3},{dot:3,shadow:2},{dot:4,shadow:5},{dot:5,shadow:4}],[{dot:1,shadow:1},{dot:2,shadow:4},{dot:3,shadow:5},{dot:4,shadow:2},{dot:5,shadow:3}],[{dot:1,shadow:1},{dot:2,shadow:5},{dot:3,shadow:3},{dot:4,shadow:4},{dot:5,shadow:2}],[{dot:1,shadow:1},{dot:2,shadow:2},{dot:3,shadow:4},{dot:4,shadow:3},{dot:5,shadow:5}]]},{levelName:"Neigh neigh",springBack:!0,dots:[{id:1,colour:"blue"},{id:2,colour:"blue"},{id:3,colour:"blue"},{id:4,colour:"blue"},{id:5,colour:"blue"},{id:6,colour:"blue"},{id:7,colour:"blue"}],shadows:[{id:1,x:-475,y:-225,colour:"blue"},{id:2,x:-375,y:-350,colour:"blue"},{id:3,x:-100,y:-50,colour:"blue"},{id:4,x:-175,y:150,colour:"blue"},{id:5,x:100,y:-50,colour:"blue"},{id:6,x:125,y:175,colour:"blue"},{id:7,x:325,y:-100,colour:"blue"}],connections:[{from:1,to:2},{from:2,to:3},{from:3,to:4},{from:3,to:5},{from:5,to:6},{from:5,to:7}],accepts:[[{dot:1,shadow:1},{dot:2,shadow:2},{dot:3,shadow:3},{dot:4,shadow:4},{dot:5,shadow:5},{dot:6,shadow:6},{dot:7,shadow:7}],[{dot:1,shadow:1},{dot:2,shadow:2},{dot:3,shadow:3},{dot:4,shadow:4},{dot:5,shadow:5},{dot:6,shadow:7},{dot:7,shadow:6}]]},{levelName:"Orion",springBack:!0,dots:[{id:1,colour:"orange"},{id:2,colour:"orange"},{id:3,colour:"orange"},{id:4,colour:"purple"},{id:5,colour:"green"},{id:6,colour:"green"},{id:7,colour:"purple"}],shadows:[{id:1,x:0,y:-375,colour:"orange"},{id:2,x:-200,y:-300,colour:"orange"},{id:3,x:200,y:-280,colour:"orange"},{id:4,x:-150,y:50,colour:"purple"},{id:5,x:100,y:50,colour:"green"},{id:6,x:-150,y:200,colour:"green"},{id:7,x:150,y:200,colour:"purple"}],connections:[{from:1,to:2},{from:2,to:3},{from:3,to:1},{from:2,to:4},{from:3,to:5},{from:4,to:5},{from:4,to:6},{from:5,to:7},{from:6,to:7}],accepts:"idMatch"}];return e}),define("DotsGame",["require","jquery","./behaviour/Animate","gl-matrix","behaviour/MultiTouchManager","behaviour/DraggableBehaviour","underscore","jquery-ui","two","./levels/honours"],function(t){"use strict";var e=t("jquery"),i=t("./behaviour/Animate").getInstance(),n=t("gl-matrix"),s=t("behaviour/MultiTouchManager"),r=t("behaviour/DraggableBehaviour"),o=(t("underscore"),t("jquery-ui"),t("two")),a=t("./levels/honours"),l=!1,u={elements:e(),multitouch:void 0,gameState:{level:0,startTime:void 0},two:void 0,shadowTwo:void 0,timings:[],start:function(){this._initialise(),this._renderLevel()},_initialise:function(){this.gameState={level:0,startTime:void 0},this.multitouch=s.getInstance();var t={fullscreen:!0,autostart:!0};this.two=new o(t),this.shadowTwo=new o(t)},_renderLevel:function(){this._setupPlayArea(),this._loadLevel(),this._renderItems()},_setupPlayArea:function(){this.two.clear(),this.shadowTwo.clear(),e("#dotsLayer").empty(),e("#linesLayer").empty(),e("#shadowDotsLayer").empty(),e("#shadowLinesLayer").empty(),this.two.appendTo(e("#linesLayer")[0]),this.shadowTwo.appendTo(e("#shadowLinesLayer")[0])},_loadLevel:function(){var t=a[this.gameState.level];this.gameState.dots=t.dots,this.gameState.shadowDots=t.shadows,this.gameState.connections=t.connections,this.gameState.accepts=t.accepts},_renderItems:function(){function t(t){return'<button id="dots-'+t.id+'" class="btn btn-raised btn-material-'+t.colour+'-500 dots"></button>'}function s(t){return'<button id="shadow-'+t.id+'" class="btn btn-raised btn-material-'+t.colour+'-200 dots"></button>'}var o=this;this.gameState.dots.forEach(function(i){var s=e(t(i));s.addClass("abs-center").appendTo(e("#dotsLayer")),s.css("transform",[n.vec3.fromValues(0,0,0),n.vec3.fromValues(1,1,1),0]),s.on("touchend",!0,o.onTouchEnd.bind(o)),s.on("mouseup",l,o.onTouchEnd.bind(o)),s.on("mouseup",l,o.onTouchMove.bind(o)),s.on("touchmove",!0,o.onTouchMove.bind(o));var a=o.multitouch.addElement(s),u=new r(a);a.addBehaviour(u),n.vec3.copy(u.translation,n.vec3.fromValues(0,0,0)),n.vec3.copy(u.scale,n.vec3.fromValues(1,1,1)),n.vec3.copy(u.rotation,0),u.needsUpdate(),o.elements=o.elements.add(s)}),this.gameState.shadowDots.forEach(function(t){var n=e(s(t));n.addClass("abs-center").appendTo(e("#shadowDotsLayer"));var r=[t.x,t.y,0],o=r.map(function(t){return t+"px"});i.move(n,{css:{transform:"translate3d("+o.toString()+")"}})}),this.gameState.connections.forEach(function(t){t.line=o.two.makeLine(0,0,0,0),t.line.linewidth=16,t.line.stroke="rgba(255, 150, 15, 1)",t.shadowLine=o.shadowTwo.makeLine(0,0,0,0),t.shadowLine.linewidth=16,t.shadowLine.stroke="rgba(255, 150, 15, 0.5)";var i=e("#shadow-"+t.from)[0].getBoundingClientRect(),n=e("#shadow-"+t.to)[0].getBoundingClientRect();t.shadowLine.vertices[0].x=i.left+i.width/2,t.shadowLine.vertices[0].y=i.top+i.height/2,t.shadowLine.vertices[1].x=n.left+n.width/2,t.shadowLine.vertices[1].y=n.top+n.height/2}),o.two.bind("update",function(t){o.gameState.connections.forEach(function(t){var i=e("#dots-"+t.from)[0].getBoundingClientRect(),n=e("#dots-"+t.to)[0].getBoundingClientRect();t.line.vertices[0].x=i.left+i.width/2,t.line.vertices[0].y=i.top+i.height/2,t.line.vertices[1].x=n.left+n.width/2,t.line.vertices[1].y=n.top+n.height/2;var s=e("#shadow-"+t.from)[0].getBoundingClientRect(),r=e("#shadow-"+t.to)[0].getBoundingClientRect();t.shadowLine.vertices[0].x=s.left+s.width/2,t.shadowLine.vertices[0].y=s.top+s.height/2,t.shadowLine.vertices[1].x=r.left+r.width/2,t.shadowLine.vertices[1].y=r.top+r.height/2})})},onTouchEnd:function(t){var s=e(t.target),o=this.multitouch.elements,l=this;o.filter(function(t){return t.element[0]===s[0]}).map(function(t){return t.behaviours}).map(function(e){e.forEach(function(e){e.__proto__===r.prototype&&e.touchCount<2&&t.data===!0&&a[l.gameState.level].springBack===!0&&i.move(s,{animate:{easing:"linear",duration:120,transform:"translate3d(0, 0, 0)",queue:!1,complete:function(){n.vec3.copy(e.translation,n.vec3.fromValues(0,0,0))}}})})})},onTouchMove:function(t){void 0===this.gameState.startTime&&(this.gameState.startTime=new Date);var i=e(t.target),n=this.multitouch.elements,s=this.gameState.dots.filter(function(t){return t.id===parseInt(i.attr("id").slice(-1))}).map(function(t){return t})[0],o=[0,0,0];if(void 0!==s){n.filter(function(t){return t.element[0]===i[0]}).map(function(t){return t.behaviours}).map(function(t){t.forEach(function(t){t.__proto__===r.prototype&&(o=t.translation)})}),s.x=o[0],s.y=o[1];var a=this;this.gameState.shadowDots.forEach(function(t){a._withinBounds(s,t)&&t.colour==s.colour&&(t.lastAccepted=s.id)});var l=this.gameState.shadowDots.filter(function(t){return void 0===t.lastAccepted});0===l.length&&this._inWinningConfiguration()&&(this._addTimingData(),this.gameState.dots.forEach(function(t){var i=e("#dots-"+t.id);void 0!==i&&(i[0].removeEventListener("touchend",a.onTouchEnd,!1),i[0].removeEventListener("mouseup",a.onTouchEnd,!1),i[0].removeEventListener("touchmove",a.onTouchEnd,!1))}),this.gameState.level++,this._renderLevel())}},_updateShadowAcceptances:function(){var t=this;t.gameState.shadowDots.forEach(function(e){e.lastAccepted=void 0,t.gameState.dots.forEach(function(i){t._withinBounds(i,e)&&e.colour==i.colour&&(e.lastAccepted=i.id)})})},_withinBounds:function(t,e){return!!(t.x<e.x+25&&t.x>e.x-25&&t.y<e.y+25&&t.y>e.y-25)},_addTimingData:function(){var t=new Date;this.timings.push({level:this.gameState.level,levelName:a[this.gameState.level].levelName,startTime:this.gameState.startTime,endTime:t,timeTaken:t.getTime()-this.gameState.startTime.getTime(),collaborating:a[this.gameState.level].springBack})},_inWinningConfiguration:function(){this._updateShadowAcceptances();var t=!1,e=this;if(e.gameState.accepts instanceof Array)t=e.gameState.accepts.filter(function(t){var i=t.filter(function(t){var i=e.gameState.dots.find(function(e){return e.id===t.dot}),n=e.gameState.shadowDots.find(function(e){return e.id===t.shadow});return e._withinBounds(i,n)?!0:void 0});return i.length===e.gameState.dots.length});else{if("allColourAllConnections"===e.gameState.accepts){var i=e.gameState.shadowDots.filter(function(t){var i=e.gameState.dots.find(function(e){return e.id==t.lastAccepted}),n=e.gameState.connections.filter(function(t){return t.from===i.id||t.to===i.id}).length,s=e.gameState.connections.filter(function(e){return e.from===t.id||e.to===t.id}).length;return void 0!==t.lastAccepted&&n===s});return!!i&&i.length===this.gameState.shadowDots.length}if("idMatch"===this.gameState.accepts){var i=this.gameState.shadowDots.filter(function(t){return t.id===t.lastAccepted});return!!i&&i.length===this.gameState.shadowDots.length}}return t&&t.length>0}};return u}),requirejs(["DotsGame"],function(t){t.start()}),define("dots.js",function(){});
//# sourceMappingURL=dots.js.build.js.map
//# sourceMappingURL=data:application/json;base64,
